<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>题单</title>
    <url>/List/</url>
    <content><![CDATA[<blockquote>
<p>List</p>
</blockquote>
<a id="more"></a>
<p>换言之，您可以自由的共享并演绎该项目，但是必须给出必要的署名，并以相同方式共享本项目，并为本项目的 <a href="https://github.com/SFOI-Team/luogu-problem-list" target="_blank" rel="noopener">Github 仓库</a> 点赞（Star）。</p>
<h2 id="指南"><a href="#指南" class="headerlink" title="指南"></a>指南</h2><ul>
<li>对于初学者，建议先完成 Part 1,2 两部分内容，为接下来的学习打好基础。</li>
<li>对于要参加 CSP-S 的选手，建议在前面的基础上优先完成 Part 3.1-3.4, 4.1-4.4, 6.1-6.5, 7.1-7.8, 8.1-8.7 的内容（具体内容见下），在此基础上继续完成其他内容。</li>
<li>每个专题下的题目先给出模板，剩下的题目均按照难度递增顺序排序，部分难度较高的综合性题目建议达到一定能力后再尝试解决。</li>
</ul>
<h2 id="Part-0-试机题"><a href="#Part-0-试机题" class="headerlink" title="Part 0 试机题"></a>Part 0 试机题</h2><blockquote>
<p>三道试机题目。</p>
</blockquote>
<div class="note success">
            <ul><li><a href="https://www.luogu.com.cn/problem/P1000" target="_blank" rel="noopener">P1000 超级玛丽游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P1001" target="_blank" rel="noopener">P1001 A+B Problem</a></li><li><a href="https://www.luogu.com.cn/problem/P1008" target="_blank" rel="noopener">P1008 三连击</a></li></ul>
          </div>
<h2 id="Part-1-入门阶段"><a href="#Part-1-入门阶段" class="headerlink" title="Part 1 入门阶段"></a>Part 1 入门阶段</h2><blockquote>
<p>本部分内容针对入门 OIer ，主要是语言基础内容。</p>
</blockquote>
<h3 id="Part-1-1-从零开始"><a href="#Part-1-1-从零开始" class="headerlink" title="Part 1.1 从零开始"></a>Part 1.1 从零开始</h3><blockquote>
<p>语言基础题。</p>
</blockquote>
<div class="note success">
            <ul><li><a href="https://www.luogu.com.cn/problem/P1421" target="_blank" rel="noopener">P1421 小玉买文具</a></li><li><a href="https://www.luogu.com.cn/problem/P1909" target="_blank" rel="noopener">P1909 买铅笔</a></li><li><a href="https://www.luogu.com.cn/problem/P1089" target="_blank" rel="noopener">P1089 津津的储蓄计划</a></li><li><a href="https://www.luogu.com.cn/problem/P1085" target="_blank" rel="noopener">P1085 不高兴的津津</a></li><li><a href="https://www.luogu.com.cn/problem/P1035" target="_blank" rel="noopener">P1035 级数求和</a></li><li><a href="https://www.luogu.com.cn/problem/P1980" target="_blank" rel="noopener">P1980 计数问题</a></li><li><a href="https://www.luogu.com.cn/problem/P1014" target="_blank" rel="noopener">P1014 Cantor表</a></li><li><a href="https://www.luogu.com.cn/problem/P1307" target="_blank" rel="noopener">P1307 数字反转</a></li></ul>
          </div>
<h3 id="Part-1-2-数组基础"><a href="#Part-1-2-数组基础" class="headerlink" title="Part 1.2 数组基础"></a>Part 1.2 数组基础</h3><blockquote>
<p>数组可以用于存储大量的信息。</p>
</blockquote>
<div class="note success">
            <ul><li><a href="https://www.luogu.com.cn/problem/P1046" target="_blank" rel="noopener">P1046 陶陶摘苹果</a></li><li><a href="https://www.luogu.com.cn/problem/P1047" target="_blank" rel="noopener">P1047 校门外的树</a></li><li><a href="https://www.luogu.com.cn/problem/P1427" target="_blank" rel="noopener">P1427 小鱼的数字游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P2141" target="_blank" rel="noopener">P2141 珠心算测验</a></li><li><a href="https://www.luogu.com.cn/problem/P5594" target="_blank" rel="noopener">P5594 【XR-4】 模拟赛</a></li></ul>
          </div>
<h3 id="Part-1-3-字符串基础"><a href="#Part-1-3-字符串基础" class="headerlink" title="Part 1.3 字符串基础"></a>Part 1.3 字符串基础</h3><blockquote>
<p>字符串是特殊的数组，但它也有很多自身的特点。</p>
</blockquote>
<div class="note success">
            <ul><li><a href="https://www.luogu.com.cn/problem/P5015" target="_blank" rel="noopener">P5015 标题统计</a></li><li><a href="https://www.luogu.com.cn/problem/P1055" target="_blank" rel="noopener">P1055 ISBN号码</a></li><li><a href="https://www.luogu.com.cn/problem/P1308" target="_blank" rel="noopener">P1308 统计单词数</a></li><li><a href="https://www.luogu.com.cn/problem/P2010" target="_blank" rel="noopener">P2010 回文日期</a></li><li><a href="https://www.luogu.com.cn/problem/P1012" target="_blank" rel="noopener">P1012 拼数</a></li><li><a href="https://www.luogu.com.cn/problem/P5587" target="_blank" rel="noopener">P5587 打字练习</a></li></ul>
          </div>
<h3 id="Part-1-4-函数，递归及递推"><a href="#Part-1-4-函数，递归及递推" class="headerlink" title="Part 1.4 函数，递归及递推"></a>Part 1.4 函数，递归及递推</h3><blockquote>
<p>这是初学者最难理解的部分，建议画出递归图来理解递归的过程。</p>
</blockquote>
<div class="note success">
            <ul><li><a href="https://www.luogu.com.cn/problem/P1028" target="_blank" rel="noopener">P1028 数的计算</a></li><li><a href="https://www.luogu.com.cn/problem/P1036" target="_blank" rel="noopener">P1036 选数</a></li><li><a href="https://www.luogu.com.cn/problem/P1464" target="_blank" rel="noopener">P1464 Function</a></li><li><a href="https://www.luogu.com.cn/problem/P5534" target="_blank" rel="noopener">P5534 【XR-3】等差数列</a></li><li><a href="https://www.luogu.com.cn/problem/P1192" target="_blank" rel="noopener">P1192 台阶问题</a></li><li><a href="https://www.luogu.com.cn/problem/P1025" target="_blank" rel="noopener">P1025 数的划分</a></li><li><a href="https://www.luogu.com.cn/problem/P4994" target="_blank" rel="noopener">P4994 终于结束的起点</a></li></ul>
          </div>
<h2 id="Part-2-基础算法"><a href="#Part-2-基础算法" class="headerlink" title="Part 2 基础算法"></a>Part 2 基础算法</h2><blockquote>
<p>这一部分的内容包含了 OI 中的基础算法，供各位巩固基础。</p>
<p>当然，这里面也有一些难度比较高的题目。</p>
</blockquote>
<h3 id="Part-2-1-模拟"><a href="#Part-2-1-模拟" class="headerlink" title="Part 2.1 模拟"></a>Part 2.1 模拟</h3><blockquote>
<p>模拟，顾名思义就是题目要求你做什么你就做什么，这样的题目很考验选手的代码组织能力。</p>
<p>这里不仅仅有非常基础的模拟，也有一些非常复杂的题目。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1003" target="_blank" rel="noopener">P1003 铺地毯</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1067" target="_blank" rel="noopener">P1067 多项式输出</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1328" target="_blank" rel="noopener">P1328 生活大爆炸版石头剪刀布</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1563" target="_blank" rel="noopener">P1563 玩具谜题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1042" target="_blank" rel="noopener">P1042 乒乓球</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1179" target="_blank" rel="noopener">P1179 数字统计</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2615" target="_blank" rel="noopener">P2615 神奇的幻方</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3952" target="_blank" rel="noopener">P3952 时间复杂度</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2482" target="_blank" rel="noopener">P2482 [SDOI2010]猪国杀</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5380" target="_blank" rel="noopener">P5380 [THUPC2019]鸭棋</a></li>
</ul>
<h3 id="Part-2-2-排序算法"><a href="#Part-2-2-排序算法" class="headerlink" title="Part 2.2 排序算法"></a>Part 2.2 排序算法</h3><blockquote>
<p>通过排序，我们可以将数据有序化，这让我们对数据的处理方便了很多。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1177" target="_blank" rel="noopener">P1177 【模板】快速排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1059" target="_blank" rel="noopener">P1059 明明的随机数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1068" target="_blank" rel="noopener">P1068 分数线划定</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1051" target="_blank" rel="noopener">P1051 谁拿了最多奖学金</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1309" target="_blank" rel="noopener">P1309 瑞士轮</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1908" target="_blank" rel="noopener">P1908 逆序对</a></li>
</ul>
<h3 id="Part-2-3-二分答案"><a href="#Part-2-3-二分答案" class="headerlink" title="Part 2.3 二分答案"></a>Part 2.3 二分答案</h3><blockquote>
<p>对一个满足单调性质的问题，我们可以采用二分答案的方法来解决。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1024" target="_blank" rel="noopener">P1024 一元三次方程求解</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2678" target="_blank" rel="noopener">P2678 跳石头</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1316" target="_blank" rel="noopener">P1316 丢瓶盖</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1902" target="_blank" rel="noopener">P1902 刺杀大使</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1314" target="_blank" rel="noopener">P1314 聪明的质监员</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1083" target="_blank" rel="noopener">P1083 借教室</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4343" target="_blank" rel="noopener">P4343 [SHOI2015]自动刷题机</a></li>
</ul>
<h3 id="Part-2-4-分治"><a href="#Part-2-4-分治" class="headerlink" title="Part 2.4 分治"></a>Part 2.4 分治</h3><blockquote>
<p>分治，即分而治之，将大问题分解为小问题，分别求解，最后合并结果。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1226" target="_blank" rel="noopener">P1226 【模板】快速幂||取余运算</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1010" target="_blank" rel="noopener">P1010 幂次方</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1429" target="_blank" rel="noopener">P1429 平面最近点对（加强版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3612" target="_blank" rel="noopener">P3612 [USACO17JAN]Secret Cow Code</a></li>
</ul>
<h3 id="Part-2-5-贪心"><a href="#Part-2-5-贪心" class="headerlink" title="Part 2.5 贪心"></a>Part 2.5 贪心</h3><blockquote>
<p>贪心，指的是决策时都采取当前最优解的算法。有的时候，这样做确实可以获得最优解。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1208" target="_blank" rel="noopener">P1208 [USACO1.3]Mixing Milk</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4995" target="_blank" rel="noopener">P4995 跳跳！</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1094" target="_blank" rel="noopener">P1094 纪念品分组</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1199" target="_blank" rel="noopener">P1199 三国游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2672" target="_blank" rel="noopener">P2672 推销员</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1080" target="_blank" rel="noopener">P1080 国王游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2123" target="_blank" rel="noopener">P2123 皇后游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5521" target="_blank" rel="noopener">P5521 [yLOI2019]梅深不见冬</a></li>
</ul>
<h3 id="Part-2-6-构造"><a href="#Part-2-6-构造" class="headerlink" title="Part 2.6 构造"></a>Part 2.6 构造</h3><blockquote>
<p>构造题是一种形式灵活多样的题型。正是因为这个特点，使得构造题没有一种通用的方法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3599" target="_blank" rel="noopener">P3599 Koishi Loves Construction</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5441" target="_blank" rel="noopener">P5441 【XR-2】伤痕</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5595" target="_blank" rel="noopener">P5595 【XR-4】歌唱比赛</a></li>
</ul>
<h3 id="Part-2-7-高精度"><a href="#Part-2-7-高精度" class="headerlink" title="Part 2.7 高精度"></a>Part 2.7 高精度</h3><blockquote>
<p>在 C++ 中，long long 都无法表示我们需要的整数时怎么办？那就用高精度吧！</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1601" target="_blank" rel="noopener">P1601 A+B Problem（高精）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2142" target="_blank" rel="noopener">P2142 高精度减法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1303" target="_blank" rel="noopener">P1303 A*B Problem</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1480" target="_blank" rel="noopener">P1480 A/B Problem</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1009" target="_blank" rel="noopener">P1009 阶乘之和</a></li>
</ul>
<h3 id="Part-2-8-前缀和-amp-差分"><a href="#Part-2-8-前缀和-amp-差分" class="headerlink" title="Part 2.8 前缀和 &amp; 差分"></a>Part 2.8 前缀和 &amp; 差分</h3><blockquote>
<p>前缀和是一种重要的预处理，能大大降低查询的时间复杂度，而差分则是一种和前缀和相对的策略。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3131" target="_blank" rel="noopener">P3131 [USACO16JAN]Subsequences Summing to Sevens</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1387" target="_blank" rel="noopener">P1387 最大正方形</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3397" target="_blank" rel="noopener">P3397 地毯</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2280" target="_blank" rel="noopener">P2280 [HNOI2003]激光炸弹</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4552" target="_blank" rel="noopener">P4552 [Poetize6] IncDec Sequence</a></li>
</ul>
<h2 id="Part-3-搜索"><a href="#Part-3-搜索" class="headerlink" title="Part 3 搜索"></a>Part 3 搜索</h2><blockquote>
<p>搜索其实就是高级的枚举，很多题目都可以用搜索完成。就算不能，搜索也是骗分神器。</p>
</blockquote>
<h3 id="Part-3-1-深度优先搜索"><a href="#Part-3-1-深度优先搜索" class="headerlink" title="Part 3.1 深度优先搜索"></a>Part 3.1 深度优先搜索</h3><blockquote>
<p>深度优先搜索（DFS），即按照深度优先的顺序搜索的算法。</p>
<p>深度优先搜索一般使用栈来实现。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1219" target="_blank" rel="noopener">P1219 八皇后</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1019" target="_blank" rel="noopener">P1019 单词接龙</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5194" target="_blank" rel="noopener">P5194 [USACO05DEC]Scales</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5440" target="_blank" rel="noopener">P5440 【XR-2】奇迹</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1378" target="_blank" rel="noopener">P1378 油滴扩展</a></li>
</ul>
<h3 id="Part-3-2-广度优先搜索"><a href="#Part-3-2-广度优先搜索" class="headerlink" title="Part 3.2 广度优先搜索"></a>Part 3.2 广度优先搜索</h3><blockquote>
<p>广度优先搜索（BFS），即优先扩展浅层节点，逐渐深入的搜索算法。</p>
<p>广度优先搜索一般使用队列来实现。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1162" target="_blank" rel="noopener">P1162 填涂颜色</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1443" target="_blank" rel="noopener">P1443 马的遍历</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3956" target="_blank" rel="noopener">P3956 棋盘</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1032" target="_blank" rel="noopener">P1032 字串变换</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1126" target="_blank" rel="noopener">P1126 机器人搬重物</a></li>
</ul>
<h3 id="Part-3-3-记忆化搜索"><a href="#Part-3-3-记忆化搜索" class="headerlink" title="Part 3.3 记忆化搜索"></a>Part 3.3 记忆化搜索</h3><blockquote>
<p>通过将已经遍历的状态记录下来，从而减少重复的搜索量，这就是记忆化搜索。</p>
<p>动态规划的时候，记忆化搜索也是一种高效简洁的实现方式。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1514" target="_blank" rel="noopener">P1514 引水入城</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1535" target="_blank" rel="noopener">P1535 游荡的奶牛</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1434" target="_blank" rel="noopener">P1434 [SHOI2002]滑雪</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3953" target="_blank" rel="noopener">P3953 逛公园</a></li>
</ul>
<h3 id="Part-3-4-搜索的剪枝"><a href="#Part-3-4-搜索的剪枝" class="headerlink" title="Part 3.4 搜索的剪枝"></a>Part 3.4 搜索的剪枝</h3><blockquote>
<p>对于一些不必要搜索的部分，我们可以避免访问这些状态，从而提高搜索效率。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1120" target="_blank" rel="noopener">P1120 小木棍 ［数据加强版］</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1312" target="_blank" rel="noopener">P1312 Mayan游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1074" target="_blank" rel="noopener">P1074 靶形数独</a></li>
</ul>
<h3 id="Part-3-5-双向搜索"><a href="#Part-3-5-双向搜索" class="headerlink" title="Part 3.5 双向搜索"></a>Part 3.5 双向搜索</h3><blockquote>
<p>在搜索时，如果能从初态和终态出发，同时进行搜索，就可以减小搜索树的规模，提高时间效率。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3067" target="_blank" rel="noopener">P3067 [USACO12OPEN]Balanced Cow Subsets</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4799" target="_blank" rel="noopener">P4799 [CEOI2015 Day2]世界冰球锦标赛</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5195" target="_blank" rel="noopener">P5195 [USACO05DEC]Knights of Ni</a></li>
</ul>
<h3 id="Part-3-6-A"><a href="#Part-3-6-A" class="headerlink" title="Part 3.6 A*"></a>Part 3.6 A*</h3><blockquote>
<p>在 BFS 中，如果能设计一个合理的估价函数，就可以更快扩展到最优解。这就是 A*算法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1379" target="_blank" rel="noopener">P1379 八数码难题</a></li>
</ul>
<h3 id="Part-3-7-IDA"><a href="#Part-3-7-IDA" class="headerlink" title="Part 3.7 IDA*"></a>Part 3.7 IDA*</h3><blockquote>
<p>像 BFS 那样，每次只扩展一层节点，却采用 DFS 方式来遍历搜索树，这就是迭代加深搜索。</p>
<p>再加上一个估价函数来减小搜索量，就是 IDA*了。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2324" target="_blank" rel="noopener">P2324 [SCOI2005]骑士精神</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2534" target="_blank" rel="noopener">P2534 [AHOI2012]铁盘整理</a></li>
</ul>
<h3 id="Part-3-8-DLX"><a href="#Part-3-8-DLX" class="headerlink" title="Part 3.8 DLX"></a>Part 3.8 DLX</h3><blockquote>
<p>算法 X 是通过回溯法求解精确覆盖问题的算法，而删除列这一操作可以使用舞蹈链加速。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4929" target="_blank" rel="noopener">P4929 【模板】舞蹈链（DLX）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4205" target="_blank" rel="noopener">P4205 [NOI2005]智慧珠游戏</a></li>
</ul>
<h2 id="Part-4-动态规划"><a href="#Part-4-动态规划" class="headerlink" title="Part 4 动态规划"></a>Part 4 动态规划</h2><blockquote>
<p>动态规划是一种重要的思维方法，通过利用已有的子问题信息高效求出当前问题的最优解。</p>
</blockquote>
<h3 id="Part-4-1-线性动态规划"><a href="#Part-4-1-线性动态规划" class="headerlink" title="Part 4.1 线性动态规划"></a>Part 4.1 线性动态规划</h3><blockquote>
<p>线性动态规划，即具有线性阶段划分的动态规划。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1216" target="_blank" rel="noopener">P1216 数字三角形</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1020" target="_blank" rel="noopener">P1020 导弹拦截</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1091" target="_blank" rel="noopener">P1091 合唱队形</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1095" target="_blank" rel="noopener">P1095 守望者的逃离</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1541" target="_blank" rel="noopener">P1541 乌龟棋</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1868" target="_blank" rel="noopener">P1868 饥饿的奶牛</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2679" target="_blank" rel="noopener">P2679 子串</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2501" target="_blank" rel="noopener">P2501 [HAOI2006]数字序列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3336" target="_blank" rel="noopener">P3336 [ZJOI2013]话旧</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3558" target="_blank" rel="noopener">P3558 [POI2013]BAJ-Bytecomputer</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4158" target="_blank" rel="noopener">P4158 [SCOI2009]粉刷匠</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5301" target="_blank" rel="noopener">P5301 [GXOI/GZOI2019]宝牌一大堆</a></li>
</ul>
<h3 id="Part-4-2-背包动态规划"><a href="#Part-4-2-背包动态规划" class="headerlink" title="Part 4.2 背包动态规划"></a>Part 4.2 背包动态规划</h3><blockquote>
<p>背包动态规划是线性动态规划中特殊的一类，NOIP中考到的次数也不少。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1048" target="_blank" rel="noopener">P1048 采药</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1060" target="_blank" rel="noopener">P1060 开心的金明</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1855" target="_blank" rel="noopener">P1855 榨取kkksc03</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5020" target="_blank" rel="noopener">P5020 货币系统</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1757" target="_blank" rel="noopener">P1757 通天之分组背包</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1064" target="_blank" rel="noopener">P1064 金明的预算方案</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2946" target="_blank" rel="noopener">P2946 [USACO09MAR]Cow Frisbee Team</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1156" target="_blank" rel="noopener">P1156 垃圾陷阱</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5322" target="_blank" rel="noopener">P5322 [BJOI2019]排兵布阵</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5289" target="_blank" rel="noopener">P5289 [十二省联考2019]皮配</a></li>
</ul>
<h3 id="Part-4-3-区间动态规划"><a href="#Part-4-3-区间动态规划" class="headerlink" title="Part 4.3 区间动态规划"></a>Part 4.3 区间动态规划</h3><blockquote>
<p>区间动态规划一般以区间作为动态规划的阶段。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1880" target="_blank" rel="noopener">P1880 [NOI1995]石子合并</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3146" target="_blank" rel="noopener">P3146 [USACO16OPEN]248</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1063" target="_blank" rel="noopener">P1063 能量项链</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1005" target="_blank" rel="noopener">P1005 矩阵取数游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4170" target="_blank" rel="noopener">P4170 [CQOI2007]涂色</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4302" target="_blank" rel="noopener">P4302 [SCOI2003]字符串折叠</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2466" target="_blank" rel="noopener">P2466 [SDOI2008]Sue的小球</a></li>
</ul>
<h3 id="Part-4-4-树形动态规划"><a href="#Part-4-4-树形动态规划" class="headerlink" title="Part 4.4 树形动态规划"></a>Part 4.4 树形动态规划</h3><blockquote>
<p>树形动态规划，即在树上进行的动态规划。</p>
<p>因为树的递归性质，树形动态规划一般都是递归求解的。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1352" target="_blank" rel="noopener">P1352 没有上司的舞会</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1040" target="_blank" rel="noopener">P1040 加分二叉树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1122" target="_blank" rel="noopener">P1122 最大子树和</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1273" target="_blank" rel="noopener">P1273 有线电视网</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2014" target="_blank" rel="noopener">P2014 选课</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2585" target="_blank" rel="noopener">P2585 [ZJOI2006]三色二叉树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3047" target="_blank" rel="noopener">P3047 [USACO12FEB]Nearby Cows</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3698" target="_blank" rel="noopener">P3698 [CQOI2017]小Q的棋盘</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5658" target="_blank" rel="noopener">P5658 括号树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2607" target="_blank" rel="noopener">P2607 [ZJOI2008]骑士</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3177" target="_blank" rel="noopener">P3177 [HAOI2015]树上染色</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4395" target="_blank" rel="noopener">P4395 [BOI2003]Gem</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4516" target="_blank" rel="noopener">P4516 [JSOI2018]潜入行动</a></li>
</ul>
<h3 id="Part-4-5-状态压缩动态规划"><a href="#Part-4-5-状态压缩动态规划" class="headerlink" title="Part 4.5 状态压缩动态规划"></a>Part 4.5 状态压缩动态规划</h3><blockquote>
<p>将一个状态压缩为一个整数（通常为二进制数），就可以在更为方便地进行状态转移的同时，达到节约空间的目的。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2704" target="_blank" rel="noopener">P2704 [NOI2001]炮兵阵地</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1879" target="_blank" rel="noopener">P1879 [USACO06NOV]Corn Fields</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1896" target="_blank" rel="noopener">P1896 [SCOI2005]互不侵犯</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3092" target="_blank" rel="noopener">P3092 [USACO13NOV]No Change</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3694" target="_blank" rel="noopener">P3694 邦邦的大合唱站队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4925" target="_blank" rel="noopener">P4925 [1007]Scarlet的字符串不可能这么可爱</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2157" target="_blank" rel="noopener">P2157 [SDOI2009]学校食堂</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2167" target="_blank" rel="noopener">P2167 [SDOI2009]Bill的挑战</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2396" target="_blank" rel="noopener">P2396 yyy loves Maths VII</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4363" target="_blank" rel="noopener">P4363 [九省联考2018]一双木棋</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5005" target="_blank" rel="noopener">P5005 中国象棋 - 摆上马</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2150" target="_blank" rel="noopener">P2150 [NOI2015]寿司晚宴</a></li>
</ul>
<h3 id="Part-4-6-倍增优化动态规划"><a href="#Part-4-6-倍增优化动态规划" class="headerlink" title="Part 4.6 倍增优化动态规划"></a>Part 4.6 倍增优化动态规划</h3><blockquote>
<p>利用倍增的方式，我们可以将状态转移的效率大大提高。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1613" target="_blank" rel="noopener">P1613 跑路</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1081" target="_blank" rel="noopener">P1081 开车旅行</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5024" target="_blank" rel="noopener">P5024 保卫王国</a></li>
</ul>
<h3 id="Part-4-7-数据结构优化动态规划"><a href="#Part-4-7-数据结构优化动态规划" class="headerlink" title="Part 4.7 数据结构优化动态规划"></a>Part 4.7 数据结构优化动态规划</h3><blockquote>
<p>利用数据结构来维护已有信息，也可以达到优化状态转移的目的。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4719" target="_blank" rel="noopener">P4719 【模板】动态dp</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4751" target="_blank" rel="noopener">P4751 动态dp【加强版】</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3287" target="_blank" rel="noopener">P3287 [SCOI2014]方伯伯的玉米田</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2605" target="_blank" rel="noopener">P2605 [ZJOI2010]基站选址</a></li>
</ul>
<h3 id="Part-4-8-单调队列优化动态规划"><a href="#Part-4-8-单调队列优化动态规划" class="headerlink" title="Part 4.8 单调队列优化动态规划"></a>Part 4.8 单调队列优化动态规划</h3><blockquote>
<p>借助单调队列，排除不可能的决策，可以起到优化状态转移的效果。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1776" target="_blank" rel="noopener">P1776 宝物筛选</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3089" target="_blank" rel="noopener">P3089 [USACO13NOV]Pogo-Cow</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3572" target="_blank" rel="noopener">P3572 [POI2014]PTA-Little Bird</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3522" target="_blank" rel="noopener">P3522 [POI2011]TEM-Temperature</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4544" target="_blank" rel="noopener">P4544 [USACO10NOV]Buying Feed</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5665" target="_blank" rel="noopener">P5665 划分</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1973" target="_blank" rel="noopener">P1973 [NOI2011]Noi嘉年华</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2569" target="_blank" rel="noopener">P2569 [SCOI2010]股票交易</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4852" target="_blank" rel="noopener">P4852 yyf hates choukapai</a></li>
</ul>
<h3 id="Part-4-9-斜率优化动态规划"><a href="#Part-4-9-斜率优化动态规划" class="headerlink" title="Part 4.9 斜率优化动态规划"></a>Part 4.9 斜率优化动态规划</h3><blockquote>
<p>通过用单调队列维护一个凸壳，来达到优化转移的目的。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2900" target="_blank" rel="noopener">P2900 [USACO08MAR]Land Acquisition</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3195" target="_blank" rel="noopener">P3195 [HNOI2008]玩具装箱</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3628" target="_blank" rel="noopener">P3628 [APIO2010]特别行动队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3648" target="_blank" rel="noopener">P3648 [APIO2014]序列分割</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4027" target="_blank" rel="noopener">P4027 [NOI2007]货币兑换</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4360" target="_blank" rel="noopener">P4360 [CEOI2004]锯木厂选址</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5468" target="_blank" rel="noopener">P5468 [NOI2019]回家路线</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2305" target="_blank" rel="noopener">P2305 [NOI2014]购票</a></li>
</ul>
<h3 id="Part-4-10-决策单调性优化动态规划"><a href="#Part-4-10-决策单调性优化动态规划" class="headerlink" title="Part 4.10 决策单调性优化动态规划"></a>Part 4.10 决策单调性优化动态规划</h3><blockquote>
<p>利用决策间的递变规律，也能实现优化状态转移的目的。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3515" target="_blank" rel="noopener">P3515 [POI2011]Lightning Conductor</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4767" target="_blank" rel="noopener">P4767 [IOI2000]邮局</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1912" target="_blank" rel="noopener">P1912 [NOI2009]诗人小G</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1973" target="_blank" rel="noopener">P1973 [NOI2011]Noi嘉年华</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3724" target="_blank" rel="noopener">P3724 [AH2017/HNOI2017]大佬</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5574" target="_blank" rel="noopener">P5574 [CmdOI2019]任务分配问题</a></li>
</ul>
<h3 id="Part-4-11-数位统计类动态规划"><a href="#Part-4-11-数位统计类动态规划" class="headerlink" title="Part 4.11 数位统计类动态规划"></a>Part 4.11 数位统计类动态规划</h3><blockquote>
<p>统计一个区间中满足条件的数有多少，就是数位统计类动态规划。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2602" target="_blank" rel="noopener">P2602 [ZJOI2010]数字计数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3281" target="_blank" rel="noopener">P3281 [SCOI2013]数数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2518" target="_blank" rel="noopener">P2518 [HAOI2010]计数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2657" target="_blank" rel="noopener">P2657 [SCOI2009]windy数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3286" target="_blank" rel="noopener">P3286 [SCOI2014]方伯伯的商场之旅</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4124" target="_blank" rel="noopener">P4124 [CQOI2016]手机号码</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4999" target="_blank" rel="noopener">P4999 烦人的数学作业</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2606" target="_blank" rel="noopener">P2606 [ZJOI2010]排列计数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4798" target="_blank" rel="noopener">P4798 [CEOI2015 Day1]卡尔文球锦标赛</a></li>
</ul>
<h3 id="Part-4-12-轮廓线动态规划"><a href="#Part-4-12-轮廓线动态规划" class="headerlink" title="Part 4.12 轮廓线动态规划"></a>Part 4.12 轮廓线动态规划</h3><blockquote>
<p>轮廓线动态规划（即常说的插头 DP）是一种特殊的状压动态规划，通过以轮廓线为状态来实现状态转移。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5056" target="_blank" rel="noopener">P5056 【模板】插头dp</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2289" target="_blank" rel="noopener">P2289 [HNOI2004]邮递员</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2337" target="_blank" rel="noopener">P2337 [SCOI2012]喵星人的入侵</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5347" target="_blank" rel="noopener">P5347 【XR-1】俄罗斯方块</a></li>
</ul>
<h2 id="Part-5-字符串"><a href="#Part-5-字符串" class="headerlink" title="Part 5 字符串"></a>Part 5 字符串</h2><blockquote>
<p>字符串问题有很多自己的特点。</p>
</blockquote>
<h3 id="Part-5-1-字符串哈希"><a href="#Part-5-1-字符串哈希" class="headerlink" title="Part 5.1 字符串哈希"></a>Part 5.1 字符串哈希</h3><blockquote>
<p>字符串哈希通过牺牲很小的准确率，达到快速进行字符串匹配的效果。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3370" target="_blank" rel="noopener">P3370 【模板】字符串哈希</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5270" target="_blank" rel="noopener">P5270 无论怎样神树大人都会删库跑路</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5537" target="_blank" rel="noopener">P5537 【XR-3】系统设计</a></li>
</ul>
<h3 id="Part-5-2-KMP"><a href="#Part-5-2-KMP" class="headerlink" title="Part 5.2 KMP"></a>Part 5.2 KMP</h3><blockquote>
<p>KMP 算法可以用来解决模式串匹配问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3375" target="_blank" rel="noopener">P3375 【模板】KMP字符串匹配</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4391" target="_blank" rel="noopener">P4391 [BOI2009]Radio Transmission</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3435" target="_blank" rel="noopener">P3435 [POI2006]OKR-Periods of Words</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4824" target="_blank" rel="noopener">P4824 [USACO15FEB]Censoring (Silver)</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2375" target="_blank" rel="noopener">P2375 [NOI2014]动物园</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3426" target="_blank" rel="noopener">P3426 [POI2005]SZA-Template</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3193" target="_blank" rel="noopener">P3193 [HNOI2008]GT考试</a></li>
</ul>
<h3 id="Part-5-3-Manacher"><a href="#Part-5-3-Manacher" class="headerlink" title="Part 5.3 Manacher"></a>Part 5.3 Manacher</h3><blockquote>
<p>Manacher 可以在线性时间内求出一个字符串的最长回文子串。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3805" target="_blank" rel="noopener">P3805 【模板】manacher算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4555" target="_blank" rel="noopener">P4555 [国家集训队]最长双回文串</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1659" target="_blank" rel="noopener">P1659 [国家集训队]拉拉队排练</a></li>
</ul>
<h3 id="Part-5-4-Trie树"><a href="#Part-5-4-Trie树" class="headerlink" title="Part 5.4 Trie树"></a>Part 5.4 Trie树</h3><blockquote>
<p>Trie树可以像查字典一样把多个字符串组织到一棵树上。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3879" target="_blank" rel="noopener">P3879 [TJOI2010]阅读理解</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2292" target="_blank" rel="noopener">P2292 [HNOI2004]L语言</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2922" target="_blank" rel="noopener">P2922 [USACO08DEC]Secret Message</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3065" target="_blank" rel="noopener">P3065 [USACO12DEC]First!</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3294" target="_blank" rel="noopener">P3294 [SCOI2016]背单词</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4407" target="_blank" rel="noopener">P4407 [JSOI2009]电子字典</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4551" target="_blank" rel="noopener">P4551 最长异或路径</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4683" target="_blank" rel="noopener">P4683 [IOI2008]Type Printer</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3783" target="_blank" rel="noopener">P3783 [SDOI2017]天才黑客</a></li>
</ul>
<h3 id="Part-5-5-AC自动机"><a href="#Part-5-5-AC自动机" class="headerlink" title="Part 5.5 AC自动机"></a>Part 5.5 AC自动机</h3><blockquote>
<p>AC自动机可以看成是 KMP 和 Trie 的结合体，用于解决多字符串匹配问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3808" target="_blank" rel="noopener">P3808 【模板】AC自动机（简单版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3796" target="_blank" rel="noopener">P3796 【模板】AC自动机（加强版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5357" target="_blank" rel="noopener">P5357 【模板】AC自动机（二次加强版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3121" target="_blank" rel="noopener">P3121 [USACO15FEB]Censoring (Gold)</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2414" target="_blank" rel="noopener">P2414 [NOI2011]阿狸的打字机</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3966" target="_blank" rel="noopener">P3966 [TJOI2013]单词</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2444" target="_blank" rel="noopener">P2444 [POI2000]病毒</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3311" target="_blank" rel="noopener">P3311 [SDOI2014]数数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4052" target="_blank" rel="noopener">P4052 [JSOI2007]文本生成器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5599" target="_blank" rel="noopener">P5599 【XR-4】文本编辑器</a></li>
</ul>
<h3 id="Part-5-6-回文自动机"><a href="#Part-5-6-回文自动机" class="headerlink" title="Part 5.6 回文自动机"></a>Part 5.6 回文自动机</h3><blockquote>
<p>回文自动机是解决回文串问题的有力工具。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5496" target="_blank" rel="noopener">P5496 【模板】回文自动机（PAM）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3649" target="_blank" rel="noopener">P3649 [APIO2014]回文串</a></li>
<li><a href="https://www.luogu.com.cn/problem/solution/P4287" target="_blank" rel="noopener">P4287 [SHOI2011]双倍回文</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4762" target="_blank" rel="noopener">P4762 [CERC2014]Virus synthesis</a></li>
</ul>
<h3 id="Part-5-7-后缀数组"><a href="#Part-5-7-后缀数组" class="headerlink" title="Part 5.7 后缀数组"></a>Part 5.7 后缀数组</h3><blockquote>
<p>后缀数组可以解决很多字符串匹配的问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3809" target="_blank" rel="noopener">P3809 【模板】后缀排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5353" target="_blank" rel="noopener">P5353 【模板】树上后缀排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2336" target="_blank" rel="noopener">P2336 [SCOI2012]喵星球上的点名</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2463" target="_blank" rel="noopener">P2463 [SDOI2008]Sandy的卡片</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2852" target="_blank" rel="noopener">P2852 [USACO06DEC]Milk Patterns</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4051" target="_blank" rel="noopener">P4051 [JSOI2007]字符加密</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1117" target="_blank" rel="noopener">P1117 [NOI2016]优秀的拆分</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2178" target="_blank" rel="noopener">P2178 [NOI2015]品酒大会</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5346" target="_blank" rel="noopener">P5346 【XR-1】柯南家族</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5576" target="_blank" rel="noopener">P5576 [CmdOI2019]口头禅</a></li>
</ul>
<h3 id="Part-5-8-后缀自动机"><a href="#Part-5-8-后缀自动机" class="headerlink" title="Part 5.8 后缀自动机"></a>Part 5.8 后缀自动机</h3><blockquote>
<p>后缀自动机是一种处理字符串问题的强大工具。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3804" target="_blank" rel="noopener">P3804 【模板】后缀自动机</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3649" target="_blank" rel="noopener">P3649 [APIO2014]回文串</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3975" target="_blank" rel="noopener">P3975 [TJOI2015]弦论</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4248" target="_blank" rel="noopener">P4248 [AHOI2013]差异</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5341" target="_blank" rel="noopener">P5341 [TJOI2019]甲苯先生和大中锋的字符串</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4770" target="_blank" rel="noopener">P4770 [NOI2018]你的名字</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5284" target="_blank" rel="noopener">P5284 [十二省联考2019]字符串问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5319" target="_blank" rel="noopener">P5319 [BJOI2019]奥术神杖</a></li>
</ul>
<h2 id="Part-6-数学"><a href="#Part-6-数学" class="headerlink" title="Part 6 数学"></a>Part 6 数学</h2><blockquote>
<p>OI 中的数学知识很多，也有些杂乱。</p>
</blockquote>
<h3 id="Part-6-1-位运算"><a href="#Part-6-1-位运算" class="headerlink" title="Part 6.1 位运算"></a>Part 6.1 位运算</h3><blockquote>
<p>将十进制整数转换为二进制后，有很多按位运算的运算符。</p>
<p>如果能善于利用位运算的一些性质，往往能达到事半功倍的效果。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5657" target="_blank" rel="noopener">P5657 格雷码</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5514" target="_blank" rel="noopener">P5514 [MtOI2019]永夜的报应</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5538" target="_blank" rel="noopener">P5538 【XR-3】Namid[A]me</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5539" target="_blank" rel="noopener">P5539 【XR-3】Unknown Mother-Goose</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5523" target="_blank" rel="noopener">P5523 [yLOI2019]珍珠</a></li>
</ul>
<h3 id="Part-6-2-整除相关"><a href="#Part-6-2-整除相关" class="headerlink" title="Part 6.2 整除相关"></a>Part 6.2 整除相关</h3><blockquote>
<p>与整除相关的概念有很多，比较常用的有素数，最大公约数和欧拉函数。</p>
</blockquote>
<h4 id="Part-6-2-1-素数"><a href="#Part-6-2-1-素数" class="headerlink" title="Part 6.2.1 素数"></a>Part 6.2.1 素数</h4><blockquote>
<p>素数，指的是除 1 和它本身之外没有其他约数的数。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4718" target="_blank" rel="noopener">P4718 【模板】Pollard-Rho算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1075" target="_blank" rel="noopener">P1075 质因数分解</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2441" target="_blank" rel="noopener">P2441 角色属性树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5535" target="_blank" rel="noopener">P5535 【XR-3】小道消息</a></li>
</ul>
<h4 id="Part-6-2-2-最大公约数"><a href="#Part-6-2-2-最大公约数" class="headerlink" title="Part 6.2.2 最大公约数"></a>Part 6.2.2 最大公约数</h4><blockquote>
<p>如果两个数有一个共同的约数，那么这个约数就被称为公约数。最大公约数就是指这两个数的所有公约数中，最大的一个。</p>
<p>求解两个数的最大公约数，可以采用欧几里得算法解决。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5435" target="_blank" rel="noopener">P5435 【模板】快速 GCD</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5436" target="_blank" rel="noopener">P5436 【XR-2】缘分</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1029" target="_blank" rel="noopener">P1029 最大公约数和最小公倍数问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1414" target="_blank" rel="noopener">P1414 又是毕业季II</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2152" target="_blank" rel="noopener">P2152 [SDOI2009]SuperGCD</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1072" target="_blank" rel="noopener">P1072 Hankson 的趣味题</a></li>
</ul>
<h4 id="Part-6-2-3-欧拉函数"><a href="#Part-6-2-3-欧拉函数" class="headerlink" title="Part 6.2.3 欧拉函数"></a>Part 6.2.3 欧拉函数</h4><blockquote>
<p>欧拉函数 $ \varphi (x) $ 表示了小于 $ x $ 的数字中，与 $ x $ 互质的数字个数。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2158" target="_blank" rel="noopener">P2158 [SDOI2008]仪仗队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2568" target="_blank" rel="noopener">P2568 GCD</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2398" target="_blank" rel="noopener">P2398 GCD SUM</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4139" target="_blank" rel="noopener">P4139 上帝与集合的正确用法</a></li>
</ul>
<h3 id="Part-6-3-同余方程"><a href="#Part-6-3-同余方程" class="headerlink" title="Part 6.3 同余方程"></a>Part 6.3 同余方程</h3><blockquote>
<p>求解同余方程往往可以引出不少话题。</p>
</blockquote>
<h4 id="Part-6-3-1-线性同余方程-amp-乘法逆元"><a href="#Part-6-3-1-线性同余方程-amp-乘法逆元" class="headerlink" title="Part 6.3.1 线性同余方程&amp;乘法逆元"></a>Part 6.3.1 线性同余方程&amp;乘法逆元</h4><blockquote>
<p>线性同余方程是同余方程中最基础的内容。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4549" target="_blank" rel="noopener">P4549 【模板】裴蜀定理</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2613" target="_blank" rel="noopener">P2613 【模板】有理数取余</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3811" target="_blank" rel="noopener">P3811 【模板】乘法逆元</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5431" target="_blank" rel="noopener">P5431 【模板】乘法逆元2</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1082" target="_blank" rel="noopener">P1082 同余方程</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3951" target="_blank" rel="noopener">P3951 小凯的疑惑</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1516" target="_blank" rel="noopener">P1516 青蛙的约会</a></li>
</ul>
<h4 id="Part-6-3-2-中国剩余定理"><a href="#Part-6-3-2-中国剩余定理" class="headerlink" title="Part 6.3.2 中国剩余定理"></a>Part 6.3.2 中国剩余定理</h4><blockquote>
<p>中国剩余定理可以快速解一元线性同余方程组。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4777" target="_blank" rel="noopener">P4777 【模板】扩展中国剩余定理（EXCRT）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3868" target="_blank" rel="noopener">P3868 [TJOI2009]猜数字</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2480" target="_blank" rel="noopener">P2480 [SDOI2010]古代猪文</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4774" target="_blank" rel="noopener">P4774 [NOI2018]屠龙勇士</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5345" target="_blank" rel="noopener">P5345 【XR-1】快乐肥宅</a></li>
</ul>
<h4 id="Part-6-3-3-高次同余方程"><a href="#Part-6-3-3-高次同余方程" class="headerlink" title="Part 6.3.3 高次同余方程"></a>Part 6.3.3 高次同余方程</h4><blockquote>
<p>BSGS 算法可以高效计算离散对数。</p>
<p>而高次剩余的求解更加复杂，其中二次剩余作为高次剩余中比较特殊的情况，可以使用 Cipolla 法求解。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4195" target="_blank" rel="noopener">P4195 【模板】exBSGS</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5491" target="_blank" rel="noopener">P5491 【模板】二次剩余</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3306" target="_blank" rel="noopener">P3306 [SDOI2013]随机数生成器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2485" target="_blank" rel="noopener">P2485 [SDOI2011]计算器</a></li>
</ul>
<h3 id="Part-6-4-博弈论"><a href="#Part-6-4-博弈论" class="headerlink" title="Part 6.4 博弈论"></a>Part 6.4 博弈论</h3><blockquote>
<p>博弈论考虑游戏中的个体的预测行为和实际行为，并研究它们的优化策略。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2197" target="_blank" rel="noopener">P2197 【模板】nim游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1288" target="_blank" rel="noopener">P1288 取数游戏II</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1290" target="_blank" rel="noopener">P1290 欧几里德的游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1247" target="_blank" rel="noopener">P1247 取火柴游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2252" target="_blank" rel="noopener">P2252 取石子游戏</a></li>
</ul>
<h3 id="Part-6-5-概率与期望"><a href="#Part-6-5-概率与期望" class="headerlink" title="Part 6.5 概率与期望"></a>Part 6.5 概率与期望</h3><blockquote>
<p>概率和期望是紧密相连的，OI 中往往会出现和概率期望相关的动态规划问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5104" target="_blank" rel="noopener">P5104 红包发红包</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1850" target="_blank" rel="noopener">P1850 换教室</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3830" target="_blank" rel="noopener">P3830 [SHOI2012]随机树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4564" target="_blank" rel="noopener">P4564 [CTSC2018]假面</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2473" target="_blank" rel="noopener">P2473 [SCOI2008]奖励关</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2221" target="_blank" rel="noopener">P2221 [HAOI2012]高速公路</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3239" target="_blank" rel="noopener">P3239 [HNOI2015]亚瑟王</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3750" target="_blank" rel="noopener">P3750 [六省联考2017]分手是祝愿</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4284" target="_blank" rel="noopener">P4284 [SHOI2014]概率充电器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5249" target="_blank" rel="noopener">P5249 [LnOI2019]加特林轮盘赌</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2081" target="_blank" rel="noopener">P2081 [NOI2012]迷失游乐园</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3343" target="_blank" rel="noopener">P3343 [ZJOI2015]地震后的幻想乡</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3600" target="_blank" rel="noopener">P3600 随机数生成器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5326" target="_blank" rel="noopener">P5326 [ZJOI2019]开关</a></li>
</ul>
<h3 id="Part-6-6-组合数学"><a href="#Part-6-6-组合数学" class="headerlink" title="Part 6.6 组合数学"></a>Part 6.6 组合数学</h3><blockquote>
<p>组合数学常常与计数问题，概率期望紧密相连。</p>
</blockquote>
<h4 id="Part-6-6-1-排列组合"><a href="#Part-6-6-1-排列组合" class="headerlink" title="Part 6.6.1 排列组合"></a>Part 6.6.1 排列组合</h4><blockquote>
<p>排列组合是组合数学的基础。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3807" target="_blank" rel="noopener">P3807 【模板】卢卡斯定理</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2822" target="_blank" rel="noopener">P2822 组合数问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5520" target="_blank" rel="noopener">P5520 [yLOI2019]青原樱</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3197" target="_blank" rel="noopener">P3197 [HNOI2008]越狱</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2290" target="_blank" rel="noopener">P2290 [HNOI2004]树的计数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4981" target="_blank" rel="noopener">P4981 父子</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4769" target="_blank" rel="noopener">P4769 [NOI2018]冒泡排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4931" target="_blank" rel="noopener">P4931 情侣？给我烧了！（加强版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5596" target="_blank" rel="noopener">P5596 【XR-4】题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5598" target="_blank" rel="noopener">P5598 【XR-4】混乱度</a></li>
</ul>
<h4 id="Part-6-6-2-卡特兰数-amp-斯特林数"><a href="#Part-6-6-2-卡特兰数-amp-斯特林数" class="headerlink" title="Part 6.6.2 卡特兰数&amp;斯特林数"></a>Part 6.6.2 卡特兰数&amp;斯特林数</h4><blockquote>
<p>卡特兰数和斯特林数是两类常见的组合递推数列。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5395" target="_blank" rel="noopener">P5395 【模板】第二类斯特林数·行</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5396" target="_blank" rel="noopener">P5396 【模板】第二类斯特林数·列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5408" target="_blank" rel="noopener">P5408 【模板】第一类斯特林数·行</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5409" target="_blank" rel="noopener">P5409 【模板】第一类斯特林数·列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1655" target="_blank" rel="noopener">P1655 小朋友的球</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2532" target="_blank" rel="noopener">P2532 [AHOI2012]树屋阶梯</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3200" target="_blank" rel="noopener">P3200 [HNOI2009]有趣的数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3978" target="_blank" rel="noopener">P3978 [TJOI2015]概率论</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4091" target="_blank" rel="noopener">P4091 [HEOI2016/TJOI2016]求和</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4827" target="_blank" rel="noopener">P4827 [国家集训队]Crash 的文明世界</a></li>
</ul>
<h4 id="Part-6-6-3-容斥原理"><a href="#Part-6-6-3-容斥原理" class="headerlink" title="Part 6.6.3 容斥原理"></a>Part 6.6.3 容斥原理</h4><blockquote>
<p>容斥原理常常用于解决集合的计数问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5664" target="_blank" rel="noopener">P5664 Emiya 家今天的饭</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1450" target="_blank" rel="noopener">P1450 [HAOI2008]硬币购物</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3214" target="_blank" rel="noopener">P3214 [HNOI2011]卡农</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3270" target="_blank" rel="noopener">P3270 [JLOI2016]成绩比较</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4336" target="_blank" rel="noopener">P4336 [SHOI2016]黑暗前的幻想乡</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4448" target="_blank" rel="noopener">P4448 [AHOI2018初中组]球球的排列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4491" target="_blank" rel="noopener">P4491 [HAOI2018]染色</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5339" target="_blank" rel="noopener">P5339 [TJOI2019]唱、跳、rap和篮球</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5400" target="_blank" rel="noopener">P5400 [CTS2019]随机立方体</a></li>
</ul>
<h3 id="Part-6-7-线性代数"><a href="#Part-6-7-线性代数" class="headerlink" title="Part 6.7 线性代数"></a>Part 6.7 线性代数</h3><blockquote>
<p>线性代数主要用于解决线性关系问题。</p>
</blockquote>
<h4 id="Part-6-7-1-矩阵"><a href="#Part-6-7-1-矩阵" class="headerlink" title="Part 6.7.1 矩阵"></a>Part 6.7.1 矩阵</h4><blockquote>
<p>利用矩阵优化数列递推，可以实现复杂度从线性到对数级的转变。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3390" target="_blank" rel="noopener">P3390 【模板】矩阵快速幂</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1939" target="_blank" rel="noopener">P1939 【模板】矩阵加速（数列）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4783" target="_blank" rel="noopener">P4783 【模板】矩阵求逆</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1962" target="_blank" rel="noopener">P1962 斐波那契数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1349" target="_blank" rel="noopener">P1349 广义斐波那契数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4000" target="_blank" rel="noopener">P4000 斐波那契数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3758" target="_blank" rel="noopener">P3758 [TJOI2017]可乐</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4967" target="_blank" rel="noopener">P4967 黑暗打击</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5343" target="_blank" rel="noopener">P5343 【XR-1】分块</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5337" target="_blank" rel="noopener">P5337 [TJOI2019]甲苯先生的字符串</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5303" target="_blank" rel="noopener">P5303 [GXOI/GZOI2019]逼死强迫症</a></li>
</ul>
<h4 id="Part-6-7-2-高斯消元"><a href="#Part-6-7-2-高斯消元" class="headerlink" title="Part 6.7.2 高斯消元"></a>Part 6.7.2 高斯消元</h4><blockquote>
<p>高斯消元可以用来求解方程组。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3389" target="_blank" rel="noopener">P3389 【模板】高斯消元法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4387" target="_blank" rel="noopener">P4387 付公主的函数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2447" target="_blank" rel="noopener">P2447 [SDOI2010]外星千足虫</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4035" target="_blank" rel="noopener">P4035 [JSOI2008]球形空间产生器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5516" target="_blank" rel="noopener">P5516 [MtOI2019]小铃的烦恼</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4111" target="_blank" rel="noopener">P4111 [HEOI2015]小Z的房间</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4457" target="_blank" rel="noopener">P4457 [BJOI2018]治疗之雨</a></li>
</ul>
<h4 id="Part-6-7-3-线性基"><a href="#Part-6-7-3-线性基" class="headerlink" title="Part 6.7.3 线性基"></a>Part 6.7.3 线性基</h4><blockquote>
<p>线性基可以求解最大异或和的一类问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3812" target="_blank" rel="noopener">P3812 【模板】线性基</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3857" target="_blank" rel="noopener">P3857 [TJOI2008]彩灯</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4570" target="_blank" rel="noopener">P4570 [BJWC2011]元素</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4301" target="_blank" rel="noopener">P4301 [CQOI2013]新Nim游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3292" target="_blank" rel="noopener">P3292 [SCOI2016]幸运数字</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4151" target="_blank" rel="noopener">P4151 [WC2011]最大XOR和路径</a></li>
</ul>
<h3 id="Part-6-8-多项式"><a href="#Part-6-8-多项式" class="headerlink" title="Part 6.8 多项式"></a>Part 6.8 多项式</h3><blockquote>
<p>对多项式的运算进行优化，从而能够解决规模更大的问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1919" target="_blank" rel="noopener">P1919 【模板】A*B Problem升级版（FFT快速傅里叶）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3803" target="_blank" rel="noopener">P3803 【模板】多项式乘法（FFT）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4238" target="_blank" rel="noopener">P4238 【模板】多项式求逆</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4245" target="_blank" rel="noopener">P4245 【模板】任意模数NTT</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4512" target="_blank" rel="noopener">P4512 【模板】多项式除法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4717" target="_blank" rel="noopener">P4717 【模板】快速沃尔什变换</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4721" target="_blank" rel="noopener">P4721 【模板】分治 FFT</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4725" target="_blank" rel="noopener">P4725 【模板】多项式对数函数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4726" target="_blank" rel="noopener">P4726 【模板】多项式指数函数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4781" target="_blank" rel="noopener">P4781 【模板】拉格朗日插值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5050" target="_blank" rel="noopener">P5050 【模板】多项式多点求值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5158" target="_blank" rel="noopener">P5158 【模板】多项式快速插值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5205" target="_blank" rel="noopener">P5205 【模板】多项式开根</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5245" target="_blank" rel="noopener">P5245 【模板】多项式快速幂</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5273" target="_blank" rel="noopener">P5273 【模板】多项式幂函数 (加强版)</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5282" target="_blank" rel="noopener">P5282 【模板】快速阶乘算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5373" target="_blank" rel="noopener">P5373 【模板】多项式复合函数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5383" target="_blank" rel="noopener">P5383 【模板】普通多项式转下降幂多项式</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5393" target="_blank" rel="noopener">P5393 【模板】下降幂多项式转普通多项式</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5394" target="_blank" rel="noopener">P5394 【模板】下降幂多项式乘法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3338" target="_blank" rel="noopener">P3338 [ZJOI2014]力</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3723" target="_blank" rel="noopener">P3723 [AH2017/HNOI2017]礼物</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5437" target="_blank" rel="noopener">P5437 【XR-2】约定</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5293" target="_blank" rel="noopener">P5293 [HNOI2019]白兔之舞</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5432" target="_blank" rel="noopener">P5432 A/B Problem (加强版)</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5472" target="_blank" rel="noopener">P5472 [NOI2019]斗主地</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5577" target="_blank" rel="noopener">P5577 [CmdOI2019]算力训练</a></li>
</ul>
<h3 id="Part-6-9-莫比乌斯反演"><a href="#Part-6-9-莫比乌斯反演" class="headerlink" title="Part 6.9 莫比乌斯反演"></a>Part 6.9 莫比乌斯反演</h3><blockquote>
<p>运用莫比乌斯反演，我们可以将一些函数转化，从而降低计算难度。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3172" target="_blank" rel="noopener">P3172 [CQOI2015]选数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2522" target="_blank" rel="noopener">P2522 [HAOI2011]Problem b</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3455" target="_blank" rel="noopener">P3455 [POI2007]ZAP-Queries</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3327" target="_blank" rel="noopener">P3327 [SDOI2015]约数个数和</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1829" target="_blank" rel="noopener">P1829 [国家集训队]Crash的数字表格 / JZPTAB</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4619" target="_blank" rel="noopener">P4619 [SDOI2018]旧试题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3704" target="_blank" rel="noopener">P3704 [SDOI2017]数字表格</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5518" target="_blank" rel="noopener">P5518 [MtOI2019]幽灵乐团</a></li>
</ul>
<h3 id="Part-6-10-筛法"><a href="#Part-6-10-筛法" class="headerlink" title="Part 6.10 筛法"></a>Part 6.10 筛法</h3><blockquote>
<p>利用数列的性质，有多种筛法可以求出我们想要的信息。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3383" target="_blank" rel="noopener">P3383 【模板】线性筛素数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4213" target="_blank" rel="noopener">P4213 【模板】杜教筛（Sum）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5325" target="_blank" rel="noopener">P5325 【模板】Min_25筛</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1865" target="_blank" rel="noopener">P1865 A % B Problem</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1621" target="_blank" rel="noopener">P1621 集合</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3768" target="_blank" rel="noopener">P3768 简单的数学题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5438" target="_blank" rel="noopener">P5438 【XR-2】记忆</a></li>
</ul>
<h3 id="Part-6-11-线性规划"><a href="#Part-6-11-线性规划" class="headerlink" title="Part 6.11 线性规划"></a>Part 6.11 线性规划</h3><blockquote>
<p>线性规划是研究线性约束条件下线性目标函数极值问题的方法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3980" target="_blank" rel="noopener">P3980 [NOI2008]志愿者招募</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4232" target="_blank" rel="noopener">P4232 无意识之外的捉迷藏</a></li>
</ul>
<h3 id="Part-6-12-数值方法"><a href="#Part-6-12-数值方法" class="headerlink" title="Part 6.12 数值方法"></a>Part 6.12 数值方法</h3><blockquote>
<p>在算法领域，有很多求近似值的数值方法。</p>
</blockquote>
<h4 id="Part-6-12-1-三分法"><a href="#Part-6-12-1-三分法" class="headerlink" title="Part 6.12.1 三分法"></a>Part 6.12.1 三分法</h4><blockquote>
<p>三分法可以求出一个单峰 / 单谷函数的极值。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3382" target="_blank" rel="noopener">P3382 【模板】三分法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1883" target="_blank" rel="noopener">P1883 函数</a></li>
</ul>
<h4 id="Part-6-12-2-自适应辛普森法"><a href="#Part-6-12-2-自适应辛普森法" class="headerlink" title="Part 6.12.2 自适应辛普森法"></a>Part 6.12.2 自适应辛普森法</h4><blockquote>
<p>自适应辛普森法可以高效求出给定函数的数值积分。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4525" target="_blank" rel="noopener">P4525 【模板】自适应辛普森法1</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4526" target="_blank" rel="noopener">P4526 【模板】自适应辛普森法2</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3779" target="_blank" rel="noopener">P3779 [SDOI2017]龙与地下城</a></li>
</ul>
<h3 id="Part-6-13-置换群"><a href="#Part-6-13-置换群" class="headerlink" title="Part 6.13 置换群"></a>Part 6.13 置换群</h3><blockquote>
<p>置换群通常用来解决一些涉及“本质不同”的计数问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4980" target="_blank" rel="noopener">P4980 【模板】Polya定理</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1446" target="_blank" rel="noopener">P1446 [HNOI2008]Cards</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2561" target="_blank" rel="noopener">P2561 [AHOI2002]黑白瓷砖</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4128" target="_blank" rel="noopener">P4128 [SHOI2006]有色图</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4727" target="_blank" rel="noopener">P4727 [HNOI2009]图的同构记数</a></li>
</ul>
<h2 id="Part-7-数据结构"><a href="#Part-7-数据结构" class="headerlink" title="Part 7 数据结构"></a>Part 7 数据结构</h2><blockquote>
<p>灵活地运用数据结构可以高效地查询并处理需要的信息。</p>
</blockquote>
<h3 id="Part-7-1-链表"><a href="#Part-7-1-链表" class="headerlink" title="Part 7.1 链表"></a>Part 7.1 链表</h3><blockquote>
<p>在一个数列中高效插入一个元素，链表毫无疑问是最好的选择。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1996" target="_blank" rel="noopener">P1996 约瑟夫问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1160" target="_blank" rel="noopener">P1160 队列安排</a></li>
</ul>
<h3 id="Part-7-2-栈"><a href="#Part-7-2-栈" class="headerlink" title="Part 7.2 栈"></a>Part 7.2 栈</h3><blockquote>
<p>栈，是一种后进先出（FILO）的数据结构。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1449" target="_blank" rel="noopener">P1449 后缀表达式</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1739" target="_blank" rel="noopener">P1739 表达式括号匹配</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1981" target="_blank" rel="noopener">P1981 表达式求值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1175" target="_blank" rel="noopener">P1175 表达式的转换</a></li>
</ul>
<h3 id="Part-7-3-队列"><a href="#Part-7-3-队列" class="headerlink" title="Part 7.3 队列"></a>Part 7.3 队列</h3><blockquote>
<p>队列，是一种先进先出（FIFO）的数据结构。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1540" target="_blank" rel="noopener">P1540 机器翻译</a></li>
</ul>
<h3 id="Part-7-4-并查集"><a href="#Part-7-4-并查集" class="headerlink" title="Part 7.4 并查集"></a>Part 7.4 并查集</h3><blockquote>
<p>并查集常用于处理一些不相交集合的合并和查询问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1111" target="_blank" rel="noopener">P1111 修复公路</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3958" target="_blank" rel="noopener">P3958 奶酪</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1525" target="_blank" rel="noopener">P1525 关押罪犯</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4185" target="_blank" rel="noopener">P4185 [USACO18JAN]MooTube G</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2024" target="_blank" rel="noopener">P2024 [NOI2001]食物链</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1197" target="_blank" rel="noopener">P1197 [JSOI2008]星球大战</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1196" target="_blank" rel="noopener">P1196 [NOI2002]银河英雄传说</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1955" target="_blank" rel="noopener">P1955 [NOI2015]程序自动分析</a></li>
</ul>
<h3 id="Part-7-5-二叉堆"><a href="#Part-7-5-二叉堆" class="headerlink" title="Part 7.5 二叉堆"></a>Part 7.5 二叉堆</h3><blockquote>
<p>二叉堆是一棵完全二叉树，堆中某个节点的值总是不大于或不小于其父节点的值。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3378" target="_blank" rel="noopener">P3378 【模板】堆</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1090" target="_blank" rel="noopener">P1090 合并果子</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1168" target="_blank" rel="noopener">P1168 中位数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2085" target="_blank" rel="noopener">P2085 最小函数值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2827" target="_blank" rel="noopener">P2827 蚯蚓</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3045" target="_blank" rel="noopener">P3045 [USACO12FEB]Cow Coupons</a></li>
</ul>
<h3 id="Part-7-6-ST表"><a href="#Part-7-6-ST表" class="headerlink" title="Part 7.6 ST表"></a>Part 7.6 ST表</h3><blockquote>
<p>ST表可以离线查询区间最值。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3865" target="_blank" rel="noopener">P3865 【模板】ST表</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2251" target="_blank" rel="noopener">P2251 质量检测</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1816" target="_blank" rel="noopener">P1816 忠诚</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1198" target="_blank" rel="noopener">P1198 [JSOI2008]最大数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2880" target="_blank" rel="noopener">P2880 [USACO07JAN]Balanced Lineup</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5012" target="_blank" rel="noopener">P5012 水の数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5344" target="_blank" rel="noopener">P5344 【XR-1】逛森林</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2048" target="_blank" rel="noopener">P2048 [NOI2010]超级钢琴</a></li>
</ul>
<h3 id="Part-7-7-树状数组"><a href="#Part-7-7-树状数组" class="headerlink" title="Part 7.7 树状数组"></a>Part 7.7 树状数组</h3><blockquote>
<p>树状数组是一种简洁高效的树形数据结构。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3374" target="_blank" rel="noopener">P3374 【模板】树状数组 1</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3368" target="_blank" rel="noopener">P3368 【模板】树状数组 2</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1908" target="_blank" rel="noopener">P1908 逆序对</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1966" target="_blank" rel="noopener">P1966 火柴排队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3605" target="_blank" rel="noopener">P3605 [USACO17JAN]Promotion Counting</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1972" target="_blank" rel="noopener">P1972 [SDOI2009]HH的项链</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3586" target="_blank" rel="noopener">P3586 [POI2015]LOG</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4054" target="_blank" rel="noopener">P4054 [JSOI2009]计数问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4113" target="_blank" rel="noopener">P4113 [HEOI2012]采花</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3960" target="_blank" rel="noopener">P3960 列队</a></li>
</ul>
<h3 id="Part-7-8-线段树"><a href="#Part-7-8-线段树" class="headerlink" title="Part 7.8 线段树"></a>Part 7.8 线段树</h3><blockquote>
<p>线段树的通用性比树状数组更强，可以处理更多涉及区间操作的题目。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3372" target="_blank" rel="noopener">P3372 【模板】线段树 1</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3373" target="_blank" rel="noopener">P3373 【模板】线段树 2</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5490" target="_blank" rel="noopener">P5490 【模板】扫描线</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4588" target="_blank" rel="noopener">P4588 [TJOI2018]数学计算</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1502" target="_blank" rel="noopener">P1502 窗口的星星</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2471" target="_blank" rel="noopener">P2471 [SCOI2007]降雨量</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2824" target="_blank" rel="noopener">P2824 [HEOI2016/TJOI2016]排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3722" target="_blank" rel="noopener">P3722 [AH2017/HNOI2017]影魔</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4097" target="_blank" rel="noopener">P4097 [HEOI2013]Segment</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4198" target="_blank" rel="noopener">P4198 楼房重建</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4513" target="_blank" rel="noopener">P4513 小白逛公园</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4556" target="_blank" rel="noopener">P4556 [Vani有约会]雨天的尾巴</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5324" target="_blank" rel="noopener">P5324 [BJOI2019]删数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5327" target="_blank" rel="noopener">P5327 [ZJOI2019]语言</a></li>
</ul>
<h3 id="Part-7-9-分块"><a href="#Part-7-9-分块" class="headerlink" title="Part 7.9 分块"></a>Part 7.9 分块</h3><blockquote>
<p>分块是一种非常通用的暴力方法，虽然效率不如线段树和树状数组，但可以解决很多线段树和树状数组处理不了的问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3870" target="_blank" rel="noopener">P3870 [TJOI2009]开关</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3396" target="_blank" rel="noopener">P3396 哈希冲突</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3863" target="_blank" rel="noopener">P3863 序列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1975" target="_blank" rel="noopener">P1975 [国家集训队]排队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3710" target="_blank" rel="noopener">P3710 方方方的数据结构</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3992" target="_blank" rel="noopener">P3992 [BJOI2017]开车</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4168" target="_blank" rel="noopener">P4168 [Violet]蒲公英</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4119" target="_blank" rel="noopener">P4119 [Ynoi2018]未来日记</a></li>
</ul>
<h3 id="Part-7-10-可并堆"><a href="#Part-7-10-可并堆" class="headerlink" title="Part 7.10 可并堆"></a>Part 7.10 可并堆</h3><blockquote>
<p>可并堆分为左偏树和配对堆两种，它们都具有堆的性质，且可以高效合并。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3377" target="_blank" rel="noopener">P3377 【模板】左偏树（可并堆）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2713" target="_blank" rel="noopener">P2713 罗马游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1456" target="_blank" rel="noopener">P1456 Monkey King</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1552" target="_blank" rel="noopener">P1552 [APIO2012]派遣</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3261" target="_blank" rel="noopener">P3261 [JLOI2015]城池攻占</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3273" target="_blank" rel="noopener">P3273 [SCOI2011]棘手的操作</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4331" target="_blank" rel="noopener">P4331 [BOI2004]Sequence</a></li>
</ul>
<h3 id="Part-7-11-主席树"><a href="#Part-7-11-主席树" class="headerlink" title="Part 7.11 主席树"></a>Part 7.11 主席树</h3><blockquote>
<p>主席树，即可持久化权值线段树。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2468" target="_blank" rel="noopener">P2468 [SDOI2010]粟粟的书架</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3302" target="_blank" rel="noopener">P3302 [SDOI2013]森林</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3168" target="_blank" rel="noopener">P3168 [CQOI2015]任务查询系统</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4559" target="_blank" rel="noopener">P4559 [JSOI2018]列队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2633" target="_blank" rel="noopener">P2633 Count on a tree</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3293" target="_blank" rel="noopener">P3293 [SCOI2016]美味</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4618" target="_blank" rel="noopener">P4618 [SDOI2018]原题识别</a></li>
</ul>
<h3 id="Part-7-12-平衡树"><a href="#Part-7-12-平衡树" class="headerlink" title="Part 7.12 平衡树"></a>Part 7.12 平衡树</h3><blockquote>
<p>二叉搜索树可以用来维护有序序列。</p>
<p>为了保证查询效率，有多种使二叉搜索树保持平衡的实现方法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3369" target="_blank" rel="noopener">P3369 【模板】普通平衡树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3391" target="_blank" rel="noopener">P3391 【模板】文艺平衡树（Splay）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3850" target="_blank" rel="noopener">P3850 [TJOI2007]书架</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4008" target="_blank" rel="noopener">P4008 [NOI2003]文本编辑器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5338" target="_blank" rel="noopener">P5338 [TJOI2019]甲苯先生的滚榜</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2042" target="_blank" rel="noopener">P2042 [NOI2005]维护数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1110" target="_blank" rel="noopener">P1110 [ZJOI2007]报表统计</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3644" target="_blank" rel="noopener">P3644 [APIO2015]八邻旁之桥</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1486" target="_blank" rel="noopener">P1486 [NOI2004]郁闷的出纳员</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2710" target="_blank" rel="noopener">P2710 数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3224" target="_blank" rel="noopener">P3224 [HNOI2012]永无乡</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3285" target="_blank" rel="noopener">P3285 [SCOI2014]方伯伯的OJ</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5321" target="_blank" rel="noopener">P5321 [BJOI2019]送别</a></li>
</ul>
<h3 id="Part-7-13-树链剖分"><a href="#Part-7-13-树链剖分" class="headerlink" title="Part 7.13 树链剖分"></a>Part 7.13 树链剖分</h3><blockquote>
<p>树链剖分可以将任意一条树上路径划分成若干条连续的链，并用线段树等数据结构高效维护链上信息。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3384" target="_blank" rel="noopener">P3384 【模板】树链剖分</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3313" target="_blank" rel="noopener">P3313 [SDOI2014]旅行</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2590" target="_blank" rel="noopener">P2590 [ZJOI2008]树的统计</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1505" target="_blank" rel="noopener">P1505 [国家集训队]旅游</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2486" target="_blank" rel="noopener">P2486 [SDOI2011]染色</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3258" target="_blank" rel="noopener">P3258 [JLOI2014]松鼠的新家</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4069" target="_blank" rel="noopener">P4069 [SDOI2016]游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4211" target="_blank" rel="noopener">P4211 [LNOI2014]LCA</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4592" target="_blank" rel="noopener">P4592 [TJOI2018]异或</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5305" target="_blank" rel="noopener">P5305 [GXOI/GZOI2019]旧词</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5354" target="_blank" rel="noopener">P5354 [Ynoi2017]由乃的OJ</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5499" target="_blank" rel="noopener">P5499 [LnOI2019]Abbi并不想研学</a></li>
</ul>
<h3 id="Part-7-14-树套树"><a href="#Part-7-14-树套树" class="headerlink" title="Part 7.14 树套树"></a>Part 7.14 树套树</h3><blockquote>
<p>树套树可以用来维护多维度信息。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3380" target="_blank" rel="noopener">P3380 【模板】二逼平衡树（树套树）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1975" target="_blank" rel="noopener">P1975 [国家集训队]排队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3332" target="_blank" rel="noopener">P3332 [ZJOI2013]K大数查询</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4278" target="_blank" rel="noopener">P4278 带插入区间K小值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1903" target="_blank" rel="noopener">P1903 [国家集训队]数颜色 / 维护队列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3759" target="_blank" rel="noopener">P3759 [TJOI2017]不勤劳的图书管理员</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3242" target="_blank" rel="noopener">P3242 [HNOI2015]接水果</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3248" target="_blank" rel="noopener">P3248 [HNOI2016]树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5445" target="_blank" rel="noopener">P5445 [APIO2019]路灯</a></li>
</ul>
<h3 id="Part-7-15-动态树"><a href="#Part-7-15-动态树" class="headerlink" title="Part 7.15 动态树"></a>Part 7.15 动态树</h3><blockquote>
<p>Link-Cut Tree 可以用来解决动态树一类问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3690" target="_blank" rel="noopener">P3690 【模板】Link Cut Tree （动态树）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3203" target="_blank" rel="noopener">P3203 [HNOI2010]弹飞绵羊</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4338" target="_blank" rel="noopener">P4338 [ZJOI2018]历史</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4312" target="_blank" rel="noopener">P4312 [COCI2009]OTOCI</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1501" target="_blank" rel="noopener">P1501 [国家集训队]Tree II</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2387" target="_blank" rel="noopener">P2387 [NOI2014]魔法森林</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3348" target="_blank" rel="noopener">P3348 [ZJOI2016]大森林</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3703" target="_blank" rel="noopener">P3703 [SDOI2017]树点涂色</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4172" target="_blank" rel="noopener">P4172 [WC2006]水管局长</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4219" target="_blank" rel="noopener">P4219 [BJOI2014]大融合</a></li>
<li><a href="https://www.luogu.com.cn/problemnew/solution/P5489" target="_blank" rel="noopener">P5489 EntropyIncreaser 与 动态图</a></li>
</ul>
<h3 id="Part-7-16-可持久化数据结构"><a href="#Part-7-16-可持久化数据结构" class="headerlink" title="Part 7.16 可持久化数据结构"></a>Part 7.16 可持久化数据结构</h3><blockquote>
<p>可持久化数据结构实现了在更新信息的时候保留历史版本。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3919" target="_blank" rel="noopener">P3919 【模板】可持久化数组（可持久化线段树/平衡树）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3834" target="_blank" rel="noopener">P3834 【模板】可持久化线段树 1（主席树）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3402" target="_blank" rel="noopener">P3402 【模板】可持久化并查集</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3835" target="_blank" rel="noopener">P3835 【模板】可持久化平衡树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5055" target="_blank" rel="noopener">P5055 【模板】可持久化文艺平衡树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5283" target="_blank" rel="noopener">P5283 [十二省联考2019]异或粽子</a></li>
</ul>
<h3 id="Part-7-17-K-D-Tree"><a href="#Part-7-17-K-D-Tree" class="headerlink" title="Part 7.17 K-D Tree"></a>Part 7.17 K-D Tree</h3><blockquote>
<p>K-D Tree 是一种高效处理 $ k $ 维信息的数据结构。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4357" target="_blank" rel="noopener">P4357 [CQOI2016]K远点对</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4148" target="_blank" rel="noopener">P4148 简单题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2479" target="_blank" rel="noopener">P2479 [SDOI2010]捉迷藏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3769" target="_blank" rel="noopener">P3769 [CH弱省胡策R2]TATT</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4169" target="_blank" rel="noopener">P4169 [Violet]天使玩偶/SJY摆棋子</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4390" target="_blank" rel="noopener">P4390 [BOI2007]Mokia</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4475" target="_blank" rel="noopener">P4475 巧克力王国</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2093" target="_blank" rel="noopener">P2093 [国家集训队]JZPFAR</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5471" target="_blank" rel="noopener">P5471 [NOI2019]弹跳</a></li>
</ul>
<h3 id="Part-7-18-珂朵莉树"><a href="#Part-7-18-珂朵莉树" class="headerlink" title="Part 7.18 珂朵莉树"></a>Part 7.18 珂朵莉树</h3><blockquote>
<p>珂朵莉树，是一种基于 <code>std::set</code> 的暴力数据结构，在数据随机的情况下表现优秀。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5251" target="_blank" rel="noopener">P5251 [LnOI2019]第二代图灵机</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5350" target="_blank" rel="noopener">P5350 序列</a></li>
</ul>
<h2 id="Part-8-图论"><a href="#Part-8-图论" class="headerlink" title="Part 8 图论"></a>Part 8 图论</h2><blockquote>
<p>图论是数学的一个分支，它以图为研究的对象。</p>
</blockquote>
<h3 id="Part-8-1-图的存储与遍历"><a href="#Part-8-1-图的存储与遍历" class="headerlink" title="Part 8.1 图的存储与遍历"></a>Part 8.1 图的存储与遍历</h3><blockquote>
<p>这里的图论内容都比较简单，涉及图的存储以及遍历图的方式。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2661" target="_blank" rel="noopener">P2661 信息传递</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2921" target="_blank" rel="noopener">P2921 [USACO08DEC]Trick or Treat on the Farm</a></li>
</ul>
<h3 id="Part-8-2-最短路问题"><a href="#Part-8-2-最短路问题" class="headerlink" title="Part 8.2 最短路问题"></a>Part 8.2 最短路问题</h3><blockquote>
<p>很多题目都可以转化为最短路的模型。因此，掌握最短路算法非常重要。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3371" target="_blank" rel="noopener">P3371 【模板】单源最短路径（弱化版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4779" target="_blank" rel="noopener">P4779 【模板】单源最短路径（标准版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5905" target="_blank" rel="noopener">P5905 【模板】Johnson 全源最短路</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1144" target="_blank" rel="noopener">P1144 最短路计数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1462" target="_blank" rel="noopener">P1462 通往奥格瑞玛的道路</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1522" target="_blank" rel="noopener">P1522 Cow Tours</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1266" target="_blank" rel="noopener">P1266 速度限制</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4001" target="_blank" rel="noopener">P4001 [ICPC-Beijing 2006]狼抓兔子</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4568" target="_blank" rel="noopener">P4568 [JLOI2011]飞行路线</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3238" target="_blank" rel="noopener">P3238 [HNOI2014]道路堵塞</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5304" target="_blank" rel="noopener">P5304 [GXOI/GZOI2019]旅行者</a></li>
</ul>
<h3 id="Part-8-3-树上问题"><a href="#Part-8-3-树上问题" class="headerlink" title="Part 8.3 树上问题"></a>Part 8.3 树上问题</h3><blockquote>
<p>作为一种特殊的图，树上的问题具有很多鲜明的特点。</p>
</blockquote>
<h4 id="Part-8-3-1-二叉树"><a href="#Part-8-3-1-二叉树" class="headerlink" title="Part 8.3.1 二叉树"></a>Part 8.3.1 二叉树</h4><blockquote>
<p>二叉树是一种特殊的树，它有很多特殊的性质。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1087" target="_blank" rel="noopener">P1087 FBI树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1030" target="_blank" rel="noopener">P1030 求先序排列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1305" target="_blank" rel="noopener">P1305 新二叉树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1229" target="_blank" rel="noopener">P1229 遍历问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5018" target="_blank" rel="noopener">P5018 对称二叉树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5597" target="_blank" rel="noopener">P5597 【XR-4】复读</a></li>
</ul>
<h4 id="Part-8-3-2-树的直径"><a href="#Part-8-3-2-树的直径" class="headerlink" title="Part 8.3.2 树的直径"></a>Part 8.3.2 树的直径</h4><blockquote>
<p>树的直径被定义为树上最远的两点间的距离。</p>
<p>计算树的直径，可以通过两遍 DFS 解决。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2195" target="_blank" rel="noopener">P2195 HXY造公园</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3629" target="_blank" rel="noopener">P3629 [APIO2010]巡逻</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5536" target="_blank" rel="noopener">P5536 【XR-3】核心城市</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1099" target="_blank" rel="noopener">P1099 树网的核</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4408" target="_blank" rel="noopener">P4408 [NOI2003]逃学的小孩</a></li>
</ul>
<h4 id="Part-8-3-3-最近公共祖先"><a href="#Part-8-3-3-最近公共祖先" class="headerlink" title="Part 8.3.3 最近公共祖先"></a>Part 8.3.3 最近公共祖先</h4><blockquote>
<p>两个点的最近公共祖先，即两个点的所有公共祖先中，离根节点最远的一个节点。</p>
<p>求解最近公共祖先，常用的方法是树上倍增或者树链剖分。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3379" target="_blank" rel="noopener">P3379 【模板】最近公共祖先（LCA）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3938" target="_blank" rel="noopener">P3938 斐波那契</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4281" target="_blank" rel="noopener">P4281 [AHOI2008]紧急集合 / 聚会</a></li>
</ul>
<h3 id="Part-8-4-生成树"><a href="#Part-8-4-生成树" class="headerlink" title="Part 8.4 生成树"></a>Part 8.4 生成树</h3><blockquote>
<p>用 $ n-1 $ 条边将图上的 $ n $ 个点连接起来，形成的树就被称为生成树。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3366" target="_blank" rel="noopener">P3366 【模板】最小生成树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4180" target="_blank" rel="noopener">P4180 【模板】严格次小生成树[BJWC2010]</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2872" target="_blank" rel="noopener">P2872 [USACO07DEC]Building Roads</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1991" target="_blank" rel="noopener">P1991 无线通讯网</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1967" target="_blank" rel="noopener">P1967 货车运输</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4047" target="_blank" rel="noopener">P4047 [JSOI2010]部落划分</a></li>
</ul>
<h3 id="Part-8-5-拓扑排序"><a href="#Part-8-5-拓扑排序" class="headerlink" title="Part 8.5 拓扑排序"></a>Part 8.5 拓扑排序</h3><blockquote>
<p>将一个有向无环图排序，使得所有排在前面的节点不能依赖于排在后面的节点，这就是拓扑排序。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1113" target="_blank" rel="noopener">P1113 杂务</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1983" target="_blank" rel="noopener">P1983 车站分级</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1038" target="_blank" rel="noopener">P1038 神经网络</a></li>
</ul>
<h3 id="Part-8-6-差分约束"><a href="#Part-8-6-差分约束" class="headerlink" title="Part 8.6 差分约束"></a>Part 8.6 差分约束</h3><blockquote>
<p>差分约束要解决的问题是：求出一组 $ n $ 元不等式的一组解，使得所有约束关系都能得到满足。 </p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5960" target="_blank" rel="noopener">P5960 【模板】差分约束算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3275" target="_blank" rel="noopener">P3275 [SCOI2011]糖果</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2294" target="_blank" rel="noopener">P2294 [HNOI2005]狡猾的商人</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4926" target="_blank" rel="noopener">P4926 [1007]倍杀测量者</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5590" target="_blank" rel="noopener">P5590 赛车游戏</a></li>
</ul>
<h3 id="Part-8-7-图的连通性相关"><a href="#Part-8-7-图的连通性相关" class="headerlink" title="Part 8.7 图的连通性相关"></a>Part 8.7 图的连通性相关</h3><blockquote>
<p>利用 Tarjan 算法，我们可以解决很多与图的连通性相关的问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3387" target="_blank" rel="noopener">P3387 【模板】缩点</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3388" target="_blank" rel="noopener">P3388 【模板】割点（割顶）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2341" target="_blank" rel="noopener">P2341 [HAOI2006]受欢迎的牛</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2863" target="_blank" rel="noopener">P2863 [USACO06JAN]The Cow Prom</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2746" target="_blank" rel="noopener">P2746 [USACO5.3]Network of Schools</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1407" target="_blank" rel="noopener">P1407 [国家集训队]稳定婚姻</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2272" target="_blank" rel="noopener">P2272 [ZJOI2007]最大半连通子图</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3225" target="_blank" rel="noopener">P3225 [HNOI2012]矿场搭建</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5058" target="_blank" rel="noopener">P5058 [ZJOI2004]嗅探器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2515" target="_blank" rel="noopener">P2515 [HAOI2010]软件安装</a></li>
</ul>
<h3 id="Part-8-8-二分图"><a href="#Part-8-8-二分图" class="headerlink" title="Part 8.8 二分图"></a>Part 8.8 二分图</h3><blockquote>
<p>二分图上的不少问题都可以转化成网络流解决，当然也有独特的其他方法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3386" target="_blank" rel="noopener">P3386 【模板】二分图匹配</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2756" target="_blank" rel="noopener">P2756 飞行员配对方案问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1129" target="_blank" rel="noopener">P1129 [ZJOI2007]矩阵游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1559" target="_blank" rel="noopener">P1559 运动员最佳匹配问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2423" target="_blank" rel="noopener">P2423 [HEOI2012]朋友圈</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2764" target="_blank" rel="noopener">P2764 最小路径覆盖问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2825" target="_blank" rel="noopener">P2825 [HEOI2016/TJOI2016]游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3033" target="_blank" rel="noopener">P3033 [USACO11NOV]Cow Steeplechase</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3731" target="_blank" rel="noopener">P3731 [HAOI2017]新型城市化</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4014" target="_blank" rel="noopener">P4014 分配问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4617" target="_blank" rel="noopener">P4617 [COCI2017-2018#5] Planinarenje</a></li>
</ul>
<h3 id="Part-8-9-网络流"><a href="#Part-8-9-网络流" class="headerlink" title="Part 8.9 网络流"></a>Part 8.9 网络流</h3><blockquote>
<p>网络流是图论中一个重要的分支，很多题目都可以通过建立网络流的模型来解决。</p>
</blockquote>
<h4 id="Part-8-9-1-最大流"><a href="#Part-8-9-1-最大流" class="headerlink" title="Part 8.9.1 最大流"></a>Part 8.9.1 最大流</h4><blockquote>
<p>最大流，即求网络中最大的流量。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3376" target="_blank" rel="noopener">P3376 【模板】网络最大流</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4722" target="_blank" rel="noopener">P4722 【模板】最大流 加强版 / 预流推进</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2065" target="_blank" rel="noopener">P2065 [TJOI2011]卡片</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2763" target="_blank" rel="noopener">P2763 试题库问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2472" target="_blank" rel="noopener">P2472 [SCOI2007]蜥蜴</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2754" target="_blank" rel="noopener">P2754 [CTSC1999]家园</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2765" target="_blank" rel="noopener">P2765 魔术球问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2766" target="_blank" rel="noopener">P2766 最长不下降子序列问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2805" target="_blank" rel="noopener">P2805 [NOI2009]植物大战僵尸</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3749" target="_blank" rel="noopener">P3749 [六省联考2017]寿司餐厅</a></li>
</ul>
<h4 id="Part-8-9-2-最小割"><a href="#Part-8-9-2-最小割" class="headerlink" title="Part 8.9.2 最小割"></a>Part 8.9.2 最小割</h4><blockquote>
<p>最小割，即求一个边权最小的边集，使得源点和汇点不再连通。</p>
<p>可以证明，<strong>最大流=最小割</strong>。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1344" target="_blank" rel="noopener">P1344 [USACO4.4]Pollutant Control</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1345" target="_blank" rel="noopener">P1345 [USACO5.4]Telecowmunication</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2057" target="_blank" rel="noopener">P2057 [SHOI2007]善意的投票</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2598" target="_blank" rel="noopener">P2598 [ZJOI2009]狼和羊的故事</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2774" target="_blank" rel="noopener">P2774 方格取数问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4126" target="_blank" rel="noopener">P4126 [AHOI2009]最小割</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5039" target="_blank" rel="noopener">P5039 [SHOI2010]最小生成树</a></li>
</ul>
<h4 id="Part-8-9-3-费用流"><a href="#Part-8-9-3-费用流" class="headerlink" title="Part 8.9.3 费用流"></a>Part 8.9.3 费用流</h4><blockquote>
<p>在网络流中给边加上一个参数——费用，就出现了费用流。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3381" target="_blank" rel="noopener">P3381 【模板】最小费用最大流</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4016" target="_blank" rel="noopener">P4016 负载平衡问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4452" target="_blank" rel="noopener">P4452 [国家集训队]航班安排</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2045" target="_blank" rel="noopener">P2045 方格取数加强版</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2050" target="_blank" rel="noopener">P2050 [NOI2012]美食节</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2053" target="_blank" rel="noopener">P2053 [SCOI2007]修车</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2604" target="_blank" rel="noopener">P2604 [ZJOI2010]网络扩容</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2770" target="_blank" rel="noopener">P2770 航空路线问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3159" target="_blank" rel="noopener">P3159 [CQOI2012]交换棋子</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3356" target="_blank" rel="noopener">P3356 火星探险问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3358" target="_blank" rel="noopener">P3358 最长k可重区间集问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4013" target="_blank" rel="noopener">P4013 数字梯形问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4015" target="_blank" rel="noopener">P4015 运输问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5331" target="_blank" rel="noopener">P5331 [SNOI2019]通信</a></li>
</ul>
<h4 id="Part-8-9-4-上下界网络流"><a href="#Part-8-9-4-上下界网络流" class="headerlink" title="Part 8.9.4 上下界网络流"></a>Part 8.9.4 上下界网络流</h4><blockquote>
<p>在网络流问题中给每条边的流量增加一个下界，就有了上下界网络流。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3980" target="_blank" rel="noopener">P3980 [NOI2008]志愿者招募</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4043" target="_blank" rel="noopener">P4043 [AHOI2014/JSOI2014]支线剧情</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4553" target="_blank" rel="noopener">P4553 80人环游世界</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4843" target="_blank" rel="noopener">P4843 清理雪道</a></li>
</ul>
<h3 id="Part-8-10-2-SAT"><a href="#Part-8-10-2-SAT" class="headerlink" title="Part 8.10 2-SAT"></a>Part 8.10 2-SAT</h3><blockquote>
<p>k-SAT 问题的目标是对一些布尔变量赋值，满足限定的条件。</p>
<p>在 k-SAT 问题中，2-SAT 问题属于较为容易解决的一类。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4782" target="_blank" rel="noopener">P4782 【模板】2-SAT 问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4171" target="_blank" rel="noopener">P4171 [JSOI2010]满汉全席</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3825" target="_blank" rel="noopener">P3825 [NOI2017]游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5332" target="_blank" rel="noopener">P5332 [JSOI2019]精准预测</a></li>
</ul>
<h3 id="Part-8-11-点分治"><a href="#Part-8-11-点分治" class="headerlink" title="Part 8.11 点分治"></a>Part 8.11 点分治</h3><blockquote>
<p>点分治是一种可以高效统计树上路径信息的算法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3806" target="_blank" rel="noopener">P3806 【模板】点分治1</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2634" target="_blank" rel="noopener">P2634 [国家集训队]聪聪可可</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2664" target="_blank" rel="noopener">P2664 树上游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3714" target="_blank" rel="noopener">P3714 [BJOI2017]树的难题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4149" target="_blank" rel="noopener">P4149 [IOI2011]Race</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3241" target="_blank" rel="noopener">P3241 [HNOI2015]开店</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4075" target="_blank" rel="noopener">P4075 [SDOI2016]模式字符串</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4183" target="_blank" rel="noopener">P4183 [USACO18JAN]Cow at Large P</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4292" target="_blank" rel="noopener">P4292 [WC2010]重建计划</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5306" target="_blank" rel="noopener">P5306 [COCI2019]Transport</a></li>
</ul>
<h3 id="Part-8-12-虚树"><a href="#Part-8-12-虚树" class="headerlink" title="Part 8.12 虚树"></a>Part 8.12 虚树</h3><blockquote>
<p>将一些无用的点从树上删去，从而达到降低树的规模的效果。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2495" target="_blank" rel="noopener">P2495 [SDOI2011]消耗战</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3233" target="_blank" rel="noopener">P3233 [HNOI2014]世界树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5360" target="_blank" rel="noopener">P5360 [SDOI2019]世界地图</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5439" target="_blank" rel="noopener">P5439 【XR-2】永恒</a></li>
</ul>
<h3 id="Part-8-13-矩阵树定理"><a href="#Part-8-13-矩阵树定理" class="headerlink" title="Part 8.13 矩阵树定理"></a>Part 8.13 矩阵树定理</h3><blockquote>
<p>矩阵树定理可以解决图的生成树计数问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4111" target="_blank" rel="noopener">P4111 [HEOI2015]小Z的房间</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2144" target="_blank" rel="noopener">P2144 [FJOI2007]轮状病毒</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3317" target="_blank" rel="noopener">P3317 [SDOI2014]重建</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4208" target="_blank" rel="noopener">P4208 [JSOI2008]最小生成树计数</a></li>
</ul>
<h2 id="Part-9-计算几何"><a href="#Part-9-计算几何" class="headerlink" title="Part 9 计算几何"></a>Part 9 计算几何</h2><blockquote>
<p>试着用计算机来解决几何问题吧！</p>
</blockquote>
<h3 id="Part-9-1-凸包"><a href="#Part-9-1-凸包" class="headerlink" title="Part 9.1 凸包"></a>Part 9.1 凸包</h3><blockquote>
<p>凸包指在平面上能包含所有给定点的最小凸多边形。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2742" target="_blank" rel="noopener">P2742 【模板】二维凸包</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2287" target="_blank" rel="noopener">P2287 [HNOI2004]最佳包裹</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3829" target="_blank" rel="noopener">P3829 [SHOI2012]信用卡凸包</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4680" target="_blank" rel="noopener">P4680 [Ynoi2018]末日时在做什么?有没有空?可以来拯救吗?</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4557" target="_blank" rel="noopener">P4557 [JSOI2018]战争</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5403" target="_blank" rel="noopener">P5403 [CTS2019]田野</a></li>
</ul>
<h3 id="Part-9-2-旋转卡壳"><a href="#Part-9-2-旋转卡壳" class="headerlink" title="Part 9.2 旋转卡壳"></a>Part 9.2 旋转卡壳</h3><blockquote>
<p>旋转卡壳是一种求出凸包所有对踵点对的算法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1452" target="_blank" rel="noopener">P1452 Beauty Contest</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3187" target="_blank" rel="noopener">P3187 [HNOI2007]最小矩形覆盖</a></li>
</ul>
<h3 id="Part-9-3-半平面交"><a href="#Part-9-3-半平面交" class="headerlink" title="Part 9.3 半平面交"></a>Part 9.3 半平面交</h3><blockquote>
<p>多个半平面的交集称之为半平面交。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3256" target="_blank" rel="noopener">P3256 [JLOI2013]赛车</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2600" target="_blank" rel="noopener">P2600 [ZJOI2008]瞭望塔</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4196" target="_blank" rel="noopener">P4196 [CQOI2006]凸多边形</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3297" target="_blank" rel="noopener">P3297 [SDOI2013]逃考</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4250" target="_blank" rel="noopener">P4250 [SCOI2015]小凸想跑步</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5328" target="_blank" rel="noopener">P5328 [ZJOI2019]浙江省选</a></li>
</ul>
<h2 id="Part-10-杂项"><a href="#Part-10-杂项" class="headerlink" title="Part 10 杂项"></a>Part 10 杂项</h2><blockquote>
<p>这里的专题，有很多都难以纳入前面的类别中，故将他们单独列入了杂项。</p>
</blockquote>
<h3 id="Part-10-1-模拟退火"><a href="#Part-10-1-模拟退火" class="headerlink" title="Part 10.1 模拟退火"></a>Part 10.1 模拟退火</h3><blockquote>
<p>模拟退火是一种随机化算法。当一个问题的方案数量极大（甚至是无穷的）而且不是一个单峰函数时，我们常使用模拟退火求解。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1337" target="_blank" rel="noopener">P1337 [JSOI2004]平衡点 / 吊打XXX</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2503" target="_blank" rel="noopener">P2503 [HAOI2006]均分数据</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3878" target="_blank" rel="noopener">P3878 [TJOI2010]分金币</a></li>
</ul>
<h3 id="Part-10-2-0-1-分数规划"><a href="#Part-10-2-0-1-分数规划" class="headerlink" title="Part 10.2 0/1 分数规划"></a>Part 10.2 0/1 分数规划</h3><blockquote>
<p>0/1 分数规划用来求一个分式的极值。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4377" target="_blank" rel="noopener">P4377 [USACO18OPEN]Talent Show</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3199" target="_blank" rel="noopener">P3199 [HNOI2009]最小圈</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3288" target="_blank" rel="noopener">P3288 [SCOI2014]方伯伯运椰子</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3705" target="_blank" rel="noopener">P3705 [SDOI2017]新生舞会</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4322" target="_blank" rel="noopener">P4322 [JSOI2016]最佳团体</a></li>
</ul>
<h3 id="Part-10-3-离线算法"><a href="#Part-10-3-离线算法" class="headerlink" title="Part 10.3 离线算法"></a>Part 10.3 离线算法</h3><blockquote>
<p>当题目不要求强制在线时，我们可以一次性读入所有询问来处理。</p>
</blockquote>
<h4 id="Part-10-3-1-CDQ-分治"><a href="#Part-10-3-1-CDQ-分治" class="headerlink" title="Part 10.3.1 CDQ 分治"></a>Part 10.3.1 CDQ 分治</h4><blockquote>
<p>CDQ 分治是一个基于分治思想的离线算法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3810" target="_blank" rel="noopener">P3810 【模板】三维偏序（陌上花开）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3157" target="_blank" rel="noopener">P3157 [CQOI2011]动态逆序对</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2487" target="_blank" rel="noopener">P2487 [SDOI2011]拦截导弹</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4690" target="_blank" rel="noopener">P4690 [Ynoi2016]镜中的昆虫</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3206" target="_blank" rel="noopener">P3206 [HNOI2010]城市建设</a></li>
</ul>
<h4 id="Part-10-3-2-整体二分"><a href="#Part-10-3-2-整体二分" class="headerlink" title="Part 10.3.2 整体二分"></a>Part 10.3.2 整体二分</h4><blockquote>
<p>整体二分，顾名思义就是把多个查询一起二分解决。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1527" target="_blank" rel="noopener">P1527 [国家集训队]矩阵乘法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2617" target="_blank" rel="noopener">P2617 Dynamic Rankings</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3527" target="_blank" rel="noopener">P3527 [POI2011]MET-Meteors</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4602" target="_blank" rel="noopener">P4602 [CTSC2018]混合果汁</a></li>
</ul>
<h4 id="Part-10-3-3-莫队"><a href="#Part-10-3-3-莫队" class="headerlink" title="Part 10.3.3 莫队"></a>Part 10.3.3 莫队</h4><blockquote>
<p>莫队算法可以解决不少离线区间询问问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1494" target="_blank" rel="noopener">P1494 [国家集训队]小Z的袜子 /【模板】莫队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1903" target="_blank" rel="noopener">P1903 [国家集训队]数颜色 / 维护队列 /【模板】带修莫队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5906" target="_blank" rel="noopener">P5906 【模板】回滚莫队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4887" target="_blank" rel="noopener">P4887 【模板】莫队二次离线（第十四分块(前体)）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2709" target="_blank" rel="noopener">P2709 小B的询问</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3674" target="_blank" rel="noopener">P3674 小清新人渣的本愿</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3709" target="_blank" rel="noopener">P3709 大爷的字符串题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4074" target="_blank" rel="noopener">P4074 [WC2013]糖果公园</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5501" target="_blank" rel="noopener">P5501 [LnOI2019]来者不拒，去者不追</a></li>
</ul>
<h3 id="Part-10-4-奇怪的题目"><a href="#Part-10-4-奇怪的题目" class="headerlink" title="Part 10.4 奇怪的题目"></a>Part 10.4 奇怪的题目</h3><blockquote>
<p>OI 界中有一些非常规套路的题目，这里放出来分享。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4920" target="_blank" rel="noopener">P4920 [WC2015]未来程序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5042" target="_blank" rel="noopener">P5042 [国家集训队]丢失的题面（ydc的题面）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5285" target="_blank" rel="noopener">P5285 [十二省联考2019]骗分过样例</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5246" target="_blank" rel="noopener">P5246 [集训队互测2016]消失的源代码</a></li>
</ul>
<h3 id="Part-10-5-非传统题"><a href="#Part-10-5-非传统题" class="headerlink" title="Part 10.5 非传统题"></a>Part 10.5 非传统题</h3><blockquote>
<p>在 NOI 等比赛中，非传统题正越来越频繁出现。</p>
<p>非传统题主要包括以下几类：提交答案题，交互题，通信题。</p>
</blockquote>
<h4 id="Part-10-5-1-提交答案题"><a href="#Part-10-5-1-提交答案题" class="headerlink" title="Part 10.5.1 提交答案题"></a>Part 10.5.1 提交答案题</h4><blockquote>
<p>给你一些输入，你只需要提交这些输入对应的答案，即为提交答案题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1335" target="_blank" rel="noopener">P1335 [NOI2013]小Q的修炼</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1737" target="_blank" rel="noopener">P1737 [NOI2016]旷野大计算</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3614" target="_blank" rel="noopener">P3614 yyy棋 II</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3640" target="_blank" rel="noopener">P3640 [APIO2013]出题人</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3782" target="_blank" rel="noopener">P3782 [WC2017]排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3836" target="_blank" rel="noopener">P3836 Nowruz</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4920" target="_blank" rel="noopener">P4920 [WC2015]未来程序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5402" target="_blank" rel="noopener">P5402 [CTS2019]无处安放</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5418" target="_blank" rel="noopener">P5418 [CTSC2016]NOIP十合一</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5600" target="_blank" rel="noopener">P5600 【XR-4】尺规作图</a></li>
</ul>
]]></content>
      <categories>
        <category>Moving</category>
      </categories>
  </entry>
  <entry>
    <title>题单（尚未完成）</title>
    <url>/List_Unfinished/</url>
    <content><![CDATA[<blockquote>
<p>List_Unfinished</p>
</blockquote>
<a id="more"></a>
<h2 id="Part-2-基础算法"><a href="#Part-2-基础算法" class="headerlink" title="Part 2 基础算法"></a>Part 2 基础算法</h2><blockquote>
<p>这一部分的内容包含了 OI 中的基础算法，供各位巩固基础。</p>
<p>当然，这里面也有一些难度比较高的题目。</p>
</blockquote>
<h3 id="Part-2-1-模拟"><a href="#Part-2-1-模拟" class="headerlink" title="Part 2.1 模拟"></a>Part 2.1 模拟</h3><blockquote>
<p>模拟，顾名思义就是题目要求你做什么你就做什么，这样的题目很考验选手的代码组织能力。</p>
<p>这里不仅仅有非常基础的模拟，也有一些非常复杂的题目。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1003" target="_blank" rel="noopener">P1003 铺地毯</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1067" target="_blank" rel="noopener">P1067 多项式输出</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1328" target="_blank" rel="noopener">P1328 生活大爆炸版石头剪刀布</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1563" target="_blank" rel="noopener">P1563 玩具谜题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1042" target="_blank" rel="noopener">P1042 乒乓球</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1179" target="_blank" rel="noopener">P1179 数字统计</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2615" target="_blank" rel="noopener">P2615 神奇的幻方</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3952" target="_blank" rel="noopener">P3952 时间复杂度</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2482" target="_blank" rel="noopener">P2482 [SDOI2010]猪国杀</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5380" target="_blank" rel="noopener">P5380 [THUPC2019]鸭棋</a></li>
</ul>
<h3 id="Part-2-2-排序算法"><a href="#Part-2-2-排序算法" class="headerlink" title="Part 2.2 排序算法"></a>Part 2.2 排序算法</h3><blockquote>
<p>通过排序，我们可以将数据有序化，这让我们对数据的处理方便了很多。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1177" target="_blank" rel="noopener">P1177 【模板】快速排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1059" target="_blank" rel="noopener">P1059 明明的随机数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1068" target="_blank" rel="noopener">P1068 分数线划定</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1051" target="_blank" rel="noopener">P1051 谁拿了最多奖学金</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1309" target="_blank" rel="noopener">P1309 瑞士轮</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1908" target="_blank" rel="noopener">P1908 逆序对</a></li>
</ul>
<h3 id="Part-2-3-二分答案"><a href="#Part-2-3-二分答案" class="headerlink" title="Part 2.3 二分答案"></a>Part 2.3 二分答案</h3><blockquote>
<p>对一个满足单调性质的问题，我们可以采用二分答案的方法来解决。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1024" target="_blank" rel="noopener">P1024 一元三次方程求解</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2678" target="_blank" rel="noopener">P2678 跳石头</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1316" target="_blank" rel="noopener">P1316 丢瓶盖</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1902" target="_blank" rel="noopener">P1902 刺杀大使</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1314" target="_blank" rel="noopener">P1314 聪明的质监员</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1083" target="_blank" rel="noopener">P1083 借教室</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4343" target="_blank" rel="noopener">P4343 [SHOI2015]自动刷题机</a></li>
</ul>
<h3 id="Part-2-4-分治"><a href="#Part-2-4-分治" class="headerlink" title="Part 2.4 分治"></a>Part 2.4 分治</h3><blockquote>
<p>分治，即分而治之，将大问题分解为小问题，分别求解，最后合并结果。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1226" target="_blank" rel="noopener">P1226 【模板】快速幂||取余运算</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1010" target="_blank" rel="noopener">P1010 幂次方</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1429" target="_blank" rel="noopener">P1429 平面最近点对（加强版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3612" target="_blank" rel="noopener">P3612 [USACO17JAN]Secret Cow Code</a></li>
</ul>
<h3 id="Part-2-5-贪心"><a href="#Part-2-5-贪心" class="headerlink" title="Part 2.5 贪心"></a>Part 2.5 贪心</h3><blockquote>
<p>贪心，指的是决策时都采取当前最优解的算法。有的时候，这样做确实可以获得最优解。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1208" target="_blank" rel="noopener">P1208 [USACO1.3]Mixing Milk</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4995" target="_blank" rel="noopener">P4995 跳跳！</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1094" target="_blank" rel="noopener">P1094 纪念品分组</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1199" target="_blank" rel="noopener">P1199 三国游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2672" target="_blank" rel="noopener">P2672 推销员</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1080" target="_blank" rel="noopener">P1080 国王游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2123" target="_blank" rel="noopener">P2123 皇后游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5521" target="_blank" rel="noopener">P5521 [yLOI2019]梅深不见冬</a></li>
</ul>
<h3 id="Part-2-6-构造"><a href="#Part-2-6-构造" class="headerlink" title="Part 2.6 构造"></a>Part 2.6 构造</h3><blockquote>
<p>构造题是一种形式灵活多样的题型。正是因为这个特点，使得构造题没有一种通用的方法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3599" target="_blank" rel="noopener">P3599 Koishi Loves Construction</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5441" target="_blank" rel="noopener">P5441 【XR-2】伤痕</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5595" target="_blank" rel="noopener">P5595 【XR-4】歌唱比赛</a></li>
</ul>
<h3 id="Part-2-7-高精度"><a href="#Part-2-7-高精度" class="headerlink" title="Part 2.7 高精度"></a>Part 2.7 高精度</h3><blockquote>
<p>在 C++ 中，long long 都无法表示我们需要的整数时怎么办？那就用高精度吧！</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1601" target="_blank" rel="noopener">P1601 A+B Problem（高精）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2142" target="_blank" rel="noopener">P2142 高精度减法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1303" target="_blank" rel="noopener">P1303 A*B Problem</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1480" target="_blank" rel="noopener">P1480 A/B Problem</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1009" target="_blank" rel="noopener">P1009 阶乘之和</a></li>
</ul>
<h3 id="Part-2-8-前缀和-amp-差分"><a href="#Part-2-8-前缀和-amp-差分" class="headerlink" title="Part 2.8 前缀和 &amp; 差分"></a>Part 2.8 前缀和 &amp; 差分</h3><blockquote>
<p>前缀和是一种重要的预处理，能大大降低查询的时间复杂度，而差分则是一种和前缀和相对的策略。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3131" target="_blank" rel="noopener">P3131 [USACO16JAN]Subsequences Summing to Sevens</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1387" target="_blank" rel="noopener">P1387 最大正方形</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3397" target="_blank" rel="noopener">P3397 地毯</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2280" target="_blank" rel="noopener">P2280 [HNOI2003]激光炸弹</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4552" target="_blank" rel="noopener">P4552 [Poetize6] IncDec Sequence</a></li>
</ul>
<h2 id="Part-3-搜索"><a href="#Part-3-搜索" class="headerlink" title="Part 3 搜索"></a>Part 3 搜索</h2><blockquote>
<p>搜索其实就是高级的枚举，很多题目都可以用搜索完成。就算不能，搜索也是骗分神器。</p>
</blockquote>
<h3 id="Part-3-1-深度优先搜索"><a href="#Part-3-1-深度优先搜索" class="headerlink" title="Part 3.1 深度优先搜索"></a>Part 3.1 深度优先搜索</h3><blockquote>
<p>深度优先搜索（DFS），即按照深度优先的顺序搜索的算法。</p>
<p>深度优先搜索一般使用栈来实现。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1219" target="_blank" rel="noopener">P1219 八皇后</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1019" target="_blank" rel="noopener">P1019 单词接龙</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5194" target="_blank" rel="noopener">P5194 [USACO05DEC]Scales</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5440" target="_blank" rel="noopener">P5440 【XR-2】奇迹</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1378" target="_blank" rel="noopener">P1378 油滴扩展</a></li>
</ul>
<h3 id="Part-3-2-广度优先搜索"><a href="#Part-3-2-广度优先搜索" class="headerlink" title="Part 3.2 广度优先搜索"></a>Part 3.2 广度优先搜索</h3><blockquote>
<p>广度优先搜索（BFS），即优先扩展浅层节点，逐渐深入的搜索算法。</p>
<p>广度优先搜索一般使用队列来实现。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1162" target="_blank" rel="noopener">P1162 填涂颜色</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1443" target="_blank" rel="noopener">P1443 马的遍历</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3956" target="_blank" rel="noopener">P3956 棋盘</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1032" target="_blank" rel="noopener">P1032 字串变换</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1126" target="_blank" rel="noopener">P1126 机器人搬重物</a></li>
</ul>
<h3 id="Part-3-3-记忆化搜索"><a href="#Part-3-3-记忆化搜索" class="headerlink" title="Part 3.3 记忆化搜索"></a>Part 3.3 记忆化搜索</h3><blockquote>
<p>通过将已经遍历的状态记录下来，从而减少重复的搜索量，这就是记忆化搜索。</p>
<p>动态规划的时候，记忆化搜索也是一种高效简洁的实现方式。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1514" target="_blank" rel="noopener">P1514 引水入城</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1535" target="_blank" rel="noopener">P1535 游荡的奶牛</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1434" target="_blank" rel="noopener">P1434 [SHOI2002]滑雪</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3953" target="_blank" rel="noopener">P3953 逛公园</a></li>
</ul>
<h3 id="Part-3-4-搜索的剪枝"><a href="#Part-3-4-搜索的剪枝" class="headerlink" title="Part 3.4 搜索的剪枝"></a>Part 3.4 搜索的剪枝</h3><blockquote>
<p>对于一些不必要搜索的部分，我们可以避免访问这些状态，从而提高搜索效率。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1120" target="_blank" rel="noopener">P1120 小木棍 ［数据加强版］</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1312" target="_blank" rel="noopener">P1312 Mayan游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1074" target="_blank" rel="noopener">P1074 靶形数独</a></li>
</ul>
<h3 id="Part-3-5-双向搜索"><a href="#Part-3-5-双向搜索" class="headerlink" title="Part 3.5 双向搜索"></a>Part 3.5 双向搜索</h3><blockquote>
<p>在搜索时，如果能从初态和终态出发，同时进行搜索，就可以减小搜索树的规模，提高时间效率。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3067" target="_blank" rel="noopener">P3067 [USACO12OPEN]Balanced Cow Subsets</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4799" target="_blank" rel="noopener">P4799 [CEOI2015 Day2]世界冰球锦标赛</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5195" target="_blank" rel="noopener">P5195 [USACO05DEC]Knights of Ni</a></li>
</ul>
<h3 id="Part-3-6-A"><a href="#Part-3-6-A" class="headerlink" title="Part 3.6 A*"></a>Part 3.6 A*</h3><blockquote>
<p>在 BFS 中，如果能设计一个合理的估价函数，就可以更快扩展到最优解。这就是 A*算法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1379" target="_blank" rel="noopener">P1379 八数码难题</a></li>
</ul>
<h3 id="Part-3-7-IDA"><a href="#Part-3-7-IDA" class="headerlink" title="Part 3.7 IDA*"></a>Part 3.7 IDA*</h3><blockquote>
<p>像 BFS 那样，每次只扩展一层节点，却采用 DFS 方式来遍历搜索树，这就是迭代加深搜索。</p>
<p>再加上一个估价函数来减小搜索量，就是 IDA*了。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2324" target="_blank" rel="noopener">P2324 [SCOI2005]骑士精神</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2534" target="_blank" rel="noopener">P2534 [AHOI2012]铁盘整理</a></li>
</ul>
<h3 id="Part-3-8-DLX"><a href="#Part-3-8-DLX" class="headerlink" title="Part 3.8 DLX"></a>Part 3.8 DLX</h3><blockquote>
<p>算法 X 是通过回溯法求解精确覆盖问题的算法，而删除列这一操作可以使用舞蹈链加速。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4929" target="_blank" rel="noopener">P4929 【模板】舞蹈链（DLX）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4205" target="_blank" rel="noopener">P4205 [NOI2005]智慧珠游戏</a></li>
</ul>
<h2 id="Part-4-动态规划"><a href="#Part-4-动态规划" class="headerlink" title="Part 4 动态规划"></a>Part 4 动态规划</h2><blockquote>
<p>动态规划是一种重要的思维方法，通过利用已有的子问题信息高效求出当前问题的最优解。</p>
</blockquote>
<h3 id="Part-4-1-线性动态规划"><a href="#Part-4-1-线性动态规划" class="headerlink" title="Part 4.1 线性动态规划"></a>Part 4.1 线性动态规划</h3><blockquote>
<p>线性动态规划，即具有线性阶段划分的动态规划。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1216" target="_blank" rel="noopener">P1216 数字三角形</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1020" target="_blank" rel="noopener">P1020 导弹拦截</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1091" target="_blank" rel="noopener">P1091 合唱队形</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1095" target="_blank" rel="noopener">P1095 守望者的逃离</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1541" target="_blank" rel="noopener">P1541 乌龟棋</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1868" target="_blank" rel="noopener">P1868 饥饿的奶牛</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2679" target="_blank" rel="noopener">P2679 子串</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2501" target="_blank" rel="noopener">P2501 [HAOI2006]数字序列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3336" target="_blank" rel="noopener">P3336 [ZJOI2013]话旧</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3558" target="_blank" rel="noopener">P3558 [POI2013]BAJ-Bytecomputer</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4158" target="_blank" rel="noopener">P4158 [SCOI2009]粉刷匠</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5301" target="_blank" rel="noopener">P5301 [GXOI/GZOI2019]宝牌一大堆</a></li>
</ul>
<h3 id="Part-4-2-背包动态规划"><a href="#Part-4-2-背包动态规划" class="headerlink" title="Part 4.2 背包动态规划"></a>Part 4.2 背包动态规划</h3><blockquote>
<p>背包动态规划是线性动态规划中特殊的一类，NOIP中考到的次数也不少。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1048" target="_blank" rel="noopener">P1048 采药</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1060" target="_blank" rel="noopener">P1060 开心的金明</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1855" target="_blank" rel="noopener">P1855 榨取kkksc03</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5020" target="_blank" rel="noopener">P5020 货币系统</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1757" target="_blank" rel="noopener">P1757 通天之分组背包</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1064" target="_blank" rel="noopener">P1064 金明的预算方案</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2946" target="_blank" rel="noopener">P2946 [USACO09MAR]Cow Frisbee Team</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1156" target="_blank" rel="noopener">P1156 垃圾陷阱</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5322" target="_blank" rel="noopener">P5322 [BJOI2019]排兵布阵</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5289" target="_blank" rel="noopener">P5289 [十二省联考2019]皮配</a></li>
</ul>
<h3 id="Part-4-3-区间动态规划"><a href="#Part-4-3-区间动态规划" class="headerlink" title="Part 4.3 区间动态规划"></a>Part 4.3 区间动态规划</h3><blockquote>
<p>区间动态规划一般以区间作为动态规划的阶段。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1880" target="_blank" rel="noopener">P1880 [NOI1995]石子合并</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3146" target="_blank" rel="noopener">P3146 [USACO16OPEN]248</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1063" target="_blank" rel="noopener">P1063 能量项链</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1005" target="_blank" rel="noopener">P1005 矩阵取数游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4170" target="_blank" rel="noopener">P4170 [CQOI2007]涂色</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4302" target="_blank" rel="noopener">P4302 [SCOI2003]字符串折叠</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2466" target="_blank" rel="noopener">P2466 [SDOI2008]Sue的小球</a></li>
</ul>
<h3 id="Part-4-4-树形动态规划"><a href="#Part-4-4-树形动态规划" class="headerlink" title="Part 4.4 树形动态规划"></a>Part 4.4 树形动态规划</h3><blockquote>
<p>树形动态规划，即在树上进行的动态规划。</p>
<p>因为树的递归性质，树形动态规划一般都是递归求解的。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1352" target="_blank" rel="noopener">P1352 没有上司的舞会</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1040" target="_blank" rel="noopener">P1040 加分二叉树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1122" target="_blank" rel="noopener">P1122 最大子树和</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1273" target="_blank" rel="noopener">P1273 有线电视网</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2014" target="_blank" rel="noopener">P2014 选课</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2585" target="_blank" rel="noopener">P2585 [ZJOI2006]三色二叉树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3047" target="_blank" rel="noopener">P3047 [USACO12FEB]Nearby Cows</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3698" target="_blank" rel="noopener">P3698 [CQOI2017]小Q的棋盘</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5658" target="_blank" rel="noopener">P5658 括号树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2607" target="_blank" rel="noopener">P2607 [ZJOI2008]骑士</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3177" target="_blank" rel="noopener">P3177 [HAOI2015]树上染色</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4395" target="_blank" rel="noopener">P4395 [BOI2003]Gem</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4516" target="_blank" rel="noopener">P4516 [JSOI2018]潜入行动</a></li>
</ul>
<h3 id="Part-4-5-状态压缩动态规划"><a href="#Part-4-5-状态压缩动态规划" class="headerlink" title="Part 4.5 状态压缩动态规划"></a>Part 4.5 状态压缩动态规划</h3><blockquote>
<p>将一个状态压缩为一个整数（通常为二进制数），就可以在更为方便地进行状态转移的同时，达到节约空间的目的。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2704" target="_blank" rel="noopener">P2704 [NOI2001]炮兵阵地</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1879" target="_blank" rel="noopener">P1879 [USACO06NOV]Corn Fields</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1896" target="_blank" rel="noopener">P1896 [SCOI2005]互不侵犯</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3092" target="_blank" rel="noopener">P3092 [USACO13NOV]No Change</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3694" target="_blank" rel="noopener">P3694 邦邦的大合唱站队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4925" target="_blank" rel="noopener">P4925 [1007]Scarlet的字符串不可能这么可爱</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2157" target="_blank" rel="noopener">P2157 [SDOI2009]学校食堂</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2167" target="_blank" rel="noopener">P2167 [SDOI2009]Bill的挑战</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2396" target="_blank" rel="noopener">P2396 yyy loves Maths VII</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4363" target="_blank" rel="noopener">P4363 [九省联考2018]一双木棋</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5005" target="_blank" rel="noopener">P5005 中国象棋 - 摆上马</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2150" target="_blank" rel="noopener">P2150 [NOI2015]寿司晚宴</a></li>
</ul>
<h3 id="Part-4-6-倍增优化动态规划"><a href="#Part-4-6-倍增优化动态规划" class="headerlink" title="Part 4.6 倍增优化动态规划"></a>Part 4.6 倍增优化动态规划</h3><blockquote>
<p>利用倍增的方式，我们可以将状态转移的效率大大提高。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1613" target="_blank" rel="noopener">P1613 跑路</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1081" target="_blank" rel="noopener">P1081 开车旅行</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5024" target="_blank" rel="noopener">P5024 保卫王国</a></li>
</ul>
<h3 id="Part-4-7-数据结构优化动态规划"><a href="#Part-4-7-数据结构优化动态规划" class="headerlink" title="Part 4.7 数据结构优化动态规划"></a>Part 4.7 数据结构优化动态规划</h3><blockquote>
<p>利用数据结构来维护已有信息，也可以达到优化状态转移的目的。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4719" target="_blank" rel="noopener">P4719 【模板】动态dp</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4751" target="_blank" rel="noopener">P4751 动态dp【加强版】</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3287" target="_blank" rel="noopener">P3287 [SCOI2014]方伯伯的玉米田</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2605" target="_blank" rel="noopener">P2605 [ZJOI2010]基站选址</a></li>
</ul>
<h3 id="Part-4-8-单调队列优化动态规划"><a href="#Part-4-8-单调队列优化动态规划" class="headerlink" title="Part 4.8 单调队列优化动态规划"></a>Part 4.8 单调队列优化动态规划</h3><blockquote>
<p>借助单调队列，排除不可能的决策，可以起到优化状态转移的效果。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1776" target="_blank" rel="noopener">P1776 宝物筛选</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3089" target="_blank" rel="noopener">P3089 [USACO13NOV]Pogo-Cow</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3572" target="_blank" rel="noopener">P3572 [POI2014]PTA-Little Bird</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3522" target="_blank" rel="noopener">P3522 [POI2011]TEM-Temperature</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4544" target="_blank" rel="noopener">P4544 [USACO10NOV]Buying Feed</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5665" target="_blank" rel="noopener">P5665 划分</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1973" target="_blank" rel="noopener">P1973 [NOI2011]Noi嘉年华</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2569" target="_blank" rel="noopener">P2569 [SCOI2010]股票交易</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4852" target="_blank" rel="noopener">P4852 yyf hates choukapai</a></li>
</ul>
<h3 id="Part-4-9-斜率优化动态规划"><a href="#Part-4-9-斜率优化动态规划" class="headerlink" title="Part 4.9 斜率优化动态规划"></a>Part 4.9 斜率优化动态规划</h3><blockquote>
<p>通过用单调队列维护一个凸壳，来达到优化转移的目的。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2900" target="_blank" rel="noopener">P2900 [USACO08MAR]Land Acquisition</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3195" target="_blank" rel="noopener">P3195 [HNOI2008]玩具装箱</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3628" target="_blank" rel="noopener">P3628 [APIO2010]特别行动队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3648" target="_blank" rel="noopener">P3648 [APIO2014]序列分割</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4027" target="_blank" rel="noopener">P4027 [NOI2007]货币兑换</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4360" target="_blank" rel="noopener">P4360 [CEOI2004]锯木厂选址</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5468" target="_blank" rel="noopener">P5468 [NOI2019]回家路线</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2305" target="_blank" rel="noopener">P2305 [NOI2014]购票</a></li>
</ul>
<h3 id="Part-4-10-决策单调性优化动态规划"><a href="#Part-4-10-决策单调性优化动态规划" class="headerlink" title="Part 4.10 决策单调性优化动态规划"></a>Part 4.10 决策单调性优化动态规划</h3><blockquote>
<p>利用决策间的递变规律，也能实现优化状态转移的目的。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3515" target="_blank" rel="noopener">P3515 [POI2011]Lightning Conductor</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4767" target="_blank" rel="noopener">P4767 [IOI2000]邮局</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1912" target="_blank" rel="noopener">P1912 [NOI2009]诗人小G</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1973" target="_blank" rel="noopener">P1973 [NOI2011]Noi嘉年华</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3724" target="_blank" rel="noopener">P3724 [AH2017/HNOI2017]大佬</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5574" target="_blank" rel="noopener">P5574 [CmdOI2019]任务分配问题</a></li>
</ul>
<h3 id="Part-4-11-数位统计类动态规划"><a href="#Part-4-11-数位统计类动态规划" class="headerlink" title="Part 4.11 数位统计类动态规划"></a>Part 4.11 数位统计类动态规划</h3><blockquote>
<p>统计一个区间中满足条件的数有多少，就是数位统计类动态规划。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2602" target="_blank" rel="noopener">P2602 [ZJOI2010]数字计数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3281" target="_blank" rel="noopener">P3281 [SCOI2013]数数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2518" target="_blank" rel="noopener">P2518 [HAOI2010]计数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2657" target="_blank" rel="noopener">P2657 [SCOI2009]windy数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3286" target="_blank" rel="noopener">P3286 [SCOI2014]方伯伯的商场之旅</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4124" target="_blank" rel="noopener">P4124 [CQOI2016]手机号码</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4999" target="_blank" rel="noopener">P4999 烦人的数学作业</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2606" target="_blank" rel="noopener">P2606 [ZJOI2010]排列计数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4798" target="_blank" rel="noopener">P4798 [CEOI2015 Day1]卡尔文球锦标赛</a></li>
</ul>
<h3 id="Part-4-12-轮廓线动态规划"><a href="#Part-4-12-轮廓线动态规划" class="headerlink" title="Part 4.12 轮廓线动态规划"></a>Part 4.12 轮廓线动态规划</h3><blockquote>
<p>轮廓线动态规划（即常说的插头 DP）是一种特殊的状压动态规划，通过以轮廓线为状态来实现状态转移。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5056" target="_blank" rel="noopener">P5056 【模板】插头dp</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2289" target="_blank" rel="noopener">P2289 [HNOI2004]邮递员</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2337" target="_blank" rel="noopener">P2337 [SCOI2012]喵星人的入侵</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5347" target="_blank" rel="noopener">P5347 【XR-1】俄罗斯方块</a></li>
</ul>
<h2 id="Part-5-字符串"><a href="#Part-5-字符串" class="headerlink" title="Part 5 字符串"></a>Part 5 字符串</h2><blockquote>
<p>字符串问题有很多自己的特点。</p>
</blockquote>
<h3 id="Part-5-1-字符串哈希"><a href="#Part-5-1-字符串哈希" class="headerlink" title="Part 5.1 字符串哈希"></a>Part 5.1 字符串哈希</h3><blockquote>
<p>字符串哈希通过牺牲很小的准确率，达到快速进行字符串匹配的效果。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3370" target="_blank" rel="noopener">P3370 【模板】字符串哈希</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5270" target="_blank" rel="noopener">P5270 无论怎样神树大人都会删库跑路</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5537" target="_blank" rel="noopener">P5537 【XR-3】系统设计</a></li>
</ul>
<h3 id="Part-5-2-KMP"><a href="#Part-5-2-KMP" class="headerlink" title="Part 5.2 KMP"></a>Part 5.2 KMP</h3><blockquote>
<p>KMP 算法可以用来解决模式串匹配问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3375" target="_blank" rel="noopener">P3375 【模板】KMP字符串匹配</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4391" target="_blank" rel="noopener">P4391 [BOI2009]Radio Transmission</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3435" target="_blank" rel="noopener">P3435 [POI2006]OKR-Periods of Words</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4824" target="_blank" rel="noopener">P4824 [USACO15FEB]Censoring (Silver)</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2375" target="_blank" rel="noopener">P2375 [NOI2014]动物园</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3426" target="_blank" rel="noopener">P3426 [POI2005]SZA-Template</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3193" target="_blank" rel="noopener">P3193 [HNOI2008]GT考试</a></li>
</ul>
<h3 id="Part-5-3-Manacher"><a href="#Part-5-3-Manacher" class="headerlink" title="Part 5.3 Manacher"></a>Part 5.3 Manacher</h3><blockquote>
<p>Manacher 可以在线性时间内求出一个字符串的最长回文子串。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3805" target="_blank" rel="noopener">P3805 【模板】manacher算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4555" target="_blank" rel="noopener">P4555 [国家集训队]最长双回文串</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1659" target="_blank" rel="noopener">P1659 [国家集训队]拉拉队排练</a></li>
</ul>
<h3 id="Part-5-4-Trie树"><a href="#Part-5-4-Trie树" class="headerlink" title="Part 5.4 Trie树"></a>Part 5.4 Trie树</h3><blockquote>
<p>Trie树可以像查字典一样把多个字符串组织到一棵树上。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3879" target="_blank" rel="noopener">P3879 [TJOI2010]阅读理解</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2292" target="_blank" rel="noopener">P2292 [HNOI2004]L语言</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2922" target="_blank" rel="noopener">P2922 [USACO08DEC]Secret Message</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3065" target="_blank" rel="noopener">P3065 [USACO12DEC]First!</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3294" target="_blank" rel="noopener">P3294 [SCOI2016]背单词</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4407" target="_blank" rel="noopener">P4407 [JSOI2009]电子字典</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4551" target="_blank" rel="noopener">P4551 最长异或路径</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4683" target="_blank" rel="noopener">P4683 [IOI2008]Type Printer</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3783" target="_blank" rel="noopener">P3783 [SDOI2017]天才黑客</a></li>
</ul>
<h3 id="Part-5-5-AC自动机"><a href="#Part-5-5-AC自动机" class="headerlink" title="Part 5.5 AC自动机"></a>Part 5.5 AC自动机</h3><blockquote>
<p>AC自动机可以看成是 KMP 和 Trie 的结合体，用于解决多字符串匹配问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3808" target="_blank" rel="noopener">P3808 【模板】AC自动机（简单版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3796" target="_blank" rel="noopener">P3796 【模板】AC自动机（加强版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5357" target="_blank" rel="noopener">P5357 【模板】AC自动机（二次加强版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3121" target="_blank" rel="noopener">P3121 [USACO15FEB]Censoring (Gold)</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2414" target="_blank" rel="noopener">P2414 [NOI2011]阿狸的打字机</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3966" target="_blank" rel="noopener">P3966 [TJOI2013]单词</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2444" target="_blank" rel="noopener">P2444 [POI2000]病毒</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3311" target="_blank" rel="noopener">P3311 [SDOI2014]数数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4052" target="_blank" rel="noopener">P4052 [JSOI2007]文本生成器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5599" target="_blank" rel="noopener">P5599 【XR-4】文本编辑器</a></li>
</ul>
<h3 id="Part-5-6-回文自动机"><a href="#Part-5-6-回文自动机" class="headerlink" title="Part 5.6 回文自动机"></a>Part 5.6 回文自动机</h3><blockquote>
<p>回文自动机是解决回文串问题的有力工具。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5496" target="_blank" rel="noopener">P5496 【模板】回文自动机（PAM）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3649" target="_blank" rel="noopener">P3649 [APIO2014]回文串</a></li>
<li><a href="https://www.luogu.com.cn/problem/solution/P4287" target="_blank" rel="noopener">P4287 [SHOI2011]双倍回文</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4762" target="_blank" rel="noopener">P4762 [CERC2014]Virus synthesis</a></li>
</ul>
<h3 id="Part-5-7-后缀数组"><a href="#Part-5-7-后缀数组" class="headerlink" title="Part 5.7 后缀数组"></a>Part 5.7 后缀数组</h3><blockquote>
<p>后缀数组可以解决很多字符串匹配的问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3809" target="_blank" rel="noopener">P3809 【模板】后缀排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5353" target="_blank" rel="noopener">P5353 【模板】树上后缀排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2336" target="_blank" rel="noopener">P2336 [SCOI2012]喵星球上的点名</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2463" target="_blank" rel="noopener">P2463 [SDOI2008]Sandy的卡片</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2852" target="_blank" rel="noopener">P2852 [USACO06DEC]Milk Patterns</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4051" target="_blank" rel="noopener">P4051 [JSOI2007]字符加密</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1117" target="_blank" rel="noopener">P1117 [NOI2016]优秀的拆分</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2178" target="_blank" rel="noopener">P2178 [NOI2015]品酒大会</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5346" target="_blank" rel="noopener">P5346 【XR-1】柯南家族</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5576" target="_blank" rel="noopener">P5576 [CmdOI2019]口头禅</a></li>
</ul>
<h3 id="Part-5-8-后缀自动机"><a href="#Part-5-8-后缀自动机" class="headerlink" title="Part 5.8 后缀自动机"></a>Part 5.8 后缀自动机</h3><blockquote>
<p>后缀自动机是一种处理字符串问题的强大工具。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3804" target="_blank" rel="noopener">P3804 【模板】后缀自动机</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3649" target="_blank" rel="noopener">P3649 [APIO2014]回文串</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3975" target="_blank" rel="noopener">P3975 [TJOI2015]弦论</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4248" target="_blank" rel="noopener">P4248 [AHOI2013]差异</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5341" target="_blank" rel="noopener">P5341 [TJOI2019]甲苯先生和大中锋的字符串</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4770" target="_blank" rel="noopener">P4770 [NOI2018]你的名字</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5284" target="_blank" rel="noopener">P5284 [十二省联考2019]字符串问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5319" target="_blank" rel="noopener">P5319 [BJOI2019]奥术神杖</a></li>
</ul>
<h2 id="Part-6-数学"><a href="#Part-6-数学" class="headerlink" title="Part 6 数学"></a>Part 6 数学</h2><blockquote>
<p>OI 中的数学知识很多，也有些杂乱。</p>
</blockquote>
<h3 id="Part-6-1-位运算"><a href="#Part-6-1-位运算" class="headerlink" title="Part 6.1 位运算"></a>Part 6.1 位运算</h3><blockquote>
<p>将十进制整数转换为二进制后，有很多按位运算的运算符。</p>
<p>如果能善于利用位运算的一些性质，往往能达到事半功倍的效果。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5657" target="_blank" rel="noopener">P5657 格雷码</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5514" target="_blank" rel="noopener">P5514 [MtOI2019]永夜的报应</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5538" target="_blank" rel="noopener">P5538 【XR-3】Namid[A]me</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5539" target="_blank" rel="noopener">P5539 【XR-3】Unknown Mother-Goose</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5523" target="_blank" rel="noopener">P5523 [yLOI2019]珍珠</a></li>
</ul>
<h3 id="Part-6-2-整除相关"><a href="#Part-6-2-整除相关" class="headerlink" title="Part 6.2 整除相关"></a>Part 6.2 整除相关</h3><blockquote>
<p>与整除相关的概念有很多，比较常用的有素数，最大公约数和欧拉函数。</p>
</blockquote>
<h4 id="Part-6-2-1-素数"><a href="#Part-6-2-1-素数" class="headerlink" title="Part 6.2.1 素数"></a>Part 6.2.1 素数</h4><blockquote>
<p>素数，指的是除 1 和它本身之外没有其他约数的数。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4718" target="_blank" rel="noopener">P4718 【模板】Pollard-Rho算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1075" target="_blank" rel="noopener">P1075 质因数分解</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2441" target="_blank" rel="noopener">P2441 角色属性树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5535" target="_blank" rel="noopener">P5535 【XR-3】小道消息</a></li>
</ul>
<h4 id="Part-6-2-2-最大公约数"><a href="#Part-6-2-2-最大公约数" class="headerlink" title="Part 6.2.2 最大公约数"></a>Part 6.2.2 最大公约数</h4><blockquote>
<p>如果两个数有一个共同的约数，那么这个约数就被称为公约数。最大公约数就是指这两个数的所有公约数中，最大的一个。</p>
<p>求解两个数的最大公约数，可以采用欧几里得算法解决。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5435" target="_blank" rel="noopener">P5435 【模板】快速 GCD</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5436" target="_blank" rel="noopener">P5436 【XR-2】缘分</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1029" target="_blank" rel="noopener">P1029 最大公约数和最小公倍数问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1414" target="_blank" rel="noopener">P1414 又是毕业季II</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2152" target="_blank" rel="noopener">P2152 [SDOI2009]SuperGCD</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1072" target="_blank" rel="noopener">P1072 Hankson 的趣味题</a></li>
</ul>
<h4 id="Part-6-2-3-欧拉函数"><a href="#Part-6-2-3-欧拉函数" class="headerlink" title="Part 6.2.3 欧拉函数"></a>Part 6.2.3 欧拉函数</h4><blockquote>
<p>欧拉函数 $ \varphi (x) $ 表示了小于 $ x $ 的数字中，与 $ x $ 互质的数字个数。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2158" target="_blank" rel="noopener">P2158 [SDOI2008]仪仗队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2568" target="_blank" rel="noopener">P2568 GCD</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2398" target="_blank" rel="noopener">P2398 GCD SUM</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4139" target="_blank" rel="noopener">P4139 上帝与集合的正确用法</a></li>
</ul>
<h3 id="Part-6-3-同余方程"><a href="#Part-6-3-同余方程" class="headerlink" title="Part 6.3 同余方程"></a>Part 6.3 同余方程</h3><blockquote>
<p>求解同余方程往往可以引出不少话题。</p>
</blockquote>
<h4 id="Part-6-3-1-线性同余方程-amp-乘法逆元"><a href="#Part-6-3-1-线性同余方程-amp-乘法逆元" class="headerlink" title="Part 6.3.1 线性同余方程&amp;乘法逆元"></a>Part 6.3.1 线性同余方程&amp;乘法逆元</h4><blockquote>
<p>线性同余方程是同余方程中最基础的内容。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4549" target="_blank" rel="noopener">P4549 【模板】裴蜀定理</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2613" target="_blank" rel="noopener">P2613 【模板】有理数取余</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3811" target="_blank" rel="noopener">P3811 【模板】乘法逆元</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5431" target="_blank" rel="noopener">P5431 【模板】乘法逆元2</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1082" target="_blank" rel="noopener">P1082 同余方程</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3951" target="_blank" rel="noopener">P3951 小凯的疑惑</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1516" target="_blank" rel="noopener">P1516 青蛙的约会</a></li>
</ul>
<h4 id="Part-6-3-2-中国剩余定理"><a href="#Part-6-3-2-中国剩余定理" class="headerlink" title="Part 6.3.2 中国剩余定理"></a>Part 6.3.2 中国剩余定理</h4><blockquote>
<p>中国剩余定理可以快速解一元线性同余方程组。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4777" target="_blank" rel="noopener">P4777 【模板】扩展中国剩余定理（EXCRT）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3868" target="_blank" rel="noopener">P3868 [TJOI2009]猜数字</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2480" target="_blank" rel="noopener">P2480 [SDOI2010]古代猪文</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4774" target="_blank" rel="noopener">P4774 [NOI2018]屠龙勇士</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5345" target="_blank" rel="noopener">P5345 【XR-1】快乐肥宅</a></li>
</ul>
<h4 id="Part-6-3-3-高次同余方程"><a href="#Part-6-3-3-高次同余方程" class="headerlink" title="Part 6.3.3 高次同余方程"></a>Part 6.3.3 高次同余方程</h4><blockquote>
<p>BSGS 算法可以高效计算离散对数。</p>
<p>而高次剩余的求解更加复杂，其中二次剩余作为高次剩余中比较特殊的情况，可以使用 Cipolla 法求解。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4195" target="_blank" rel="noopener">P4195 【模板】exBSGS</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5491" target="_blank" rel="noopener">P5491 【模板】二次剩余</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3306" target="_blank" rel="noopener">P3306 [SDOI2013]随机数生成器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2485" target="_blank" rel="noopener">P2485 [SDOI2011]计算器</a></li>
</ul>
<h3 id="Part-6-4-博弈论"><a href="#Part-6-4-博弈论" class="headerlink" title="Part 6.4 博弈论"></a>Part 6.4 博弈论</h3><blockquote>
<p>博弈论考虑游戏中的个体的预测行为和实际行为，并研究它们的优化策略。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2197" target="_blank" rel="noopener">P2197 【模板】nim游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1288" target="_blank" rel="noopener">P1288 取数游戏II</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1290" target="_blank" rel="noopener">P1290 欧几里德的游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1247" target="_blank" rel="noopener">P1247 取火柴游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2252" target="_blank" rel="noopener">P2252 取石子游戏</a></li>
</ul>
<h3 id="Part-6-5-概率与期望"><a href="#Part-6-5-概率与期望" class="headerlink" title="Part 6.5 概率与期望"></a>Part 6.5 概率与期望</h3><blockquote>
<p>概率和期望是紧密相连的，OI 中往往会出现和概率期望相关的动态规划问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5104" target="_blank" rel="noopener">P5104 红包发红包</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1850" target="_blank" rel="noopener">P1850 换教室</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3830" target="_blank" rel="noopener">P3830 [SHOI2012]随机树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4564" target="_blank" rel="noopener">P4564 [CTSC2018]假面</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2473" target="_blank" rel="noopener">P2473 [SCOI2008]奖励关</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2221" target="_blank" rel="noopener">P2221 [HAOI2012]高速公路</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3239" target="_blank" rel="noopener">P3239 [HNOI2015]亚瑟王</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3750" target="_blank" rel="noopener">P3750 [六省联考2017]分手是祝愿</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4284" target="_blank" rel="noopener">P4284 [SHOI2014]概率充电器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5249" target="_blank" rel="noopener">P5249 [LnOI2019]加特林轮盘赌</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2081" target="_blank" rel="noopener">P2081 [NOI2012]迷失游乐园</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3343" target="_blank" rel="noopener">P3343 [ZJOI2015]地震后的幻想乡</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3600" target="_blank" rel="noopener">P3600 随机数生成器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5326" target="_blank" rel="noopener">P5326 [ZJOI2019]开关</a></li>
</ul>
<h3 id="Part-6-6-组合数学"><a href="#Part-6-6-组合数学" class="headerlink" title="Part 6.6 组合数学"></a>Part 6.6 组合数学</h3><blockquote>
<p>组合数学常常与计数问题，概率期望紧密相连。</p>
</blockquote>
<h4 id="Part-6-6-1-排列组合"><a href="#Part-6-6-1-排列组合" class="headerlink" title="Part 6.6.1 排列组合"></a>Part 6.6.1 排列组合</h4><blockquote>
<p>排列组合是组合数学的基础。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3807" target="_blank" rel="noopener">P3807 【模板】卢卡斯定理</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2822" target="_blank" rel="noopener">P2822 组合数问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5520" target="_blank" rel="noopener">P5520 [yLOI2019]青原樱</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3197" target="_blank" rel="noopener">P3197 [HNOI2008]越狱</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2290" target="_blank" rel="noopener">P2290 [HNOI2004]树的计数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4981" target="_blank" rel="noopener">P4981 父子</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4769" target="_blank" rel="noopener">P4769 [NOI2018]冒泡排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4931" target="_blank" rel="noopener">P4931 情侣？给我烧了！（加强版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5596" target="_blank" rel="noopener">P5596 【XR-4】题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5598" target="_blank" rel="noopener">P5598 【XR-4】混乱度</a></li>
</ul>
<h4 id="Part-6-6-2-卡特兰数-amp-斯特林数"><a href="#Part-6-6-2-卡特兰数-amp-斯特林数" class="headerlink" title="Part 6.6.2 卡特兰数&amp;斯特林数"></a>Part 6.6.2 卡特兰数&amp;斯特林数</h4><blockquote>
<p>卡特兰数和斯特林数是两类常见的组合递推数列。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5395" target="_blank" rel="noopener">P5395 【模板】第二类斯特林数·行</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5396" target="_blank" rel="noopener">P5396 【模板】第二类斯特林数·列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5408" target="_blank" rel="noopener">P5408 【模板】第一类斯特林数·行</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5409" target="_blank" rel="noopener">P5409 【模板】第一类斯特林数·列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1655" target="_blank" rel="noopener">P1655 小朋友的球</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2532" target="_blank" rel="noopener">P2532 [AHOI2012]树屋阶梯</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3200" target="_blank" rel="noopener">P3200 [HNOI2009]有趣的数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3978" target="_blank" rel="noopener">P3978 [TJOI2015]概率论</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4091" target="_blank" rel="noopener">P4091 [HEOI2016/TJOI2016]求和</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4827" target="_blank" rel="noopener">P4827 [国家集训队]Crash 的文明世界</a></li>
</ul>
<h4 id="Part-6-6-3-容斥原理"><a href="#Part-6-6-3-容斥原理" class="headerlink" title="Part 6.6.3 容斥原理"></a>Part 6.6.3 容斥原理</h4><blockquote>
<p>容斥原理常常用于解决集合的计数问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5664" target="_blank" rel="noopener">P5664 Emiya 家今天的饭</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1450" target="_blank" rel="noopener">P1450 [HAOI2008]硬币购物</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3214" target="_blank" rel="noopener">P3214 [HNOI2011]卡农</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3270" target="_blank" rel="noopener">P3270 [JLOI2016]成绩比较</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4336" target="_blank" rel="noopener">P4336 [SHOI2016]黑暗前的幻想乡</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4448" target="_blank" rel="noopener">P4448 [AHOI2018初中组]球球的排列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4491" target="_blank" rel="noopener">P4491 [HAOI2018]染色</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5339" target="_blank" rel="noopener">P5339 [TJOI2019]唱、跳、rap和篮球</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5400" target="_blank" rel="noopener">P5400 [CTS2019]随机立方体</a></li>
</ul>
<h3 id="Part-6-7-线性代数"><a href="#Part-6-7-线性代数" class="headerlink" title="Part 6.7 线性代数"></a>Part 6.7 线性代数</h3><blockquote>
<p>线性代数主要用于解决线性关系问题。</p>
</blockquote>
<h4 id="Part-6-7-1-矩阵"><a href="#Part-6-7-1-矩阵" class="headerlink" title="Part 6.7.1 矩阵"></a>Part 6.7.1 矩阵</h4><blockquote>
<p>利用矩阵优化数列递推，可以实现复杂度从线性到对数级的转变。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3390" target="_blank" rel="noopener">P3390 【模板】矩阵快速幂</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1939" target="_blank" rel="noopener">P1939 【模板】矩阵加速（数列）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4783" target="_blank" rel="noopener">P4783 【模板】矩阵求逆</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1962" target="_blank" rel="noopener">P1962 斐波那契数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1349" target="_blank" rel="noopener">P1349 广义斐波那契数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4000" target="_blank" rel="noopener">P4000 斐波那契数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3758" target="_blank" rel="noopener">P3758 [TJOI2017]可乐</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4967" target="_blank" rel="noopener">P4967 黑暗打击</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5343" target="_blank" rel="noopener">P5343 【XR-1】分块</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5337" target="_blank" rel="noopener">P5337 [TJOI2019]甲苯先生的字符串</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5303" target="_blank" rel="noopener">P5303 [GXOI/GZOI2019]逼死强迫症</a></li>
</ul>
<h4 id="Part-6-7-2-高斯消元"><a href="#Part-6-7-2-高斯消元" class="headerlink" title="Part 6.7.2 高斯消元"></a>Part 6.7.2 高斯消元</h4><blockquote>
<p>高斯消元可以用来求解方程组。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3389" target="_blank" rel="noopener">P3389 【模板】高斯消元法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4387" target="_blank" rel="noopener">P4387 付公主的函数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2447" target="_blank" rel="noopener">P2447 [SDOI2010]外星千足虫</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4035" target="_blank" rel="noopener">P4035 [JSOI2008]球形空间产生器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5516" target="_blank" rel="noopener">P5516 [MtOI2019]小铃的烦恼</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4111" target="_blank" rel="noopener">P4111 [HEOI2015]小Z的房间</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4457" target="_blank" rel="noopener">P4457 [BJOI2018]治疗之雨</a></li>
</ul>
<h4 id="Part-6-7-3-线性基"><a href="#Part-6-7-3-线性基" class="headerlink" title="Part 6.7.3 线性基"></a>Part 6.7.3 线性基</h4><blockquote>
<p>线性基可以求解最大异或和的一类问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3812" target="_blank" rel="noopener">P3812 【模板】线性基</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3857" target="_blank" rel="noopener">P3857 [TJOI2008]彩灯</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4570" target="_blank" rel="noopener">P4570 [BJWC2011]元素</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4301" target="_blank" rel="noopener">P4301 [CQOI2013]新Nim游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3292" target="_blank" rel="noopener">P3292 [SCOI2016]幸运数字</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4151" target="_blank" rel="noopener">P4151 [WC2011]最大XOR和路径</a></li>
</ul>
<h3 id="Part-6-8-多项式"><a href="#Part-6-8-多项式" class="headerlink" title="Part 6.8 多项式"></a>Part 6.8 多项式</h3><blockquote>
<p>对多项式的运算进行优化，从而能够解决规模更大的问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1919" target="_blank" rel="noopener">P1919 【模板】A*B Problem升级版（FFT快速傅里叶）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3803" target="_blank" rel="noopener">P3803 【模板】多项式乘法（FFT）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4238" target="_blank" rel="noopener">P4238 【模板】多项式求逆</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4245" target="_blank" rel="noopener">P4245 【模板】任意模数NTT</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4512" target="_blank" rel="noopener">P4512 【模板】多项式除法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4717" target="_blank" rel="noopener">P4717 【模板】快速沃尔什变换</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4721" target="_blank" rel="noopener">P4721 【模板】分治 FFT</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4725" target="_blank" rel="noopener">P4725 【模板】多项式对数函数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4726" target="_blank" rel="noopener">P4726 【模板】多项式指数函数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4781" target="_blank" rel="noopener">P4781 【模板】拉格朗日插值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5050" target="_blank" rel="noopener">P5050 【模板】多项式多点求值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5158" target="_blank" rel="noopener">P5158 【模板】多项式快速插值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5205" target="_blank" rel="noopener">P5205 【模板】多项式开根</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5245" target="_blank" rel="noopener">P5245 【模板】多项式快速幂</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5273" target="_blank" rel="noopener">P5273 【模板】多项式幂函数 (加强版)</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5282" target="_blank" rel="noopener">P5282 【模板】快速阶乘算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5373" target="_blank" rel="noopener">P5373 【模板】多项式复合函数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5383" target="_blank" rel="noopener">P5383 【模板】普通多项式转下降幂多项式</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5393" target="_blank" rel="noopener">P5393 【模板】下降幂多项式转普通多项式</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5394" target="_blank" rel="noopener">P5394 【模板】下降幂多项式乘法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3338" target="_blank" rel="noopener">P3338 [ZJOI2014]力</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3723" target="_blank" rel="noopener">P3723 [AH2017/HNOI2017]礼物</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5437" target="_blank" rel="noopener">P5437 【XR-2】约定</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5293" target="_blank" rel="noopener">P5293 [HNOI2019]白兔之舞</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5432" target="_blank" rel="noopener">P5432 A/B Problem (加强版)</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5472" target="_blank" rel="noopener">P5472 [NOI2019]斗主地</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5577" target="_blank" rel="noopener">P5577 [CmdOI2019]算力训练</a></li>
</ul>
<h3 id="Part-6-9-莫比乌斯反演"><a href="#Part-6-9-莫比乌斯反演" class="headerlink" title="Part 6.9 莫比乌斯反演"></a>Part 6.9 莫比乌斯反演</h3><blockquote>
<p>运用莫比乌斯反演，我们可以将一些函数转化，从而降低计算难度。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3172" target="_blank" rel="noopener">P3172 [CQOI2015]选数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2522" target="_blank" rel="noopener">P2522 [HAOI2011]Problem b</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3455" target="_blank" rel="noopener">P3455 [POI2007]ZAP-Queries</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3327" target="_blank" rel="noopener">P3327 [SDOI2015]约数个数和</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1829" target="_blank" rel="noopener">P1829 [国家集训队]Crash的数字表格 / JZPTAB</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4619" target="_blank" rel="noopener">P4619 [SDOI2018]旧试题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3704" target="_blank" rel="noopener">P3704 [SDOI2017]数字表格</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5518" target="_blank" rel="noopener">P5518 [MtOI2019]幽灵乐团</a></li>
</ul>
<h3 id="Part-6-10-筛法"><a href="#Part-6-10-筛法" class="headerlink" title="Part 6.10 筛法"></a>Part 6.10 筛法</h3><blockquote>
<p>利用数列的性质，有多种筛法可以求出我们想要的信息。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3383" target="_blank" rel="noopener">P3383 【模板】线性筛素数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4213" target="_blank" rel="noopener">P4213 【模板】杜教筛（Sum）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5325" target="_blank" rel="noopener">P5325 【模板】Min_25筛</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1865" target="_blank" rel="noopener">P1865 A % B Problem</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1621" target="_blank" rel="noopener">P1621 集合</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3768" target="_blank" rel="noopener">P3768 简单的数学题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5438" target="_blank" rel="noopener">P5438 【XR-2】记忆</a></li>
</ul>
<h3 id="Part-6-11-线性规划"><a href="#Part-6-11-线性规划" class="headerlink" title="Part 6.11 线性规划"></a>Part 6.11 线性规划</h3><blockquote>
<p>线性规划是研究线性约束条件下线性目标函数极值问题的方法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3980" target="_blank" rel="noopener">P3980 [NOI2008]志愿者招募</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4232" target="_blank" rel="noopener">P4232 无意识之外的捉迷藏</a></li>
</ul>
<h3 id="Part-6-12-数值方法"><a href="#Part-6-12-数值方法" class="headerlink" title="Part 6.12 数值方法"></a>Part 6.12 数值方法</h3><blockquote>
<p>在算法领域，有很多求近似值的数值方法。</p>
</blockquote>
<h4 id="Part-6-12-1-三分法"><a href="#Part-6-12-1-三分法" class="headerlink" title="Part 6.12.1 三分法"></a>Part 6.12.1 三分法</h4><blockquote>
<p>三分法可以求出一个单峰 / 单谷函数的极值。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3382" target="_blank" rel="noopener">P3382 【模板】三分法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1883" target="_blank" rel="noopener">P1883 函数</a></li>
</ul>
<h4 id="Part-6-12-2-自适应辛普森法"><a href="#Part-6-12-2-自适应辛普森法" class="headerlink" title="Part 6.12.2 自适应辛普森法"></a>Part 6.12.2 自适应辛普森法</h4><blockquote>
<p>自适应辛普森法可以高效求出给定函数的数值积分。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4525" target="_blank" rel="noopener">P4525 【模板】自适应辛普森法1</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4526" target="_blank" rel="noopener">P4526 【模板】自适应辛普森法2</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3779" target="_blank" rel="noopener">P3779 [SDOI2017]龙与地下城</a></li>
</ul>
<h3 id="Part-6-13-置换群"><a href="#Part-6-13-置换群" class="headerlink" title="Part 6.13 置换群"></a>Part 6.13 置换群</h3><blockquote>
<p>置换群通常用来解决一些涉及“本质不同”的计数问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4980" target="_blank" rel="noopener">P4980 【模板】Polya定理</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1446" target="_blank" rel="noopener">P1446 [HNOI2008]Cards</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2561" target="_blank" rel="noopener">P2561 [AHOI2002]黑白瓷砖</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4128" target="_blank" rel="noopener">P4128 [SHOI2006]有色图</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4727" target="_blank" rel="noopener">P4727 [HNOI2009]图的同构记数</a></li>
</ul>
<h2 id="Part-7-数据结构"><a href="#Part-7-数据结构" class="headerlink" title="Part 7 数据结构"></a>Part 7 数据结构</h2><blockquote>
<p>灵活地运用数据结构可以高效地查询并处理需要的信息。</p>
</blockquote>
<h3 id="Part-7-1-链表"><a href="#Part-7-1-链表" class="headerlink" title="Part 7.1 链表"></a>Part 7.1 链表</h3><blockquote>
<p>在一个数列中高效插入一个元素，链表毫无疑问是最好的选择。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1996" target="_blank" rel="noopener">P1996 约瑟夫问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1160" target="_blank" rel="noopener">P1160 队列安排</a></li>
</ul>
<h3 id="Part-7-2-栈"><a href="#Part-7-2-栈" class="headerlink" title="Part 7.2 栈"></a>Part 7.2 栈</h3><blockquote>
<p>栈，是一种后进先出（FILO）的数据结构。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1449" target="_blank" rel="noopener">P1449 后缀表达式</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1739" target="_blank" rel="noopener">P1739 表达式括号匹配</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1981" target="_blank" rel="noopener">P1981 表达式求值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1175" target="_blank" rel="noopener">P1175 表达式的转换</a></li>
</ul>
<h3 id="Part-7-3-队列"><a href="#Part-7-3-队列" class="headerlink" title="Part 7.3 队列"></a>Part 7.3 队列</h3><blockquote>
<p>队列，是一种先进先出（FIFO）的数据结构。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1540" target="_blank" rel="noopener">P1540 机器翻译</a></li>
</ul>
<h3 id="Part-7-4-并查集"><a href="#Part-7-4-并查集" class="headerlink" title="Part 7.4 并查集"></a>Part 7.4 并查集</h3><blockquote>
<p>并查集常用于处理一些不相交集合的合并和查询问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1111" target="_blank" rel="noopener">P1111 修复公路</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3958" target="_blank" rel="noopener">P3958 奶酪</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1525" target="_blank" rel="noopener">P1525 关押罪犯</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4185" target="_blank" rel="noopener">P4185 [USACO18JAN]MooTube G</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2024" target="_blank" rel="noopener">P2024 [NOI2001]食物链</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1197" target="_blank" rel="noopener">P1197 [JSOI2008]星球大战</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1196" target="_blank" rel="noopener">P1196 [NOI2002]银河英雄传说</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1955" target="_blank" rel="noopener">P1955 [NOI2015]程序自动分析</a></li>
</ul>
<h3 id="Part-7-5-二叉堆"><a href="#Part-7-5-二叉堆" class="headerlink" title="Part 7.5 二叉堆"></a>Part 7.5 二叉堆</h3><blockquote>
<p>二叉堆是一棵完全二叉树，堆中某个节点的值总是不大于或不小于其父节点的值。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3378" target="_blank" rel="noopener">P3378 【模板】堆</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1090" target="_blank" rel="noopener">P1090 合并果子</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1168" target="_blank" rel="noopener">P1168 中位数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2085" target="_blank" rel="noopener">P2085 最小函数值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2827" target="_blank" rel="noopener">P2827 蚯蚓</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3045" target="_blank" rel="noopener">P3045 [USACO12FEB]Cow Coupons</a></li>
</ul>
<h3 id="Part-7-6-ST表"><a href="#Part-7-6-ST表" class="headerlink" title="Part 7.6 ST表"></a>Part 7.6 ST表</h3><blockquote>
<p>ST表可以离线查询区间最值。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3865" target="_blank" rel="noopener">P3865 【模板】ST表</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2251" target="_blank" rel="noopener">P2251 质量检测</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1816" target="_blank" rel="noopener">P1816 忠诚</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1198" target="_blank" rel="noopener">P1198 [JSOI2008]最大数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2880" target="_blank" rel="noopener">P2880 [USACO07JAN]Balanced Lineup</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5012" target="_blank" rel="noopener">P5012 水の数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5344" target="_blank" rel="noopener">P5344 【XR-1】逛森林</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2048" target="_blank" rel="noopener">P2048 [NOI2010]超级钢琴</a></li>
</ul>
<h3 id="Part-7-7-树状数组"><a href="#Part-7-7-树状数组" class="headerlink" title="Part 7.7 树状数组"></a>Part 7.7 树状数组</h3><blockquote>
<p>树状数组是一种简洁高效的树形数据结构。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3374" target="_blank" rel="noopener">P3374 【模板】树状数组 1</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3368" target="_blank" rel="noopener">P3368 【模板】树状数组 2</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1908" target="_blank" rel="noopener">P1908 逆序对</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1966" target="_blank" rel="noopener">P1966 火柴排队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3605" target="_blank" rel="noopener">P3605 [USACO17JAN]Promotion Counting</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1972" target="_blank" rel="noopener">P1972 [SDOI2009]HH的项链</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3586" target="_blank" rel="noopener">P3586 [POI2015]LOG</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4054" target="_blank" rel="noopener">P4054 [JSOI2009]计数问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4113" target="_blank" rel="noopener">P4113 [HEOI2012]采花</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3960" target="_blank" rel="noopener">P3960 列队</a></li>
</ul>
<h3 id="Part-7-8-线段树"><a href="#Part-7-8-线段树" class="headerlink" title="Part 7.8 线段树"></a>Part 7.8 线段树</h3><blockquote>
<p>线段树的通用性比树状数组更强，可以处理更多涉及区间操作的题目。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3372" target="_blank" rel="noopener">P3372 【模板】线段树 1</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3373" target="_blank" rel="noopener">P3373 【模板】线段树 2</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5490" target="_blank" rel="noopener">P5490 【模板】扫描线</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4588" target="_blank" rel="noopener">P4588 [TJOI2018]数学计算</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1502" target="_blank" rel="noopener">P1502 窗口的星星</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2471" target="_blank" rel="noopener">P2471 [SCOI2007]降雨量</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2824" target="_blank" rel="noopener">P2824 [HEOI2016/TJOI2016]排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3722" target="_blank" rel="noopener">P3722 [AH2017/HNOI2017]影魔</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4097" target="_blank" rel="noopener">P4097 [HEOI2013]Segment</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4198" target="_blank" rel="noopener">P4198 楼房重建</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4513" target="_blank" rel="noopener">P4513 小白逛公园</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4556" target="_blank" rel="noopener">P4556 [Vani有约会]雨天的尾巴</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5324" target="_blank" rel="noopener">P5324 [BJOI2019]删数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5327" target="_blank" rel="noopener">P5327 [ZJOI2019]语言</a></li>
</ul>
<h3 id="Part-7-9-分块"><a href="#Part-7-9-分块" class="headerlink" title="Part 7.9 分块"></a>Part 7.9 分块</h3><blockquote>
<p>分块是一种非常通用的暴力方法，虽然效率不如线段树和树状数组，但可以解决很多线段树和树状数组处理不了的问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3870" target="_blank" rel="noopener">P3870 [TJOI2009]开关</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3396" target="_blank" rel="noopener">P3396 哈希冲突</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3863" target="_blank" rel="noopener">P3863 序列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1975" target="_blank" rel="noopener">P1975 [国家集训队]排队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3710" target="_blank" rel="noopener">P3710 方方方的数据结构</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3992" target="_blank" rel="noopener">P3992 [BJOI2017]开车</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4168" target="_blank" rel="noopener">P4168 [Violet]蒲公英</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4119" target="_blank" rel="noopener">P4119 [Ynoi2018]未来日记</a></li>
</ul>
<h3 id="Part-7-10-可并堆"><a href="#Part-7-10-可并堆" class="headerlink" title="Part 7.10 可并堆"></a>Part 7.10 可并堆</h3><blockquote>
<p>可并堆分为左偏树和配对堆两种，它们都具有堆的性质，且可以高效合并。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3377" target="_blank" rel="noopener">P3377 【模板】左偏树（可并堆）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2713" target="_blank" rel="noopener">P2713 罗马游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1456" target="_blank" rel="noopener">P1456 Monkey King</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1552" target="_blank" rel="noopener">P1552 [APIO2012]派遣</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3261" target="_blank" rel="noopener">P3261 [JLOI2015]城池攻占</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3273" target="_blank" rel="noopener">P3273 [SCOI2011]棘手的操作</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4331" target="_blank" rel="noopener">P4331 [BOI2004]Sequence</a></li>
</ul>
<h3 id="Part-7-11-主席树"><a href="#Part-7-11-主席树" class="headerlink" title="Part 7.11 主席树"></a>Part 7.11 主席树</h3><blockquote>
<p>主席树，即可持久化权值线段树。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2468" target="_blank" rel="noopener">P2468 [SDOI2010]粟粟的书架</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3302" target="_blank" rel="noopener">P3302 [SDOI2013]森林</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3168" target="_blank" rel="noopener">P3168 [CQOI2015]任务查询系统</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4559" target="_blank" rel="noopener">P4559 [JSOI2018]列队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2633" target="_blank" rel="noopener">P2633 Count on a tree</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3293" target="_blank" rel="noopener">P3293 [SCOI2016]美味</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4618" target="_blank" rel="noopener">P4618 [SDOI2018]原题识别</a></li>
</ul>
<h3 id="Part-7-12-平衡树"><a href="#Part-7-12-平衡树" class="headerlink" title="Part 7.12 平衡树"></a>Part 7.12 平衡树</h3><blockquote>
<p>二叉搜索树可以用来维护有序序列。</p>
<p>为了保证查询效率，有多种使二叉搜索树保持平衡的实现方法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3369" target="_blank" rel="noopener">P3369 【模板】普通平衡树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3391" target="_blank" rel="noopener">P3391 【模板】文艺平衡树（Splay）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3850" target="_blank" rel="noopener">P3850 [TJOI2007]书架</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4008" target="_blank" rel="noopener">P4008 [NOI2003]文本编辑器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5338" target="_blank" rel="noopener">P5338 [TJOI2019]甲苯先生的滚榜</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2042" target="_blank" rel="noopener">P2042 [NOI2005]维护数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1110" target="_blank" rel="noopener">P1110 [ZJOI2007]报表统计</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3644" target="_blank" rel="noopener">P3644 [APIO2015]八邻旁之桥</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1486" target="_blank" rel="noopener">P1486 [NOI2004]郁闷的出纳员</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2710" target="_blank" rel="noopener">P2710 数列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3224" target="_blank" rel="noopener">P3224 [HNOI2012]永无乡</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3285" target="_blank" rel="noopener">P3285 [SCOI2014]方伯伯的OJ</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5321" target="_blank" rel="noopener">P5321 [BJOI2019]送别</a></li>
</ul>
<h3 id="Part-7-13-树链剖分"><a href="#Part-7-13-树链剖分" class="headerlink" title="Part 7.13 树链剖分"></a>Part 7.13 树链剖分</h3><blockquote>
<p>树链剖分可以将任意一条树上路径划分成若干条连续的链，并用线段树等数据结构高效维护链上信息。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3384" target="_blank" rel="noopener">P3384 【模板】树链剖分</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3313" target="_blank" rel="noopener">P3313 [SDOI2014]旅行</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2590" target="_blank" rel="noopener">P2590 [ZJOI2008]树的统计</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1505" target="_blank" rel="noopener">P1505 [国家集训队]旅游</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2486" target="_blank" rel="noopener">P2486 [SDOI2011]染色</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3258" target="_blank" rel="noopener">P3258 [JLOI2014]松鼠的新家</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4069" target="_blank" rel="noopener">P4069 [SDOI2016]游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4211" target="_blank" rel="noopener">P4211 [LNOI2014]LCA</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4592" target="_blank" rel="noopener">P4592 [TJOI2018]异或</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5305" target="_blank" rel="noopener">P5305 [GXOI/GZOI2019]旧词</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5354" target="_blank" rel="noopener">P5354 [Ynoi2017]由乃的OJ</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5499" target="_blank" rel="noopener">P5499 [LnOI2019]Abbi并不想研学</a></li>
</ul>
<h3 id="Part-7-14-树套树"><a href="#Part-7-14-树套树" class="headerlink" title="Part 7.14 树套树"></a>Part 7.14 树套树</h3><blockquote>
<p>树套树可以用来维护多维度信息。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3380" target="_blank" rel="noopener">P3380 【模板】二逼平衡树（树套树）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1975" target="_blank" rel="noopener">P1975 [国家集训队]排队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3332" target="_blank" rel="noopener">P3332 [ZJOI2013]K大数查询</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4278" target="_blank" rel="noopener">P4278 带插入区间K小值</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1903" target="_blank" rel="noopener">P1903 [国家集训队]数颜色 / 维护队列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3759" target="_blank" rel="noopener">P3759 [TJOI2017]不勤劳的图书管理员</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3242" target="_blank" rel="noopener">P3242 [HNOI2015]接水果</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3248" target="_blank" rel="noopener">P3248 [HNOI2016]树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5445" target="_blank" rel="noopener">P5445 [APIO2019]路灯</a></li>
</ul>
<h3 id="Part-7-15-动态树"><a href="#Part-7-15-动态树" class="headerlink" title="Part 7.15 动态树"></a>Part 7.15 动态树</h3><blockquote>
<p>Link-Cut Tree 可以用来解决动态树一类问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3690" target="_blank" rel="noopener">P3690 【模板】Link Cut Tree （动态树）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3203" target="_blank" rel="noopener">P3203 [HNOI2010]弹飞绵羊</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4338" target="_blank" rel="noopener">P4338 [ZJOI2018]历史</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4312" target="_blank" rel="noopener">P4312 [COCI2009]OTOCI</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1501" target="_blank" rel="noopener">P1501 [国家集训队]Tree II</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2387" target="_blank" rel="noopener">P2387 [NOI2014]魔法森林</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3348" target="_blank" rel="noopener">P3348 [ZJOI2016]大森林</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3703" target="_blank" rel="noopener">P3703 [SDOI2017]树点涂色</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4172" target="_blank" rel="noopener">P4172 [WC2006]水管局长</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4219" target="_blank" rel="noopener">P4219 [BJOI2014]大融合</a></li>
<li><a href="https://www.luogu.com.cn/problemnew/solution/P5489" target="_blank" rel="noopener">P5489 EntropyIncreaser 与 动态图</a></li>
</ul>
<h3 id="Part-7-16-可持久化数据结构"><a href="#Part-7-16-可持久化数据结构" class="headerlink" title="Part 7.16 可持久化数据结构"></a>Part 7.16 可持久化数据结构</h3><blockquote>
<p>可持久化数据结构实现了在更新信息的时候保留历史版本。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3919" target="_blank" rel="noopener">P3919 【模板】可持久化数组（可持久化线段树/平衡树）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3834" target="_blank" rel="noopener">P3834 【模板】可持久化线段树 1（主席树）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3402" target="_blank" rel="noopener">P3402 【模板】可持久化并查集</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3835" target="_blank" rel="noopener">P3835 【模板】可持久化平衡树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5055" target="_blank" rel="noopener">P5055 【模板】可持久化文艺平衡树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5283" target="_blank" rel="noopener">P5283 [十二省联考2019]异或粽子</a></li>
</ul>
<h3 id="Part-7-17-K-D-Tree"><a href="#Part-7-17-K-D-Tree" class="headerlink" title="Part 7.17 K-D Tree"></a>Part 7.17 K-D Tree</h3><blockquote>
<p>K-D Tree 是一种高效处理 $ k $ 维信息的数据结构。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4357" target="_blank" rel="noopener">P4357 [CQOI2016]K远点对</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4148" target="_blank" rel="noopener">P4148 简单题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2479" target="_blank" rel="noopener">P2479 [SDOI2010]捉迷藏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3769" target="_blank" rel="noopener">P3769 [CH弱省胡策R2]TATT</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4169" target="_blank" rel="noopener">P4169 [Violet]天使玩偶/SJY摆棋子</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4390" target="_blank" rel="noopener">P4390 [BOI2007]Mokia</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4475" target="_blank" rel="noopener">P4475 巧克力王国</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2093" target="_blank" rel="noopener">P2093 [国家集训队]JZPFAR</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5471" target="_blank" rel="noopener">P5471 [NOI2019]弹跳</a></li>
</ul>
<h3 id="Part-7-18-珂朵莉树"><a href="#Part-7-18-珂朵莉树" class="headerlink" title="Part 7.18 珂朵莉树"></a>Part 7.18 珂朵莉树</h3><blockquote>
<p>珂朵莉树，是一种基于 <code>std::set</code> 的暴力数据结构，在数据随机的情况下表现优秀。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5251" target="_blank" rel="noopener">P5251 [LnOI2019]第二代图灵机</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5350" target="_blank" rel="noopener">P5350 序列</a></li>
</ul>
<h2 id="Part-8-图论"><a href="#Part-8-图论" class="headerlink" title="Part 8 图论"></a>Part 8 图论</h2><blockquote>
<p>图论是数学的一个分支，它以图为研究的对象。</p>
</blockquote>
<h3 id="Part-8-1-图的存储与遍历"><a href="#Part-8-1-图的存储与遍历" class="headerlink" title="Part 8.1 图的存储与遍历"></a>Part 8.1 图的存储与遍历</h3><blockquote>
<p>这里的图论内容都比较简单，涉及图的存储以及遍历图的方式。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2661" target="_blank" rel="noopener">P2661 信息传递</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2921" target="_blank" rel="noopener">P2921 [USACO08DEC]Trick or Treat on the Farm</a></li>
</ul>
<h3 id="Part-8-2-最短路问题"><a href="#Part-8-2-最短路问题" class="headerlink" title="Part 8.2 最短路问题"></a>Part 8.2 最短路问题</h3><blockquote>
<p>很多题目都可以转化为最短路的模型。因此，掌握最短路算法非常重要。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3371" target="_blank" rel="noopener">P3371 【模板】单源最短路径（弱化版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4779" target="_blank" rel="noopener">P4779 【模板】单源最短路径（标准版）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5905" target="_blank" rel="noopener">P5905 【模板】Johnson 全源最短路</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1144" target="_blank" rel="noopener">P1144 最短路计数</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1462" target="_blank" rel="noopener">P1462 通往奥格瑞玛的道路</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1522" target="_blank" rel="noopener">P1522 Cow Tours</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1266" target="_blank" rel="noopener">P1266 速度限制</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4001" target="_blank" rel="noopener">P4001 [ICPC-Beijing 2006]狼抓兔子</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4568" target="_blank" rel="noopener">P4568 [JLOI2011]飞行路线</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3238" target="_blank" rel="noopener">P3238 [HNOI2014]道路堵塞</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5304" target="_blank" rel="noopener">P5304 [GXOI/GZOI2019]旅行者</a></li>
</ul>
<h3 id="Part-8-3-树上问题"><a href="#Part-8-3-树上问题" class="headerlink" title="Part 8.3 树上问题"></a>Part 8.3 树上问题</h3><blockquote>
<p>作为一种特殊的图，树上的问题具有很多鲜明的特点。</p>
</blockquote>
<h4 id="Part-8-3-1-二叉树"><a href="#Part-8-3-1-二叉树" class="headerlink" title="Part 8.3.1 二叉树"></a>Part 8.3.1 二叉树</h4><blockquote>
<p>二叉树是一种特殊的树，它有很多特殊的性质。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1087" target="_blank" rel="noopener">P1087 FBI树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1030" target="_blank" rel="noopener">P1030 求先序排列</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1305" target="_blank" rel="noopener">P1305 新二叉树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1229" target="_blank" rel="noopener">P1229 遍历问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5018" target="_blank" rel="noopener">P5018 对称二叉树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5597" target="_blank" rel="noopener">P5597 【XR-4】复读</a></li>
</ul>
<h4 id="Part-8-3-2-树的直径"><a href="#Part-8-3-2-树的直径" class="headerlink" title="Part 8.3.2 树的直径"></a>Part 8.3.2 树的直径</h4><blockquote>
<p>树的直径被定义为树上最远的两点间的距离。</p>
<p>计算树的直径，可以通过两遍 DFS 解决。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2195" target="_blank" rel="noopener">P2195 HXY造公园</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3629" target="_blank" rel="noopener">P3629 [APIO2010]巡逻</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5536" target="_blank" rel="noopener">P5536 【XR-3】核心城市</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1099" target="_blank" rel="noopener">P1099 树网的核</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4408" target="_blank" rel="noopener">P4408 [NOI2003]逃学的小孩</a></li>
</ul>
<h4 id="Part-8-3-3-最近公共祖先"><a href="#Part-8-3-3-最近公共祖先" class="headerlink" title="Part 8.3.3 最近公共祖先"></a>Part 8.3.3 最近公共祖先</h4><blockquote>
<p>两个点的最近公共祖先，即两个点的所有公共祖先中，离根节点最远的一个节点。</p>
<p>求解最近公共祖先，常用的方法是树上倍增或者树链剖分。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3379" target="_blank" rel="noopener">P3379 【模板】最近公共祖先（LCA）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3938" target="_blank" rel="noopener">P3938 斐波那契</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4281" target="_blank" rel="noopener">P4281 [AHOI2008]紧急集合 / 聚会</a></li>
</ul>
<h3 id="Part-8-4-生成树"><a href="#Part-8-4-生成树" class="headerlink" title="Part 8.4 生成树"></a>Part 8.4 生成树</h3><blockquote>
<p>用 $ n-1 $ 条边将图上的 $ n $ 个点连接起来，形成的树就被称为生成树。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3366" target="_blank" rel="noopener">P3366 【模板】最小生成树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4180" target="_blank" rel="noopener">P4180 【模板】严格次小生成树[BJWC2010]</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2872" target="_blank" rel="noopener">P2872 [USACO07DEC]Building Roads</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1991" target="_blank" rel="noopener">P1991 无线通讯网</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1967" target="_blank" rel="noopener">P1967 货车运输</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4047" target="_blank" rel="noopener">P4047 [JSOI2010]部落划分</a></li>
</ul>
<h3 id="Part-8-5-拓扑排序"><a href="#Part-8-5-拓扑排序" class="headerlink" title="Part 8.5 拓扑排序"></a>Part 8.5 拓扑排序</h3><blockquote>
<p>将一个有向无环图排序，使得所有排在前面的节点不能依赖于排在后面的节点，这就是拓扑排序。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1113" target="_blank" rel="noopener">P1113 杂务</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1983" target="_blank" rel="noopener">P1983 车站分级</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1038" target="_blank" rel="noopener">P1038 神经网络</a></li>
</ul>
<h3 id="Part-8-6-差分约束"><a href="#Part-8-6-差分约束" class="headerlink" title="Part 8.6 差分约束"></a>Part 8.6 差分约束</h3><blockquote>
<p>差分约束要解决的问题是：求出一组 $ n $ 元不等式的一组解，使得所有约束关系都能得到满足。 </p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P5960" target="_blank" rel="noopener">P5960 【模板】差分约束算法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3275" target="_blank" rel="noopener">P3275 [SCOI2011]糖果</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2294" target="_blank" rel="noopener">P2294 [HNOI2005]狡猾的商人</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4926" target="_blank" rel="noopener">P4926 [1007]倍杀测量者</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5590" target="_blank" rel="noopener">P5590 赛车游戏</a></li>
</ul>
<h3 id="Part-8-7-图的连通性相关"><a href="#Part-8-7-图的连通性相关" class="headerlink" title="Part 8.7 图的连通性相关"></a>Part 8.7 图的连通性相关</h3><blockquote>
<p>利用 Tarjan 算法，我们可以解决很多与图的连通性相关的问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3387" target="_blank" rel="noopener">P3387 【模板】缩点</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3388" target="_blank" rel="noopener">P3388 【模板】割点（割顶）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2341" target="_blank" rel="noopener">P2341 [HAOI2006]受欢迎的牛</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2863" target="_blank" rel="noopener">P2863 [USACO06JAN]The Cow Prom</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2746" target="_blank" rel="noopener">P2746 [USACO5.3]Network of Schools</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1407" target="_blank" rel="noopener">P1407 [国家集训队]稳定婚姻</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2272" target="_blank" rel="noopener">P2272 [ZJOI2007]最大半连通子图</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3225" target="_blank" rel="noopener">P3225 [HNOI2012]矿场搭建</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5058" target="_blank" rel="noopener">P5058 [ZJOI2004]嗅探器</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2515" target="_blank" rel="noopener">P2515 [HAOI2010]软件安装</a></li>
</ul>
<h3 id="Part-8-8-二分图"><a href="#Part-8-8-二分图" class="headerlink" title="Part 8.8 二分图"></a>Part 8.8 二分图</h3><blockquote>
<p>二分图上的不少问题都可以转化成网络流解决，当然也有独特的其他方法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3386" target="_blank" rel="noopener">P3386 【模板】二分图匹配</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2756" target="_blank" rel="noopener">P2756 飞行员配对方案问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1129" target="_blank" rel="noopener">P1129 [ZJOI2007]矩阵游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1559" target="_blank" rel="noopener">P1559 运动员最佳匹配问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2423" target="_blank" rel="noopener">P2423 [HEOI2012]朋友圈</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2764" target="_blank" rel="noopener">P2764 最小路径覆盖问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2825" target="_blank" rel="noopener">P2825 [HEOI2016/TJOI2016]游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3033" target="_blank" rel="noopener">P3033 [USACO11NOV]Cow Steeplechase</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3731" target="_blank" rel="noopener">P3731 [HAOI2017]新型城市化</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4014" target="_blank" rel="noopener">P4014 分配问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4617" target="_blank" rel="noopener">P4617 [COCI2017-2018#5] Planinarenje</a></li>
</ul>
<h3 id="Part-8-9-网络流"><a href="#Part-8-9-网络流" class="headerlink" title="Part 8.9 网络流"></a>Part 8.9 网络流</h3><blockquote>
<p>网络流是图论中一个重要的分支，很多题目都可以通过建立网络流的模型来解决。</p>
</blockquote>
<h4 id="Part-8-9-1-最大流"><a href="#Part-8-9-1-最大流" class="headerlink" title="Part 8.9.1 最大流"></a>Part 8.9.1 最大流</h4><blockquote>
<p>最大流，即求网络中最大的流量。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3376" target="_blank" rel="noopener">P3376 【模板】网络最大流</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4722" target="_blank" rel="noopener">P4722 【模板】最大流 加强版 / 预流推进</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2065" target="_blank" rel="noopener">P2065 [TJOI2011]卡片</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2763" target="_blank" rel="noopener">P2763 试题库问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2472" target="_blank" rel="noopener">P2472 [SCOI2007]蜥蜴</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2754" target="_blank" rel="noopener">P2754 [CTSC1999]家园</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2765" target="_blank" rel="noopener">P2765 魔术球问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2766" target="_blank" rel="noopener">P2766 最长不下降子序列问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2805" target="_blank" rel="noopener">P2805 [NOI2009]植物大战僵尸</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3749" target="_blank" rel="noopener">P3749 [六省联考2017]寿司餐厅</a></li>
</ul>
<h4 id="Part-8-9-2-最小割"><a href="#Part-8-9-2-最小割" class="headerlink" title="Part 8.9.2 最小割"></a>Part 8.9.2 最小割</h4><blockquote>
<p>最小割，即求一个边权最小的边集，使得源点和汇点不再连通。</p>
<p>可以证明，<strong>最大流=最小割</strong>。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1344" target="_blank" rel="noopener">P1344 [USACO4.4]Pollutant Control</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1345" target="_blank" rel="noopener">P1345 [USACO5.4]Telecowmunication</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2057" target="_blank" rel="noopener">P2057 [SHOI2007]善意的投票</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2598" target="_blank" rel="noopener">P2598 [ZJOI2009]狼和羊的故事</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2774" target="_blank" rel="noopener">P2774 方格取数问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4126" target="_blank" rel="noopener">P4126 [AHOI2009]最小割</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5039" target="_blank" rel="noopener">P5039 [SHOI2010]最小生成树</a></li>
</ul>
<h4 id="Part-8-9-3-费用流"><a href="#Part-8-9-3-费用流" class="headerlink" title="Part 8.9.3 费用流"></a>Part 8.9.3 费用流</h4><blockquote>
<p>在网络流中给边加上一个参数——费用，就出现了费用流。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3381" target="_blank" rel="noopener">P3381 【模板】最小费用最大流</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4016" target="_blank" rel="noopener">P4016 负载平衡问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4452" target="_blank" rel="noopener">P4452 [国家集训队]航班安排</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2045" target="_blank" rel="noopener">P2045 方格取数加强版</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2050" target="_blank" rel="noopener">P2050 [NOI2012]美食节</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2053" target="_blank" rel="noopener">P2053 [SCOI2007]修车</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2604" target="_blank" rel="noopener">P2604 [ZJOI2010]网络扩容</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2770" target="_blank" rel="noopener">P2770 航空路线问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3159" target="_blank" rel="noopener">P3159 [CQOI2012]交换棋子</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3356" target="_blank" rel="noopener">P3356 火星探险问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3358" target="_blank" rel="noopener">P3358 最长k可重区间集问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4013" target="_blank" rel="noopener">P4013 数字梯形问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4015" target="_blank" rel="noopener">P4015 运输问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5331" target="_blank" rel="noopener">P5331 [SNOI2019]通信</a></li>
</ul>
<h4 id="Part-8-9-4-上下界网络流"><a href="#Part-8-9-4-上下界网络流" class="headerlink" title="Part 8.9.4 上下界网络流"></a>Part 8.9.4 上下界网络流</h4><blockquote>
<p>在网络流问题中给每条边的流量增加一个下界，就有了上下界网络流。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3980" target="_blank" rel="noopener">P3980 [NOI2008]志愿者招募</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4043" target="_blank" rel="noopener">P4043 [AHOI2014/JSOI2014]支线剧情</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4553" target="_blank" rel="noopener">P4553 80人环游世界</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4843" target="_blank" rel="noopener">P4843 清理雪道</a></li>
</ul>
<h3 id="Part-8-10-2-SAT"><a href="#Part-8-10-2-SAT" class="headerlink" title="Part 8.10 2-SAT"></a>Part 8.10 2-SAT</h3><blockquote>
<p>k-SAT 问题的目标是对一些布尔变量赋值，满足限定的条件。</p>
<p>在 k-SAT 问题中，2-SAT 问题属于较为容易解决的一类。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4782" target="_blank" rel="noopener">P4782 【模板】2-SAT 问题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4171" target="_blank" rel="noopener">P4171 [JSOI2010]满汉全席</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3825" target="_blank" rel="noopener">P3825 [NOI2017]游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5332" target="_blank" rel="noopener">P5332 [JSOI2019]精准预测</a></li>
</ul>
<h3 id="Part-8-11-点分治"><a href="#Part-8-11-点分治" class="headerlink" title="Part 8.11 点分治"></a>Part 8.11 点分治</h3><blockquote>
<p>点分治是一种可以高效统计树上路径信息的算法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3806" target="_blank" rel="noopener">P3806 【模板】点分治1</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2634" target="_blank" rel="noopener">P2634 [国家集训队]聪聪可可</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2664" target="_blank" rel="noopener">P2664 树上游戏</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3714" target="_blank" rel="noopener">P3714 [BJOI2017]树的难题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4149" target="_blank" rel="noopener">P4149 [IOI2011]Race</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3241" target="_blank" rel="noopener">P3241 [HNOI2015]开店</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4075" target="_blank" rel="noopener">P4075 [SDOI2016]模式字符串</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4183" target="_blank" rel="noopener">P4183 [USACO18JAN]Cow at Large P</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4292" target="_blank" rel="noopener">P4292 [WC2010]重建计划</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5306" target="_blank" rel="noopener">P5306 [COCI2019]Transport</a></li>
</ul>
<h3 id="Part-8-12-虚树"><a href="#Part-8-12-虚树" class="headerlink" title="Part 8.12 虚树"></a>Part 8.12 虚树</h3><blockquote>
<p>将一些无用的点从树上删去，从而达到降低树的规模的效果。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2495" target="_blank" rel="noopener">P2495 [SDOI2011]消耗战</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3233" target="_blank" rel="noopener">P3233 [HNOI2014]世界树</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5360" target="_blank" rel="noopener">P5360 [SDOI2019]世界地图</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5439" target="_blank" rel="noopener">P5439 【XR-2】永恒</a></li>
</ul>
<h3 id="Part-8-13-矩阵树定理"><a href="#Part-8-13-矩阵树定理" class="headerlink" title="Part 8.13 矩阵树定理"></a>Part 8.13 矩阵树定理</h3><blockquote>
<p>矩阵树定理可以解决图的生成树计数问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4111" target="_blank" rel="noopener">P4111 [HEOI2015]小Z的房间</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2144" target="_blank" rel="noopener">P2144 [FJOI2007]轮状病毒</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3317" target="_blank" rel="noopener">P3317 [SDOI2014]重建</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4208" target="_blank" rel="noopener">P4208 [JSOI2008]最小生成树计数</a></li>
</ul>
<h2 id="Part-9-计算几何"><a href="#Part-9-计算几何" class="headerlink" title="Part 9 计算几何"></a>Part 9 计算几何</h2><blockquote>
<p>试着用计算机来解决几何问题吧！</p>
</blockquote>
<h3 id="Part-9-1-凸包"><a href="#Part-9-1-凸包" class="headerlink" title="Part 9.1 凸包"></a>Part 9.1 凸包</h3><blockquote>
<p>凸包指在平面上能包含所有给定点的最小凸多边形。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P2742" target="_blank" rel="noopener">P2742 【模板】二维凸包</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2287" target="_blank" rel="noopener">P2287 [HNOI2004]最佳包裹</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3829" target="_blank" rel="noopener">P3829 [SHOI2012]信用卡凸包</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4680" target="_blank" rel="noopener">P4680 [Ynoi2018]末日时在做什么?有没有空?可以来拯救吗?</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4557" target="_blank" rel="noopener">P4557 [JSOI2018]战争</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5403" target="_blank" rel="noopener">P5403 [CTS2019]田野</a></li>
</ul>
<h3 id="Part-9-2-旋转卡壳"><a href="#Part-9-2-旋转卡壳" class="headerlink" title="Part 9.2 旋转卡壳"></a>Part 9.2 旋转卡壳</h3><blockquote>
<p>旋转卡壳是一种求出凸包所有对踵点对的算法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1452" target="_blank" rel="noopener">P1452 Beauty Contest</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3187" target="_blank" rel="noopener">P3187 [HNOI2007]最小矩形覆盖</a></li>
</ul>
<h3 id="Part-9-3-半平面交"><a href="#Part-9-3-半平面交" class="headerlink" title="Part 9.3 半平面交"></a>Part 9.3 半平面交</h3><blockquote>
<p>多个半平面的交集称之为半平面交。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3256" target="_blank" rel="noopener">P3256 [JLOI2013]赛车</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2600" target="_blank" rel="noopener">P2600 [ZJOI2008]瞭望塔</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4196" target="_blank" rel="noopener">P4196 [CQOI2006]凸多边形</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3297" target="_blank" rel="noopener">P3297 [SDOI2013]逃考</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4250" target="_blank" rel="noopener">P4250 [SCOI2015]小凸想跑步</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5328" target="_blank" rel="noopener">P5328 [ZJOI2019]浙江省选</a></li>
</ul>
<h2 id="Part-10-杂项"><a href="#Part-10-杂项" class="headerlink" title="Part 10 杂项"></a>Part 10 杂项</h2><blockquote>
<p>这里的专题，有很多都难以纳入前面的类别中，故将他们单独列入了杂项。</p>
</blockquote>
<h3 id="Part-10-1-模拟退火"><a href="#Part-10-1-模拟退火" class="headerlink" title="Part 10.1 模拟退火"></a>Part 10.1 模拟退火</h3><blockquote>
<p>模拟退火是一种随机化算法。当一个问题的方案数量极大（甚至是无穷的）而且不是一个单峰函数时，我们常使用模拟退火求解。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1337" target="_blank" rel="noopener">P1337 [JSOI2004]平衡点 / 吊打XXX</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2503" target="_blank" rel="noopener">P2503 [HAOI2006]均分数据</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3878" target="_blank" rel="noopener">P3878 [TJOI2010]分金币</a></li>
</ul>
<h3 id="Part-10-2-0-1-分数规划"><a href="#Part-10-2-0-1-分数规划" class="headerlink" title="Part 10.2 0/1 分数规划"></a>Part 10.2 0/1 分数规划</h3><blockquote>
<p>0/1 分数规划用来求一个分式的极值。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4377" target="_blank" rel="noopener">P4377 [USACO18OPEN]Talent Show</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3199" target="_blank" rel="noopener">P3199 [HNOI2009]最小圈</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3288" target="_blank" rel="noopener">P3288 [SCOI2014]方伯伯运椰子</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3705" target="_blank" rel="noopener">P3705 [SDOI2017]新生舞会</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4322" target="_blank" rel="noopener">P4322 [JSOI2016]最佳团体</a></li>
</ul>
<h3 id="Part-10-3-离线算法"><a href="#Part-10-3-离线算法" class="headerlink" title="Part 10.3 离线算法"></a>Part 10.3 离线算法</h3><blockquote>
<p>当题目不要求强制在线时，我们可以一次性读入所有询问来处理。</p>
</blockquote>
<h4 id="Part-10-3-1-CDQ-分治"><a href="#Part-10-3-1-CDQ-分治" class="headerlink" title="Part 10.3.1 CDQ 分治"></a>Part 10.3.1 CDQ 分治</h4><blockquote>
<p>CDQ 分治是一个基于分治思想的离线算法。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P3810" target="_blank" rel="noopener">P3810 【模板】三维偏序（陌上花开）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3157" target="_blank" rel="noopener">P3157 [CQOI2011]动态逆序对</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2487" target="_blank" rel="noopener">P2487 [SDOI2011]拦截导弹</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4690" target="_blank" rel="noopener">P4690 [Ynoi2016]镜中的昆虫</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3206" target="_blank" rel="noopener">P3206 [HNOI2010]城市建设</a></li>
</ul>
<h4 id="Part-10-3-2-整体二分"><a href="#Part-10-3-2-整体二分" class="headerlink" title="Part 10.3.2 整体二分"></a>Part 10.3.2 整体二分</h4><blockquote>
<p>整体二分，顾名思义就是把多个查询一起二分解决。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1527" target="_blank" rel="noopener">P1527 [国家集训队]矩阵乘法</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2617" target="_blank" rel="noopener">P2617 Dynamic Rankings</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3527" target="_blank" rel="noopener">P3527 [POI2011]MET-Meteors</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4602" target="_blank" rel="noopener">P4602 [CTSC2018]混合果汁</a></li>
</ul>
<h4 id="Part-10-3-3-莫队"><a href="#Part-10-3-3-莫队" class="headerlink" title="Part 10.3.3 莫队"></a>Part 10.3.3 莫队</h4><blockquote>
<p>莫队算法可以解决不少离线区间询问问题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1494" target="_blank" rel="noopener">P1494 [国家集训队]小Z的袜子 /【模板】莫队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1903" target="_blank" rel="noopener">P1903 [国家集训队]数颜色 / 维护队列 /【模板】带修莫队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5906" target="_blank" rel="noopener">P5906 【模板】回滚莫队</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4887" target="_blank" rel="noopener">P4887 【模板】莫队二次离线（第十四分块(前体)）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P2709" target="_blank" rel="noopener">P2709 小B的询问</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3674" target="_blank" rel="noopener">P3674 小清新人渣的本愿</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3709" target="_blank" rel="noopener">P3709 大爷的字符串题</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4074" target="_blank" rel="noopener">P4074 [WC2013]糖果公园</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5501" target="_blank" rel="noopener">P5501 [LnOI2019]来者不拒，去者不追</a></li>
</ul>
<h3 id="Part-10-4-奇怪的题目"><a href="#Part-10-4-奇怪的题目" class="headerlink" title="Part 10.4 奇怪的题目"></a>Part 10.4 奇怪的题目</h3><blockquote>
<p>OI 界中有一些非常规套路的题目，这里放出来分享。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P4920" target="_blank" rel="noopener">P4920 [WC2015]未来程序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5042" target="_blank" rel="noopener">P5042 [国家集训队]丢失的题面（ydc的题面）</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5285" target="_blank" rel="noopener">P5285 [十二省联考2019]骗分过样例</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5246" target="_blank" rel="noopener">P5246 [集训队互测2016]消失的源代码</a></li>
</ul>
<h3 id="Part-10-5-非传统题"><a href="#Part-10-5-非传统题" class="headerlink" title="Part 10.5 非传统题"></a>Part 10.5 非传统题</h3><blockquote>
<p>在 NOI 等比赛中，非传统题正越来越频繁出现。</p>
<p>非传统题主要包括以下几类：提交答案题，交互题，通信题。</p>
</blockquote>
<h4 id="Part-10-5-1-提交答案题"><a href="#Part-10-5-1-提交答案题" class="headerlink" title="Part 10.5.1 提交答案题"></a>Part 10.5.1 提交答案题</h4><blockquote>
<p>给你一些输入，你只需要提交这些输入对应的答案，即为提交答案题。</p>
</blockquote>
<ul>
<li><a href="https://www.luogu.com.cn/problem/P1335" target="_blank" rel="noopener">P1335 [NOI2013]小Q的修炼</a></li>
<li><a href="https://www.luogu.com.cn/problem/P1737" target="_blank" rel="noopener">P1737 [NOI2016]旷野大计算</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3614" target="_blank" rel="noopener">P3614 yyy棋 II</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3640" target="_blank" rel="noopener">P3640 [APIO2013]出题人</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3782" target="_blank" rel="noopener">P3782 [WC2017]排序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P3836" target="_blank" rel="noopener">P3836 Nowruz</a></li>
<li><a href="https://www.luogu.com.cn/problem/P4920" target="_blank" rel="noopener">P4920 [WC2015]未来程序</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5402" target="_blank" rel="noopener">P5402 [CTS2019]无处安放</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5418" target="_blank" rel="noopener">P5418 [CTSC2016]NOIP十合一</a></li>
<li><a href="https://www.luogu.com.cn/problem/P5600" target="_blank" rel="noopener">P5600 【XR-4】尺规作图</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>题单（现在）</title>
    <url>/List_Now/</url>
    <content><![CDATA[<blockquote>
<p>List_Now</p>
</blockquote>
<a id="more"></a>
<div class="note primary">
            
          </div>
<div class="note info">
            <h5 id="正在做"><a href="#正在做" class="headerlink" title="正在做"></a>正在做</h5>
          </div>
<div class="note warning">
            <h5 id="尚未开始"><a href="#尚未开始" class="headerlink" title="尚未开始"></a>尚未开始</h5><p><a href="https://www.luogu.com.cn/problem/P5534" target="_blank" rel="noopener">1</a> <a href="https://www.luogu.com.cn/problem/P1192" target="_blank" rel="noopener">2</a> <a href="https://www.luogu.com.cn/problem/P4994" target="_blank" rel="noopener">3</a> <a href="https://www.luogu.com.cn/problem/P5594" target="_blank" rel="noopener">4</a> <a href="https://www.luogu.com.cn/problem/P2010" target="_blank" rel="noopener">5</a> <a href="https://www.luogu.com.cn/problem/P5587" target="_blank" rel="noopener">6</a></p>
          </div>
<div class="note danger">
            <h5 id="Unaccepted"><a href="#Unaccepted" class="headerlink" title="Unaccepted"></a>Unaccepted</h5>
          </div>]]></content>
  </entry>
  <entry>
    <title>Hexo NexT 插件&amp;教程</title>
    <url>/Toolbox002/</url>
    <content><![CDATA[<h1 id="Toolbox002"><a href="#Toolbox002" class="headerlink" title="Toolbox002"></a>Toolbox002</h1><a id="more"></a>
<h1 id="心知天气"><a href="#心知天气" class="headerlink" title="心知天气"></a>心知天气</h1><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p><img src="/data/Toolbox002/1.gif" alt=""></p>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="Step1-注册账号"><a href="#Step1-注册账号" class="headerlink" title="Step1. 注册账号"></a>Step1. 注册账号</h3><p>到<a href="https://www.seniverse.com/" target="_blank" rel="noopener">官网</a>去注册账号即可</p>
<p>接着在<a href="https://www.seniverse.com/products?iid=new" target="_blank" rel="noopener">这里</a>申请<strong>免费版产品</strong>即可</p>
<h3 id="Step2-自定义浮窗样式"><a href="#Step2-自定义浮窗样式" class="headerlink" title="Step2. 自定义浮窗样式"></a>Step2. 自定义浮窗样式</h3><p>在<a href="https://www.seniverse.com/widgetv3" target="_blank" rel="noopener">这里</a>自定义浮窗样式</p>
<p><img src="/data/Toolbox002/2.png" alt=""></p>
<p>完成后点击 <strong>“生成代码”</strong></p>
<h3 id="Step3-配置到-Hexo-中"><a href="#Step3-配置到-Hexo-中" class="headerlink" title="Step3. 配置到 Hexo 中"></a>Step3. 配置到 Hexo 中</h3><p>复制 <strong>JS代码</strong></p>
<p><img src="/data/Toolbox002/3.png" alt=""></p>
<p>打开 <code>\themes\next\layout\_layout.swig</code></p>
<p>在此处插入刚刚复制的代码</p>
<p><img src="/data/Toolbox002/4.png" alt=""></p>
<p>这样就好啦</p>
<h2 id="高级设置"><a href="#高级设置" class="headerlink" title="高级设置"></a>高级设置</h2><h3 id="修改浮窗位置"><a href="#修改浮窗位置" class="headerlink" title="修改浮窗位置"></a>修改浮窗位置</h3><blockquote>
<p>由于浮窗默认出现在左上角，所以有时候会不太方便，那我们就来修改浮窗的位置</p>
</blockquote>
<p>首先选择你想让浮窗出现位置的对应代码</p>
<ul>
<li><p>左上角（默认）</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#tp-weather-widget</span> <span class="selector-class">.sw-container</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">right</span>: unset;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: unset;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>左下角</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#tp-weather-widget</span> <span class="selector-class">.sw-container</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">right</span>: unset;</span><br><span class="line">  <span class="attribute">top</span>: unset;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>右上角</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#tp-weather-widget</span> <span class="selector-class">.sw-container</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: unset;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: unset;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>右下角</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#tp-weather-widget</span> <span class="selector-class">.sw-container</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: unset;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">top</span>: unset;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>接着，打开 <code>\themes\next\source\css\main.styl</code></p>
<p>将这段代码插入到文件的最后</p>
<p>这样就好啦</p>
]]></content>
      <categories>
        <category>ToolBox</category>
      </categories>
  </entry>
  <entry>
    <title>搭梯子教程</title>
    <url>/Toolbox001/</url>
    <content><![CDATA[<blockquote>
<p>这是一个教你免费搭梯子的教程</p>
</blockquote>
<a id="more"></a>
<h1 id="Step1-安装-Proxy-SwitchyOmega-插件"><a href="#Step1-安装-Proxy-SwitchyOmega-插件" class="headerlink" title="Step1. 安装 Proxy SwitchyOmega 插件"></a>Step1. 安装 <strong>Proxy SwitchyOmega</strong> 插件</h1><ul>
<li><p>Chrome用户： <a href="https://www.gugeapps.net/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif" target="_blank" rel="noopener">这里</a> 或 <a href="/data/Toolbox001/SwitchyOmega.zip">这里</a></p>
</li>
<li><p>Firefox用户： <a href="https://addons.mozilla.org/zh-CN/firefox/addon/switchyomega/?src=search" target="_blank" rel="noopener">这里</a></p>
</li>
</ul>
<h1 id="Step2-设置"><a href="#Step2-设置" class="headerlink" title="Step2. 设置"></a>Step2. 设置</h1><h2 id="单击插件，进入选项"><a href="#单击插件，进入选项" class="headerlink" title="单击插件，进入选项"></a>单击插件，进入<strong>选项</strong></h2><p><img src="/data/Toolbox001/1.png" alt=""></p>
<h2 id="按下图操作"><a href="#按下图操作" class="headerlink" title="按下图操作"></a>按下图操作</h2><p>代理服务器与代理端口： <a href="https://www.hyltnn.com/getfile/proxy_google.txt" target="_blank" rel="noopener">传送门</a></p>
<p><img src="/data/Toolbox001/2.png" alt=""></p>
<h1 id="Step3-完成"><a href="#Step3-完成" class="headerlink" title="Step3. 完成"></a>Step3. 完成</h1><p>这样就好啦</p>
<p>平时不用时，切回<strong>直接代理</strong></p>
<p><img src="/data/Toolbox001/3.1.png" alt=""></p>
<p>要用时，切到<strong>proxy</strong></p>
<p><img src="/data/Toolbox001/3.2.png" alt=""></p>
<h1 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h1><h2 id="连接不到怎么办"><a href="#连接不到怎么办" class="headerlink" title="连接不到怎么办"></a>连接不到怎么办</h2><p>从刚刚的网址中一个一个慢慢试，总有一个行的</p>
<p>或者用这个</p>
<blockquote>
<p>代理服务器: <code>hkcm.ghelper.net</code><br>代理端口: <code>443</code></p>
</blockquote>
]]></content>
      <categories>
        <category>ToolBox</category>
      </categories>
  </entry>
  <entry>
    <title>Thematic002.字符串专题</title>
    <url>/Thematic002/</url>
    <content><![CDATA[<h1 id="Thematic002"><a href="#Thematic002" class="headerlink" title="Thematic002"></a>Thematic002</h1><a id="more"></a>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul>
<li><a href="/Thematic002/#Trie字典树">Trie字典树</a></li>
<li><a href="/Thematic002/#KMP">KMP</a></li>
<li><a href="/Thematic002/#AC自动机">AC自动机</a></li>
<li><a href="/Thematic002/#Manacher">Manacher</a></li>
<li><a href="/Thematic002/#回文自动机">回文自动机</a></li>
<li><a href="/Thematic002/#后缀数组">后缀数组</a></li>
<li><a href="/Thematic002/#后缀自动机">后缀自动机</a></li>
</ul>
<hr>
<h1 id="Trie字典树"><a href="#Trie字典树" class="headerlink" title="Trie字典树"></a>Trie字典树</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>我们先来看看什么是Trie字典树</p>
<p><img src="/data/Thematic002/1.png" alt=""></p>
<p>可以发现，这棵树的每一条边都有一个字符</p>
<p>有一些点是黄色的，表示它们被标记了</p>
<p>那么，哪些字符串在这棵树中出现过呢？</p>
<p>从树的根节点到每一个被标记的点的路径上的字符串就是对应黄色点所表示的字符串</p>
<p>举个例子，$5$ 是一个被标记的点</p>
<p>说明这一条从根节点到 $5$ 的路径 （ $1\rightarrow2\rightarrow5$ ）上的字符串，也就是 <code>ad</code> ，就在这棵树内</p>
<h2 id="插入字符串（构建Trie字典树）"><a href="#插入字符串（构建Trie字典树）" class="headerlink" title="插入字符串（构建Trie字典树）"></a>插入字符串（构建Trie字典树）</h2><ul>
<li><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3></li>
</ul>
<h4 id="1-初始化"><a href="#1-初始化" class="headerlink" title="1. 初始化"></a>1. 初始化</h4><p>新建一个根节点 $1$</p>
<p><img src="/data/Thematic002/2.png" alt=""></p>
<h4 id="2-插入字符串"><a href="#2-插入字符串" class="headerlink" title="2. 插入字符串"></a>2. 插入字符串</h4><p>我们从根节点开始，即 <code>now=1</code></p>
<p>接着看与 <code>now</code> 点相连的边中有没有字符为 <code>s</code> 的</p>
<ul>
<li><p>如果有，跟着这条边走，即 <code>now=s的点编号</code></p>
</li>
<li><p>如果没有，新建一个点，即 <code>now=++cnt (cnt为点的数量)</code></p>
</li>
</ul>
<p>最后，标记终点，即 <code>over[now]=true</code></p>
<ul>
<li><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3></li>
</ul>
<p>我们现在要往一个空的Trie字典树里插入 <code>beep</code></p>
<p><img src="/data/Thematic002/2.png" alt=""></p>
<p>1.<code>now=1</code> ，向下查找，发现没有 <code>b</code> ，插入 <code>b</code> ，<code>now=++cnt=2</code></p>
<p><img src="/data/Thematic002/2.1.png" alt=""></p>
<p>2.<code>now=2</code> ，向下查找，发现没有 <code>e</code> ，插入 <code>e</code> ，<code>now=++cnt=3</code></p>
<p><img src="/data/Thematic002/2.2.png" alt=""></p>
<p>3.<code>now=3</code> ，向下查找，发现没有 <code>e</code> ，插入 <code>e</code> ，<code>now=++cnt=4</code></p>
<p><img src="/data/Thematic002/2.3.png" alt=""></p>
<p>4.<code>now=4</code> ，向下查找，发现没有 <code>p</code> ，插入 <code>p</code> ，<code>now=++cnt=5</code></p>
<p><img src="/data/Thematic002/2.4.png" alt=""></p>
<p>5.<code>now=5</code> ，结束，标记 $5$</p>
<p><img src="/data/Thematic002/2.5.png" alt=""></p>
<p>现在，往里面继续插入 <code>bed</code></p>
<p>6.<code>now=1</code> ，向下查找 ，发现有 <code>b</code> ，跟着走 ，<code>now=2</code></p>
<p><img src="/data/Thematic002/2.6.png" alt=""></p>
<p>7.<code>now=2</code> ，向下查找 ，发现有 <code>e</code> ，跟着走 ，<code>now=3</code></p>
<p><img src="/data/Thematic002/2.7.png" alt=""></p>
<p>8.<code>now=3</code> ，向下查找 ，发现没有 <code>d</code> ，插入 <code>d</code> ，<code>now=++cnt=6</code></p>
<p><img src="/data/Thematic002/2.8.png" alt=""></p>
<p>9.<code>now=6</code> ，结束 ，标记 $6$</p>
<p><img src="/data/Thematic002/2.9.png" alt=""></p>
<ul>
<li><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> over[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>,trie[maxn][maxm];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> now=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> next=str[i]-<span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span>(!trie[now][next])</span><br><span class="line">            trie[now][next]=++cnt;</span><br><span class="line">        now=trie[now][next];</span><br><span class="line">    &#125;</span><br><span class="line">    over[now]=<span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h1><hr>
<h1 id="AC自动机"><a href="#AC自动机" class="headerlink" title="AC自动机"></a>AC自动机</h1><hr>
<h1 id="Manacher"><a href="#Manacher" class="headerlink" title="Manacher"></a>Manacher</h1><hr>
<h1 id="回文自动机"><a href="#回文自动机" class="headerlink" title="回文自动机"></a>回文自动机</h1><hr>
<h1 id="后缀数组"><a href="#后缀数组" class="headerlink" title="后缀数组"></a>后缀数组</h1><hr>
<h1 id="后缀自动机"><a href="#后缀自动机" class="headerlink" title="后缀自动机"></a>后缀自动机</h1>]]></content>
      <categories>
        <category>Thematic</category>
      </categories>
  </entry>
  <entry>
    <title>Prove001</title>
    <url>/Prove001/</url>
    <content><![CDATA[<h1 id="Prove001"><a href="#Prove001" class="headerlink" title="Prove001"></a>Prove001</h1><blockquote>
<p>持续更新中…<br>详细代码请到 「<a href="\Thematic001">Thematic001. 数论专题</a>」 中查看</p>
</blockquote>
<a id="more"></a>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul>
<li><a href="/Prove001/#分解质因数">分解质因数</a></li>
<li><a href="/Prove001/#欧拉函数">欧拉函数</a></li>
<li><a href="/Prove001/#约数">约数</a></li>
<li><a href="/Prove001/#最大公约数 &amp; 最小公倍数">最大公约数 &amp; 最小公倍数</a></li>
<li><a href="/Prove001/#乘法逆元">乘法逆元</a></li>
<li><a href="/Prove001/#欧几里得（拓展）">欧几里得（拓展）</a></li>
<li><a href="/Prove001/#中国剩余定理">中国剩余定理</a></li>
<li><a href="/Prove001/#中国剩余定理（拓展）">中国剩余定理（拓展）</a></li>
</ul>
<hr>
<h1 id="分解质因数"><a href="#分解质因数" class="headerlink" title="分解质因数"></a>分解质因数</h1><script type="math/tex; mode=display">\large n=p_{1}^{c_{1}}p_{2}^{c_{2}}\cdots p_{m}^{c_{m}}</script><hr>
<h1 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>$\varphi$($x$) 表示求在 $1$ 到 $x$ 的整数中有多少个数与 $x$ 互质</p>
<h2 id="求-varphi-n"><a href="#求-varphi-n" class="headerlink" title="求 $\varphi(n)$"></a>求 $\varphi(n)$</h2><script type="math/tex; mode=display">\large \varphi(n)=n\times(1-\frac{1}{p_{1}})\times(1-\frac{1}{p_{2}})\times\cdots\times(1-\frac{1}{p_{m}})</script><h2 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h2><ul>
<li><h3 id="varphi-1-varphi-2-1-，其余的欧拉函数均为偶数"><a href="#varphi-1-varphi-2-1-，其余的欧拉函数均为偶数" class="headerlink" title="$\varphi(1)=\varphi(2)=1$，其余的欧拉函数均为偶数"></a>$\varphi(1)=\varphi(2)=1$，其余的欧拉函数均为偶数</h3></li>
<li><h3 id="当-n-为素数时，-varphi-n-n-1"><a href="#当-n-为素数时，-varphi-n-n-1" class="headerlink" title="当 $n$ 为素数时，$\varphi(n)=n-1$"></a>当 $n$ 为素数时，$\varphi(n)=n-1$</h3></li>
<li><h3 id="欧拉函数是积性函数，但不是完全积性。"><a href="#欧拉函数是积性函数，但不是完全积性。" class="headerlink" title="欧拉函数是积性函数，但不是完全积性。"></a>欧拉函数是积性函数，但不是完全积性。</h3></li>
</ul>
<blockquote>
<p>即当 $\gcd(n,m)=1$ 时，$\varphi(nm)=\varphi(n)\varphi(m)$</p>
</blockquote>
<ul>
<li><h3 id="当-n-为奇数时，-varphi-2n-varphi-n"><a href="#当-n-为奇数时，-varphi-2n-varphi-n" class="headerlink" title="当 $n$ 为奇数时，$\varphi(2n)=\varphi(n)$"></a>当 $n$ 为奇数时，$\varphi(2n)=\varphi(n)$</h3></li>
<li><h3 id="当-n-为素数时，-varphi-n-k-n-1-times-n-k-1"><a href="#当-n-为素数时，-varphi-n-k-n-1-times-n-k-1" class="headerlink" title="当 $n$ 为素数时，$\varphi(n^{k})=(n-1)\times n^{k-1}$"></a>当 $n$ 为素数时，$\varphi(n^{k})=(n-1)\times n^{k-1}$</h3></li>
<li><h3 id="当-n-geq-1-时，-1-到-n-中所有与-n-互质的数的和为-frac-varphi-n-2-times-n"><a href="#当-n-geq-1-时，-1-到-n-中所有与-n-互质的数的和为-frac-varphi-n-2-times-n" class="headerlink" title="当 $n \geq 1$ 时，$1$ 到 $n$ 中所有与 $n$ 互质的数的和为 $\frac{\varphi(n)}{2}\times n$"></a>当 $n \geq 1$ 时，$1$ 到 $n$ 中所有与 $n$ 互质的数的和为 $\frac{\varphi(n)}{2}\times n$</h3></li>
</ul>
<blockquote>
<p>证明：</p>
<p>若 $\gcd(n,i)=1$，那么 $\gcd(n,n-i)=1$</p>
<p>即 与 $n$ 互质的数是<strong>成对出现</strong>的，而且每一对的和<strong>都为 $n$</strong>。</p>
</blockquote>
<ul>
<li><h3 id="如果-k-bmod-p-0-且-p-为素数，那么-varphi-kp-varphi-k-times-p"><a href="#如果-k-bmod-p-0-且-p-为素数，那么-varphi-kp-varphi-k-times-p" class="headerlink" title="如果 $k \bmod p = 0$ 且 $p$ 为素数，那么 $\varphi(kp)=\varphi(k)\times p$"></a>如果 $k \bmod p = 0$ 且 $p$ 为素数，那么 $\varphi(kp)=\varphi(k)\times p$</h3></li>
<li><h3 id="如果-k-bmod-p-neq-0-且-p-为素数，那么-varphi-kp-varphi-k-times-p-1"><a href="#如果-k-bmod-p-neq-0-且-p-为素数，那么-varphi-kp-varphi-k-times-p-1" class="headerlink" title="如果 $k \bmod p \neq 0$ 且 $p$ 为素数，那么 $\varphi(kp)=\varphi(k)\times (p-1)$"></a>如果 $k \bmod p \neq 0$ 且 $p$ 为素数，那么 $\varphi(kp)=\varphi(k)\times (p-1)$</h3></li>
<li><h3 id="如果-gcd-a-p-1-，那么-a-varphi-p-equiv-1-pmod-p"><a href="#如果-gcd-a-p-1-，那么-a-varphi-p-equiv-1-pmod-p" class="headerlink" title="如果 $\gcd(a,p)=1$ ，那么 $a^{\varphi(p)}\equiv 1 \pmod p$"></a>如果 $\gcd(a,p)=1$ ，那么 $a^{\varphi(p)}\equiv 1 \pmod p$</h3></li>
</ul>
<hr>
<h1 id="约数"><a href="#约数" class="headerlink" title="约数"></a>约数</h1><h2 id="求-n-的正约数个数"><a href="#求-n-的正约数个数" class="headerlink" title="求 $n$ 的正约数个数"></a>求 $n$ 的正约数个数</h2><script type="math/tex; mode=display">\large (c_{1}+1)(c_{2}+2)\cdots(c_{m}+m)</script><h2 id="求-n-所有正约数的和"><a href="#求-n-所有正约数的和" class="headerlink" title="求 $n$ 所有正约数的和"></a>求 $n$ 所有正约数的和</h2><script type="math/tex; mode=display">\large (1+p_{1}+p_{1}^{2}+\cdots+p_{1}^{c_{1}})\cdots(1+p_{m}+p_{m}^{2}+\cdots+p_{m}^{c_{m}})</script><hr>
<h1 id="最大公约数-amp-最小公倍数"><a href="#最大公约数-amp-最小公倍数" class="headerlink" title="最大公约数 &amp; 最小公倍数"></a>最大公约数 &amp; 最小公倍数</h1><h2 id="定理"><a href="#定理" class="headerlink" title="定理"></a>定理</h2><script type="math/tex; mode=display">\large \gcd(a,b)\times \operatorname{lcm}(a,b)=a\times b</script><script type="math/tex; mode=display">\large \gcd(ka,kb)=k\times \gcd(a,b)</script><script type="math/tex; mode=display">\large \operatorname{lcm}(ka,kb)=k\times \operatorname{lcm}(a,b)</script><script type="math/tex; mode=display">\large \operatorname{lcm}(\frac{S}{a},\frac{S}{b})=\frac{S}{\gcd(a,b)}</script><h2 id="求最大公倍数"><a href="#求最大公倍数" class="headerlink" title="求最大公倍数"></a>求最大公倍数</h2><ul>
<li><h3 id="更相减损术"><a href="#更相减损术" class="headerlink" title="更相减损术"></a>更相减损术</h3></li>
<li><h3 id="欧几里得（-text-辗转相除法-text-）"><a href="#欧几里得（-text-辗转相除法-text-）" class="headerlink" title="欧几里得（$\text{ }$辗转相除法$\text{ }$）"></a>欧几里得（$\text{ }$辗转相除法$\text{ }$）</h3></li>
<li><h3 id="二进制算法"><a href="#二进制算法" class="headerlink" title="二进制算法"></a>二进制算法</h3></li>
</ul>
<hr>
<h1 id="乘法逆元"><a href="#乘法逆元" class="headerlink" title="乘法逆元"></a>乘法逆元</h1><h2 id="解决的问题"><a href="#解决的问题" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>求下面关于 $x$ 的同余方程的整数解</p>
<script type="math/tex; mode=display">\large ax \equiv 1\pmod b</script><h2 id="定理-1"><a href="#定理-1" class="headerlink" title="定理"></a>定理</h2><script type="math/tex; mode=display">\large (\frac{a}{b}) \bmod p</script><script type="math/tex; mode=display">\large =(a\times a\text{的逆元}) \bmod p</script><h2 id="求乘法逆元"><a href="#求乘法逆元" class="headerlink" title="求乘法逆元"></a>求乘法逆元</h2><ul>
<li><h3 id="欧几里得（拓展）"><a href="#欧几里得（拓展）" class="headerlink" title="欧几里得（拓展）"></a>欧几里得（拓展）</h3></li>
</ul>
<p>可以将上面的同余方程化为</p>
<script type="math/tex; mode=display">\large ax=1-by</script><script type="math/tex; mode=display">\large ax+by=1</script><ul>
<li><h3 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h3></li>
</ul>
<p>这里需要用到<strong>费马小定理</strong></p>
<blockquote>
<p>若 $a$ 为正整数，$b$ 为素数，$a,b$ 互质，则有</p>
<script type="math/tex; mode=display">\large a^{b-1} \equiv 1 \pmod b</script></blockquote>
<p>把这个式子代入 $ax \equiv 1 \pmod b$ 中，得</p>
<script type="math/tex; mode=display">\large ax \equiv a^{b-1} \pmod b</script><script type="math/tex; mode=display">\large x \equiv a^{b-2} \pmod b</script><p>所以这时候方程的解就是 $a^{b-2} \bmod b$</p>
<hr>
<h1 id="欧几里得（拓展）-1"><a href="#欧几里得（拓展）-1" class="headerlink" title="欧几里得（拓展）"></a>欧几里得（拓展）</h1><h2 id="解决的问题-1"><a href="#解决的问题-1" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>求下面关于 $x,y$ 的不定方程的整数解</p>
<script type="math/tex; mode=display">\large{ax+by=c}</script><h2 id="定理-2"><a href="#定理-2" class="headerlink" title="定理"></a>定理</h2><p>若不定方程有整数解，则</p>
<script type="math/tex; mode=display">\large{\gcd(a,b)|c}</script><p>若关于这个不定方程的一组解为 $x_{0},y_{0}$， 则这个不定方程的特殊解为</p>
<script type="math/tex; mode=display">\large{x_{special}=\frac{x_{0}\times c}{\gcd(a,b)}}</script><p>最小解为</p>
<script type="math/tex; mode=display">\large{\text{令 } t=\frac{b}{\gcd(a,b)}}</script><script type="math/tex; mode=display">\large{\text{则 }x_{min}=(x_{special} \bmod t+t) \bmod t}</script><hr>
<h1 id="中国剩余定理"><a href="#中国剩余定理" class="headerlink" title="中国剩余定理"></a>中国剩余定理</h1><h2 id="解决的问题-2"><a href="#解决的问题-2" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>已知关于 $x$ 的同余方程组</p>
<script type="math/tex; mode=display">\large\begin{cases}
x \equiv b_{1} \pmod{m_{1}}\\
x \equiv b_{2} \pmod{m_{2}}\\
\cdots\\
x \equiv b_{n} \pmod{m_{n}}\\
\end{cases}</script><p>并且</p>
<script type="math/tex; mode=display">\large \gcd(m_{1},m_{}2,\cdots,m_{n})=1</script><p>求整数解 $x$ </p>
<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><hr>
<h1 id="中国剩余定理（拓展）"><a href="#中国剩余定理（拓展）" class="headerlink" title="中国剩余定理（拓展）"></a>中国剩余定理（拓展）</h1><h2 id="解决的问题-3"><a href="#解决的问题-3" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>已知关于 $x$ 的同余方程组</p>
<script type="math/tex; mode=display">\large\begin{cases}
x \equiv b_{1} \pmod{m_{1}}\\
x \equiv b_{2} \pmod{m_{2}}\\
\cdots\\
x \equiv b_{n} \pmod{m_{n}}\\
\end{cases}</script><p>并且</p>
<script type="math/tex; mode=display">\large \gcd(m_{1},m_{}2,\cdots,m_{n})>1</script><p>求整数解 $x$ </p>
<h2 id="过程-1"><a href="#过程-1" class="headerlink" title="过程"></a>过程</h2><p>先看两个方程</p>
<script type="math/tex; mode=display">\large\begin{cases}
x \equiv b_{1} \pmod{m_{1}}\\
x \equiv b_{2} \pmod{m_{2}}\\
\end{cases}</script><p>尝试合并两个式子</p>
<p>转换成</p>
<script type="math/tex; mode=display">\large\begin{cases}
x=m_{1}\times x_{1}+b_{1}\\
x=m_{2}\times x_{2}+b_{2}\\
\end{cases}</script><p>则有</p>
<script type="math/tex; mode=display">\large m_{1}\times x_{1}+b_{1}=m_{2}\times x_{2}+b_{2}</script><p>由于 $x_{1},x_{2}$ 与符号无关，变形得到</p>
<script type="math/tex; mode=display">\large m_{1}\times x_{1}+m_{2}\times x_{2}=b_{2}-b_{1} (1)</script><p>此处放上欧几里得（拓展）的式子</p>
<script type="math/tex; mode=display">\large ax+by=c</script><p>由裴蜀定理得</p>
<script type="math/tex; mode=display">\large\begin{cases}
\text{此式有整数解，}\gcd(a,b)\mid c\\
\text{此式无整数解，}\gcd(a,b)\nmid c\\
\end{cases}</script><p>带入此式，得</p>
<script type="math/tex; mode=display">\large\begin{cases}
\text{此式有整数解，}\gcd(x_{1},x_{2})\mid (b_{2}-b_{1})\\
\text{此式无整数解，}\gcd(x_{1},x_{2})\nmid (b_{2}-b_{1})\\
\end{cases}</script><p>令</p>
<script type="math/tex; mode=display">\large g=\gcd(x_{1},x_{2})</script><script type="math/tex; mode=display">\large c=b_{2}-b_{1}</script><p>则有</p>
<script type="math/tex; mode=display">\large m_{1}\times x_{1}+m_{2}\times x_{2}=g (2)</script><p>用欧几里得（拓展）解 $(2)$ 得 </p>
<script type="math/tex; mode=display">\large x_{1}=k_{1}'</script><script type="math/tex; mode=display">\large x_{2}=k_{2}'</script><p>设 $(1)$ 的解为</p>
<script type="math/tex; mode=display">\large x_{1}=k_{1}</script><script type="math/tex; mode=display">\large x_{2}=k_{2}</script><p>则有</p>
<script type="math/tex; mode=display">\large k_{1}=\frac{k_{1}'\times c}{g}</script><script type="math/tex; mode=display">\large k_{2}=\frac{k_{2}'\times c}{g}</script><script type="math/tex; mode=display">\large x_{1}=k_{1}+ \frac{m_{2}}{g}\times l(3) \text{ }\text{ }\text{ }(\text{ }l\text{为参数 })</script><script type="math/tex; mode=display">\large x_{2}=k_{2}- \frac{m_{1}}{g}\times l</script><blockquote>
<p>由前面的「<a href="/Prove001/#欧几里得（拓展）">欧几里得（拓展）</a>」的最小值公式得</p>
<script type="math/tex; mode=display">\large{\text{令 } t=\frac{m_{2}}{\gcd(m_{1},m_{2})}}</script><script type="math/tex; mode=display">\large k_{1_{min}}=(k_{1}\bmod t+t)\bmod t</script></blockquote>
<p>将 $(3)$ 代入前面的 $x=m_{1}\times x_{1}+b_{1}$ 得</p>
<script type="math/tex; mode=display">\large x=m_{1}\times(k_{1}+ \frac{m_{2}}{g}\times l)+b_{1}</script><script type="math/tex; mode=display">\large x=m_{1}\times k_{1}+ m_{1}\times \frac{m_{2}}{g}\times l+b_{1}</script><script type="math/tex; mode=display">\large\text{令 } B=m_{1}\times k_{1}+b_{1}</script><script type="math/tex; mode=display">\large x=B+m_{1}\times \frac{m_{2}}{g}\times l</script><script type="math/tex; mode=display">\large\text{即 } B=x=B+\operatorname{lcm}(m_{1},m_{2})\times l</script><script type="math/tex; mode=display">\large\text{等价于 }x\equiv B \pmod {\operatorname{lcm}(m_{1},m_{2})}</script><p>合并完成！</p>
<p>继续合并……</p>
<p>合并到最后，方程组就变成了</p>
<script type="math/tex; mode=display">\large x\equiv x_{0} \pmod {\operatorname{lcm}(m_{1},m_{2},\cdots,m_{n})}</script><p>$x_{0}$ 即为方程组的一个整数解</p>
]]></content>
      <categories>
        <category>Prove</category>
      </categories>
  </entry>
  <entry>
    <title>Thematic001. 数论专题</title>
    <url>/Thematic001/</url>
    <content><![CDATA[<h1 id="Thematic001"><a href="#Thematic001" class="headerlink" title="Thematic001"></a>Thematic001</h1><blockquote>
<p>更多细节请到 「<a href="\Prove001">Prove001</a>」 中查看</p>
</blockquote>
<a id="more"></a>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul>
<li><a href="/Thematic001/#素数">素数</a></li>
<li><a href="/Thematic001/#欧拉函数">欧拉函数</a></li>
<li><a href="/Thematic001/#约数">约数</a></li>
<li><a href="/Thematic001/#乘法逆元">乘法逆元</a></li>
<li><a href="/Thematic001/#欧几里得（拓展）">欧几里得（拓展）</a></li>
<li><a href="/Thematic001/#中国剩余定理">中国剩余定理</a></li>
<li><a href="/Thematic001/#中国剩余定理（拓展）">中国剩余定理（拓展）</a></li>
<li><a href="/Thematic001/#BSGS">BSGS</a></li>
<li><a href="/Thematic001/#BSGS（拓展）">BSGS（拓展）</a></li>
</ul>
<hr>
<h1 id="素数"><a href="#素数" class="headerlink" title="素数"></a>素数</h1><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><ul>
<li><h3 id="LuoguP3383"><a href="#LuoguP3383" class="headerlink" title="LuoguP3383"></a><a href="https://www.luogu.com.cn/problem/P3383" target="_blank" rel="noopener">LuoguP3383</a></h3></li>
</ul>
<h2 id="暴力-（-O-n-sqrt-n-）"><a href="#暴力-（-O-n-sqrt-n-）" class="headerlink" title="暴力 （$O(n\sqrt{n})$）"></a>暴力 （$O(n\sqrt{n})$）</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> Prime[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Check</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (i&lt;<span class="number">2</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">2</span>||i==<span class="number">3</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            Prime[i]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=<span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(i));j++) <span class="keyword">if</span> (i%j==<span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            Prime[i]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        Prime[i]=!Prime[i];</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="埃式筛法-（-O-n-log-n-）"><a href="#埃式筛法-（-O-n-log-n-）" class="headerlink" title="埃式筛法 （$O(n\log n)$）"></a>埃式筛法 （$O(n\log n)$）</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAXN];</span><br><span class="line"><span class="keyword">int</span> size,prime[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FindPrime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    vis[<span class="number">0</span>]=vis[<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++) <span class="keyword">if</span> (!vis[i])</span><br><span class="line">      &#123;</span><br><span class="line">        prime[++size]=i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">2</span>;i*j&lt;=n;j++) vis[i*j]=<span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="欧拉筛法-（-O-n-）"><a href="#欧拉筛法-（-O-n-）" class="headerlink" title="欧拉筛法 （$O(n)$）"></a>欧拉筛法 （$O(n)$）</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAXN];</span><br><span class="line"><span class="keyword">int</span> size,prime[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FindPrime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    vis[<span class="number">0</span>]=vis[<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i]) prime[++size]=i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=size&amp;&amp;i*prime[j]&lt;=n;j++)</span><br><span class="line">          &#123;</span><br><span class="line">            vis[i*prime[j]]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>$\varphi$($x$) 表示求在 $1 $ 到 $ x$ 的整数中有多少个数与 $x$ 互质</p>
<h2 id="直接求-varphi-n-（-O-sqrt-n-）"><a href="#直接求-varphi-n-（-O-sqrt-n-）" class="headerlink" title="直接求 $\varphi$ ($n$) （$O(\sqrt{n})$）"></a>直接求 $\varphi$ ($n$) （$O(\sqrt{n})$）</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">FindPhi</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (n%i==<span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            ans-=ans/i;</span><br><span class="line">            <span class="keyword">while</span> (n%i==<span class="number">0</span>) n/=i;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">if</span> (n&gt;<span class="number">1</span>) ans-=ans/n;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="同时求-varphi-1-到-varphi-n-时与-1-到-n-的素数-（-O-n-）"><a href="#同时求-varphi-1-到-varphi-n-时与-1-到-n-的素数-（-O-n-）" class="headerlink" title="同时求 $\varphi$ ($1$) 到  $\varphi$ ($n$)时与 $1$ 到 $n$ 的素数 （$O(n)$）"></a>同时求 $\varphi$ ($1$) 到  $\varphi$ ($n$)时与 $1$ 到 $n$ 的素数 （$O(n)$）</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAXN];</span><br><span class="line"><span class="keyword">int</span> size,Prime[MAXN],Phi[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_Phi_and_Prime</span><span class="params">(<span class="keyword">int</span> n)</span>  </span></span><br><span class="line"><span class="function">  </span>&#123;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)  </span><br><span class="line">      &#123;  </span><br><span class="line">        <span class="keyword">if</span> (!vis[i])  </span><br><span class="line">          &#123;  </span><br><span class="line">            Prime[++size]=i;  </span><br><span class="line">            Phi[i]=i<span class="number">-1</span>;  </span><br><span class="line">          &#125;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=size&amp;&amp;i*Prime[j]&lt;n;j++)  </span><br><span class="line">          &#123;  </span><br><span class="line">            vis[i*Prime[j]]=<span class="literal">true</span>;  </span><br><span class="line">            <span class="keyword">if</span> (i%Prime[j]==<span class="number">0</span>)  </span><br><span class="line">              &#123;  </span><br><span class="line">                Phi[i*Prime[j]]=Phi[i]*Prime[j];  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">              &#125;  </span><br><span class="line">            <span class="keyword">else</span> Phi[i*Prime[j]]=Phi[i]*(Prime[j]<span class="number">-1</span>);</span><br><span class="line">          &#125;  </span><br><span class="line">      &#125;  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="约数"><a href="#约数" class="headerlink" title="约数"></a>约数</h1><h2 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h2><ul>
<li><h3 id="Loj10205（大数据）"><a href="#Loj10205（大数据）" class="headerlink" title="Loj10205（大数据）"></a><a href="https://loj.ac/problem/10205" target="_blank" rel="noopener">Loj10205（大数据）</a></h3></li>
<li><h3 id="LuoguP2152（超大数据）"><a href="#LuoguP2152（超大数据）" class="headerlink" title="LuoguP2152（超大数据）"></a><a href="https://www.luogu.com.cn/problem/P2152" target="_blank" rel="noopener">LuoguP2152（超大数据）</a></h3></li>
</ul>
<h2 id="辗转相除法"><a href="#辗转相除法" class="headerlink" title="辗转相除法"></a>辗转相除法</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GCD</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> GCD(b,a%b);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="二进制算法"><a href="#二进制算法" class="headerlink" title="二进制算法"></a>二进制算法</h2><ul>
<li><h3 id="低精"><a href="#低精" class="headerlink" title="低精"></a>低精</h3></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GCD</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">0</span>) <span class="keyword">return</span> y;</span><br><span class="line">    <span class="keyword">if</span> (y==<span class="number">0</span>) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;(x&amp;<span class="number">1</span>)==<span class="number">0</span>;i++) x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (j=<span class="number">0</span>;(y&amp;<span class="number">1</span>)==<span class="number">0</span>;j++) y&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (j&lt;i) i=j;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (x&lt;y) x^=y,y^=x,x^=y;</span><br><span class="line">        <span class="keyword">if</span> ((x-=y)==<span class="number">0</span>) <span class="keyword">return</span> y&lt;&lt;i;</span><br><span class="line">        <span class="keyword">while</span> ((x&amp;<span class="number">1</span>)==<span class="number">0</span>) x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><h3 id="高精"><a href="#高精" class="headerlink" title="高精"></a>高精</h3></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Data</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">2005</span>];</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="keyword">char</span> c[<span class="number">10005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">div2</span><span class="params">(Data &amp;x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.a[x.num]==<span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        x.a[x.num<span class="number">-1</span>]+=<span class="number">10000000</span>;</span><br><span class="line">        x.num--;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=x.num;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.a[i]&amp;<span class="number">1</span>) x.a[i<span class="number">-1</span>]+=<span class="number">10000000</span>;</span><br><span class="line">        x.a[i]&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">plus2</span><span class="params">(Data &amp;x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x.num;i++) x.a[i]&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;x.num;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.a[i]&gt;=<span class="number">10000000</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            x.a[i]-=<span class="number">10000000</span>;</span><br><span class="line">            x.a[i+<span class="number">1</span>]++;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">if</span> (x.a[x.num]&gt;=<span class="number">10000000</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        x.a[x.num]-=<span class="number">10000000</span>;</span><br><span class="line">        x.a[x.num+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">        x.num++;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sub</span><span class="params">(Data &amp;x,Data y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=y.num;i++) x.a[i]-=y.a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;x.num;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.a[i]&lt;<span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            x.a[i+<span class="number">1</span>]--;</span><br><span class="line">            x.a[i]+=<span class="number">10000000</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">if</span> (x.a[x.num]==<span class="number">0</span>) x.num--;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">comp</span><span class="params">(Data &amp;x,Data &amp;y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.num&gt;y.num) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (x.num&lt;y.num)</span><br><span class="line">      &#123;</span><br><span class="line">        swap(x.num,y.num);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=max(x.num,y.num);i++) swap(x.a[i],y.a[i]);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=x.num;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.a[i]&gt;y.a[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (x.a[i]&lt;y.a[i])</span><br><span class="line">          &#123;</span><br><span class="line">            swap(x.num,y.num);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=max(x.num,y.num);i++) swap(x.a[i],y.a[i]);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    Data n,m;</span><br><span class="line">    <span class="keyword">int</span> stop,x,y,t,cnt;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,c);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="built_in">strlen</span>(c)<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i-=<span class="number">7</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        n.num++;</span><br><span class="line">        n.a[n.num]=<span class="number">0</span>;</span><br><span class="line">        stop=max(i<span class="number">-6</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=i;j&gt;=stop;j--) n.a[n.num]+=(c[j]-<span class="string">'0'</span>)*<span class="built_in">pow</span>(<span class="number">10</span>,i-j);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,c);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="built_in">strlen</span>(c)<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i-=<span class="number">7</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        m.num++;</span><br><span class="line">        m.a[m.num]=<span class="number">0</span>;</span><br><span class="line">        stop=max(i<span class="number">-6</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=i;j&gt;=stop;j--) m.a[m.num]+=(c[j]-<span class="string">'0'</span>)*<span class="built_in">pow</span>(<span class="number">10</span>,i-j);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">for</span> (x=<span class="number">0</span>;!(n.a[<span class="number">1</span>]&amp;<span class="number">1</span>);x++) div2(n);</span><br><span class="line">    <span class="keyword">for</span> (y=<span class="number">0</span>;!(m.a[<span class="number">1</span>]&amp;<span class="number">1</span>);y++) div2(m);</span><br><span class="line">    <span class="keyword">if</span> (y&lt;x) x=y;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (comp(n,m)) </span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">while</span>(x--) plus2(n);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,n.a[n.num]);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=n.num<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">              &#123;</span><br><span class="line">                t=n.a[i];</span><br><span class="line">                cnt=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (t/<span class="number">10</span>) t/=<span class="number">10</span>,cnt++;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">7</span>-cnt;i++) <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>,n.a[i]);</span><br><span class="line">              &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        sub(n,m);</span><br><span class="line">        <span class="keyword">while</span> (!(n.a[<span class="number">1</span>]&amp;<span class="number">1</span>)) div2(n);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="乘法逆元"><a href="#乘法逆元" class="headerlink" title="乘法逆元"></a>乘法逆元</h1><h2 id="解决的问题"><a href="#解决的问题" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>求下面关于 $x$ 的同余方程的整数解</p>
<script type="math/tex; mode=display">\large ax\equiv 1 \pmod b</script><h2 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a>例题</h2><ul>
<li><h3 id="LuoguP3383-1"><a href="#LuoguP3383-1" class="headerlink" title="LuoguP3383"></a><a href="https://www.luogu.com.cn/problem/P3383" target="_blank" rel="noopener">LuoguP3383</a></h3></li>
</ul>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul>
<li><h3 id="欧几里得（拓展）"><a href="#欧几里得（拓展）" class="headerlink" title="欧几里得（拓展）"></a>欧几里得（拓展）</h3></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> &amp;x,<span class="keyword">long</span> <span class="keyword">long</span> &amp;y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        x=<span class="number">1</span>,y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> r=exgcd(b,a%b,x,y);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> t=x;</span><br><span class="line">    x=y;</span><br><span class="line">    y=t-(a/b)*y;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><h3 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h3></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">fastpow</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> p)</span> <span class="comment">//a^b%p</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">1</span>) <span class="keyword">return</span> a%p;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> half=fastpow(a,b/<span class="number">2</span>,p);</span><br><span class="line">    <span class="keyword">if</span> (b&amp;<span class="number">1</span>) <span class="keyword">return</span> ((half%p*half%p)%p*a)%p;</span><br><span class="line">    <span class="keyword">return</span> (half%p*half%p)%p;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x=fastpow(a,b<span class="number">-2</span>,b);</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><h3 id="线性算法求-1-到-n-模-b-的逆元-（-O-n-）"><a href="#线性算法求-1-到-n-模-b-的逆元-（-O-n-）" class="headerlink" title="线性算法求 $1$ 到 $n$ 模 $b$ 的逆元 （$O(n)$）"></a>线性算法求 $1$ 到 $n$ 模 $b$ 的逆元 （$O(n)$）</h3></li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">inv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    inv[i]=(p-p/i)*inv[p%i]%p;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="欧几里得（拓展）-1"><a href="#欧几里得（拓展）-1" class="headerlink" title="欧几里得（拓展）"></a>欧几里得（拓展）</h1><h2 id="解决的问题-1"><a href="#解决的问题-1" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>求下面关于 $x,y$ 的不定方程的整数解</p>
<script type="math/tex; mode=display">\large{ax+by=c}</script><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">exGCD</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> &amp;x,<span class="keyword">long</span> <span class="keyword">long</span> &amp;y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        x=<span class="number">1</span>,y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> r=exGCD(b,a%b,x,y);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> t=x;</span><br><span class="line">    x=y;</span><br><span class="line">    y=t-(a/b)*y;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="中国剩余定理"><a href="#中国剩余定理" class="headerlink" title="中国剩余定理"></a>中国剩余定理</h1><h2 id="解决的问题-2"><a href="#解决的问题-2" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>已知关于 $x$ 的同余方程组</p>
<script type="math/tex; mode=display">\large\begin{cases}
x\equiv b_{1} \pmod m_{1}\\
x\equiv b_{2} \pmod m_{2}\\
\cdots\\
x\equiv b_{k} \pmod m_{k}\\
\end{cases}</script><p>并且</p>
<script type="math/tex; mode=display">\large \gcd(m_{1},m_{}2,\cdots,m_{k})=1</script><p>求整数解 $x$ </p>
<h2 id="例题-3"><a href="#例题-3" class="headerlink" title="例题"></a>例题</h2><ul>
<li><h3 id="LuoguP1495"><a href="#LuoguP1495" class="headerlink" title="LuoguP1495"></a><a href="https://www.luogu.com.cn/problem/P1495" target="_blank" rel="noopener">LuoguP1495</a></h3></li>
</ul>
<h2 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">CRT</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> M=<span class="number">1</span>,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) M*=m[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> tM=M/m[i];</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> x,y;</span><br><span class="line">        exgcd(tM,m[i],x,y);</span><br><span class="line">        ans=(ans+tM*x*a[i])%M;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> (ans+M)%M;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="中国剩余定理（拓展）"><a href="#中国剩余定理（拓展）" class="headerlink" title="中国剩余定理（拓展）"></a>中国剩余定理（拓展）</h1><h2 id="解决的问题-3"><a href="#解决的问题-3" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>已知关于 $x$ 的同余方程组</p>
<script type="math/tex; mode=display">\large\begin{cases}
x\equiv b_{1} \pmod m_{1}\\
x\equiv b_{2} \pmod m_{2}\\
\cdots\\
x\equiv b_{k} \pmod m_{k}\\
\end{cases}</script><p>并且</p>
<script type="math/tex; mode=display">\large \gcd(m_{1},m_{}2,\cdots,m_{n})>1</script><p>求整数解 $x$ </p>
<h2 id="例题-4"><a href="#例题-4" class="headerlink" title="例题"></a>例题</h2><ul>
<li><h3 id="LuoguP4777"><a href="#LuoguP4777" class="headerlink" title="LuoguP4777"></a><a href="https://www.luogu.com.cn/problem/P4777" target="_blank" rel="noopener">LuoguP4777</a></h3></li>
</ul>
<h2 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">exCRT</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> M=m[<span class="number">1</span>],ans=b[<span class="number">1</span>],x,y,g,t,k1;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        g=exgcd(M,m[i],x,y);</span><br><span class="line">        <span class="keyword">if</span> ((b[i]-ans)%g) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        k1=x*(b[i]-ans)/g;</span><br><span class="line">        t=m[i]/g;</span><br><span class="line">        x=(k1%t+t)%t;</span><br><span class="line">        ans=M*x+ans;</span><br><span class="line">        M=M/g*m[i];</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> (ans%M+M)%M;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="BSGS"><a href="#BSGS" class="headerlink" title="BSGS"></a>BSGS</h1><h2 id="解决的问题-4"><a href="#解决的问题-4" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>已知关于 $x$ 的方程</p>
<script type="math/tex; mode=display">\large a^{x}\equiv b\text{ }(\text{ }mod\text{ }p\text{ })</script><p>并且</p>
<script type="math/tex; mode=display">\large gcd(a,p)=1</script><p>已知 $a,b,p$，求整数 $x$</p>
<h2 id="例题-5"><a href="#例题-5" class="headerlink" title="例题"></a>例题</h2><ul>
<li><h3 id="LuoguP3846"><a href="#LuoguP3846" class="headerlink" title="LuoguP3846"></a><a href="https://www.luogu.com.cn/problem/P3846" target="_blank" rel="noopener">LuoguP3846</a></h3></li>
<li><h3 id="LuoguP2485"><a href="#LuoguP2485" class="headerlink" title="LuoguP2485"></a><a href="https://www.luogu.com.cn/problem/P2485" target="_blank" rel="noopener">LuoguP2485</a></h3></li>
</ul>
<h2 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">BSGS</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    a%=p,b%=p;</span><br><span class="line">    <span class="keyword">if</span> (a==<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (b==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="built_in">map</span> &lt;<span class="keyword">long</span> <span class="keyword">long</span>,<span class="keyword">long</span> <span class="keyword">long</span>&gt; M;</span><br><span class="line">    M.clear();</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> temp=b,m=<span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(p));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++,temp=temp*a%p) M[temp]=i;</span><br><span class="line">    temp=a=fastpow(a,m,p);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++,temp=temp*a%p) <span class="keyword">if</span> (M.count(temp)) <span class="keyword">return</span> i*m-M[temp];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="BSGS（拓展）"><a href="#BSGS（拓展）" class="headerlink" title="BSGS（拓展）"></a>BSGS（拓展）</h1><h2 id="解决的问题-5"><a href="#解决的问题-5" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>已知关于 $x$ 的方程</p>
<script type="math/tex; mode=display">\large a^{x}\equiv b\text{ }(\text{ }mod\text{ }p\text{ })</script><p>并且</p>
<script type="math/tex; mode=display">\large gcd(a,p)>1</script><p>已知 $a,b,p$，求整数 $x$</p>
<h2 id="例题-6"><a href="#例题-6" class="headerlink" title="例题"></a>例题</h2><ul>
<li><h3 id="LuoguP4195"><a href="#LuoguP4195" class="headerlink" title="LuoguP4195"></a><a href="https://www.luogu.com.cn/problem/P4195" target="_blank" rel="noopener">LuoguP4195</a></h3></li>
</ul>
<h2 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">inv</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x,y,ans;</span><br><span class="line">    exgcd(a,p,x,y);</span><br><span class="line">    <span class="keyword">return</span> (x%p+p)%p;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">exBSGS</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">1</span>||p==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x,y,g,k=<span class="number">0</span>,na=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (g=exgcd(a,p,x,y))</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (g==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (b%g) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        k++;</span><br><span class="line">        b/=g;</span><br><span class="line">        p/=g;</span><br><span class="line">        na=na*(a/g)%p;</span><br><span class="line">        <span class="keyword">if</span> (na==b) <span class="keyword">return</span> k;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=BSGS(a,b*inv(na,p)%p,p);</span><br><span class="line">    <span class="keyword">if</span> (ans==<span class="number">-1</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> ans+k;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Thematic</category>
      </categories>
  </entry>
  <entry>
    <title>Template012. Tarjan模板</title>
    <url>/Template012/</url>
    <content><![CDATA[<h1 id="Template013"><a href="#Template013" class="headerlink" title="Template013"></a>Template013</h1><a id="more"></a>
<h1 id="强连通分量-amp-缩点"><a href="#强连通分量-amp-缩点" class="headerlink" title="强连通分量 &amp; 缩点"></a>强连通分量 &amp; 缩点</h1><h2 id="例题：LuoguP2341"><a href="#例题：LuoguP2341" class="headerlink" title="例题：LuoguP2341"></a><a href="https://www.luogu.com.cn/problem/P2341" target="_blank" rel="noopener">例题：LuoguP2341</a></h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Tarjan</span></span><br><span class="line"><span class="built_in">stack</span> &lt;<span class="keyword">int</span>&gt; S;</span><br><span class="line"><span class="keyword">bool</span> inst[MAXN];</span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; V[MAXN];</span><br><span class="line"><span class="keyword">int</span> n,m,col,cnt,dfn[MAXN],low[MAXN],color[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="comment">//Extra</span></span><br><span class="line"><span class="keyword">int</span> colt[MAXN];</span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; V2[MAXN];</span><br></pre></td></tr></table></figure>
<h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inti</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	cnt=col=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">memset</span>(dfn,<span class="number">0</span>,<span class="keyword">sizeof</span>(dfn));</span><br><span class="line">  	<span class="built_in">memset</span>(low,<span class="number">0</span>,<span class="keyword">sizeof</span>(low));</span><br><span class="line">  	<span class="built_in">memset</span>(colt,<span class="number">0</span>,<span class="keyword">sizeof</span>(colt));</span><br><span class="line">	<span class="built_in">memset</span>(color,<span class="number">0</span>,<span class="keyword">sizeof</span>(color));</span><br><span class="line">  	<span class="built_in">memset</span>(inst,<span class="literal">false</span>,<span class="keyword">sizeof</span>(inst));</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++) V[i].clear();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++) V2[i].clear();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="Tarjan"><a href="#Tarjan" class="headerlink" title="Tarjan"></a>Tarjan</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> now)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	dfn[now]=low[now]=++cnt;</span><br><span class="line">  	inst[now]=<span class="literal">true</span>;</span><br><span class="line">  	S.push(now);</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;V[now].size();i++)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	<span class="keyword">int</span> next=V[now][i];</span><br><span class="line">  	  	<span class="keyword">if</span> (!dfn[next])</span><br><span class="line">  	  	  &#123;</span><br><span class="line">  	  	  	Tarjan(next);</span><br><span class="line">  	  	  	low[now]=min(low[now],low[next]);</span><br><span class="line">		  &#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (inst[next]) low[now]=min(low[now],dfn[next]);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">if</span> (dfn[now]==low[now])</span><br><span class="line">	  &#123;</span><br><span class="line">	  	col++;</span><br><span class="line">	  	<span class="keyword">int</span> s;</span><br><span class="line">	  	<span class="keyword">do</span></span><br><span class="line">	  	  &#123;</span><br><span class="line">	  	  	s=S.top();</span><br><span class="line">	  	  	S.pop();</span><br><span class="line">	  	  	inst[s]=<span class="literal">false</span>;</span><br><span class="line">	  	  	color[s]=col;</span><br><span class="line">            </span><br><span class="line">	  	  	<span class="comment">// Extra：记录每个强连通分量内的节点数 </span></span><br><span class="line">	  	  	<span class="comment">// colt[col]++;</span></span><br><span class="line">            </span><br><span class="line">		  &#125; <span class="keyword">while</span> (s!=now);</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="Extra：重新建图"><a href="#Extra：重新建图" class="headerlink" title="Extra：重新建图"></a>Extra：重新建图</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReGraph</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">int</span> acolor;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	  &#123;</span><br><span class="line">        acolor=color[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;V[now].size();j++) </span><br><span class="line">          &#123;</span><br><span class="line">          	bcolor=color[V[i][j]];</span><br><span class="line">          	<span class="keyword">if</span> (acolor!=bcolor) V2[acolor].push_back(bcolor);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	inti();</span><br><span class="line">	<span class="comment">/* Input */</span></span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span> (!dfn[i]) Tarjan(i); <span class="comment">//Tarjan图不一定联通 </span></span><br><span class="line">  	<span class="comment">// ReGraph();</span></span><br><span class="line">  	<span class="comment">/* Output */</span></span><br><span class="line">  	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h3 id="例题代码"><a href="#例题代码" class="headerlink" title="例题代码"></a>例题代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">10005</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">stack</span> &lt;<span class="keyword">int</span>&gt; S;</span><br><span class="line"><span class="keyword">bool</span> inst[MAXN];</span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; V[MAXN];</span><br><span class="line"><span class="keyword">int</span> n,m,col,cnt,dfn[MAXN],low[MAXN],color[MAXN],colt[MAXN],du[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inti</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    cnt=col=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(du,<span class="number">0</span>,<span class="keyword">sizeof</span>(du));</span><br><span class="line">    <span class="built_in">memset</span>(dfn,<span class="number">0</span>,<span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    <span class="built_in">memset</span>(low,<span class="number">0</span>,<span class="keyword">sizeof</span>(low));</span><br><span class="line">    <span class="built_in">memset</span>(colt,<span class="number">0</span>,<span class="keyword">sizeof</span>(colt));</span><br><span class="line">    <span class="built_in">memset</span>(color,<span class="number">0</span>,<span class="keyword">sizeof</span>(color));</span><br><span class="line">    <span class="built_in">memset</span>(inst,<span class="literal">false</span>,<span class="keyword">sizeof</span>(inst));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++) V[i].clear();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> now)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	dfn[now]=low[now]=++cnt;</span><br><span class="line">  	inst[now]=<span class="literal">true</span>;</span><br><span class="line">  	S.push(now);</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;V[now].size();i++)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	<span class="keyword">int</span> next=V[now][i];</span><br><span class="line">  	  	<span class="keyword">if</span> (!dfn[next])</span><br><span class="line">  	  	  &#123;</span><br><span class="line">  	  	  	Tarjan(next);</span><br><span class="line">  	  	  	low[now]=min(low[now],low[next]);</span><br><span class="line">		  &#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (inst[next]) low[now]=min(low[now],dfn[next]);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">if</span> (dfn[now]==low[now])</span><br><span class="line">	  &#123;</span><br><span class="line">	  	col++;</span><br><span class="line">	  	<span class="keyword">int</span> s;</span><br><span class="line">	  	<span class="keyword">do</span></span><br><span class="line">	  	  &#123;</span><br><span class="line">	  	  	s=S.top();</span><br><span class="line">	  	  	S.pop();</span><br><span class="line">	  	  	inst[s]=<span class="literal">false</span>;</span><br><span class="line">	  	  	color[s]=col;</span><br><span class="line">	  	  	colt[col]++;</span><br><span class="line">		  &#125; <span class="keyword">while</span> (s!=now);</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReGraph</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	  <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;V[i].size();j++)</span><br><span class="line">	    <span class="keyword">if</span> (color[i]!=color[V[i][j]])</span><br><span class="line">		  du[color[i]]++;</span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">int</span> x,y,ans=<span class="number">0</span>;</span><br><span class="line">	inti();</span><br><span class="line">  	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">  	<span class="keyword">while</span> (m--)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	<span class="keyword">int</span> x,y;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">  	  	V[x].push_back(y);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span> (!dfn[i]) Tarjan(i);</span><br><span class="line">	ReGraph();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=col;i++) <span class="keyword">if</span> (du[i]==<span class="number">0</span>)</span><br><span class="line">	  &#123;</span><br><span class="line">  	  	<span class="keyword">if</span> (ans) <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"0"</span>)&amp;<span class="number">0</span>;</span><br><span class="line">  		ans=colt[i];</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans)&amp;<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="割点"><a href="#割点" class="headerlink" title="割点"></a>割点</h1><h2 id="例题：LuoguP3388"><a href="#例题：LuoguP3388" class="headerlink" title="例题：LuoguP3388"></a><a href="https://www.luogu.com.cn/problem/P3388" target="_blank" rel="noopener">例题：LuoguP3388</a></h2><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><h3 id="Tarjan-1"><a href="#Tarjan-1" class="headerlink" title="Tarjan"></a>Tarjan</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="割边"><a href="#割边" class="headerlink" title="割边"></a>割边</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    dfn[now]=low[now]=++cnt;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;V[now].size();i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">int</span> next=V[now][i];</span><br><span class="line">        <span class="keyword">if</span> (!dfn[next])</span><br><span class="line">          &#123;</span><br><span class="line">            work(next,now);</span><br><span class="line">            low[now]=min(low[now],low[next]);</span><br><span class="line">            <span class="keyword">if</span> (low[next]&gt;dfn[now]) <span class="comment">/*SaveRoad*/</span></span><br><span class="line">          &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (next!=last&amp;&amp;dfn[next]&lt;dfn[now])</span><br><span class="line">          low[now]=min(low[now],dfn[next]);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Template</category>
      </categories>
  </entry>
  <entry>
    <title>Template004. 快速幂模板</title>
    <url>/Template004/</url>
    <content><![CDATA[<h1 id="Template004"><a href="#Template004" class="headerlink" title="Template004"></a>Template004</h1><a id="more"></a>
<h1 id="例题：LuoguP1226"><a href="#例题：LuoguP1226" class="headerlink" title="例题：LuoguP1226"></a><a href="https://www.luogu.org/problem/P1226" target="_blank" rel="noopener">例题：LuoguP1226</a></h1><h1 id="递归版"><a href="#递归版" class="headerlink" title="递归版"></a>递归版</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> b,p,k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">pow</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> base,<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> power)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (power==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>%k;</span><br><span class="line">	<span class="keyword">if</span> (power==<span class="number">1</span>) <span class="keyword">return</span> base%k;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> l=<span class="built_in">pow</span>(base,power/<span class="number">2</span>);</span><br><span class="line">	<span class="keyword">if</span> (power%<span class="number">2</span>==<span class="number">0</span>) <span class="keyword">return</span> (l*l)%k;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> (((l*l)%k)*base)%k;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;b,&amp;p,&amp;k);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d"</span>,<span class="built_in">pow</span>(b,p));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="循环版"><a href="#循环版" class="headerlink" title="循环版"></a>循环版</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> b,p,k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">power</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> base,<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> power)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (power&gt;<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (power&amp;<span class="number">1</span>) res=(res*base)%k;</span><br><span class="line">        base=(base*base)%k;</span><br><span class="line">        power&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&amp;b,&amp;p,&amp;k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,power(b,p));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Template</category>
      </categories>
  </entry>
  <entry>
    <title>Template011. 素数模板</title>
    <url>/Template011/</url>
    <content><![CDATA[<h1 id="Template011"><a href="#Template011" class="headerlink" title="Template011"></a>Template011</h1><a id="more"></a>
<h1 id="例题：LuoguP3383"><a href="#例题：LuoguP3383" class="headerlink" title="例题：LuoguP3383"></a><a href="https://www.luogu.org/problem/P3383" target="_blank" rel="noopener">例题：LuoguP3383</a></h1><h1 id="纯暴力"><a href="#纯暴力" class="headerlink" title="纯暴力"></a>纯暴力</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Check</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i&lt;<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (i==<span class="number">2</span>||i==<span class="number">3</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++) <span class="keyword">if</span> (n%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="暴力优化"><a href="#暴力优化" class="headerlink" title="暴力优化"></a>暴力优化</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Check</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i&lt;<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (i==<span class="number">2</span>||i==<span class="number">3</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(n));i++) <span class="keyword">if</span> (n%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="埃式筛法"><a href="#埃式筛法" class="headerlink" title="埃式筛法"></a>埃式筛法</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAXN];</span><br><span class="line"><span class="keyword">int</span> size,prime[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FindPrime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	vis[<span class="number">0</span>]=vis[<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++) <span class="keyword">if</span> (!vis[i])</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	prime[++size]=i;</span><br><span class="line">  	  	<span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">2</span>;i*j&lt;=n;j++) vis[i*j]=<span class="literal">true</span>;</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="欧拉筛法"><a href="#欧拉筛法" class="headerlink" title="欧拉筛法"></a>欧拉筛法</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAXN];</span><br><span class="line"><span class="keyword">int</span> size,prime[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FindPrime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    vis[<span class="number">0</span>]=vis[<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i]) prime[++size]=i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=size&amp;&amp;i*prime[j]&lt;=n;j++)</span><br><span class="line">          &#123;</span><br><span class="line">            vis[i*prime[j]]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Template</category>
      </categories>
  </entry>
  <entry>
    <title>Template010. 并查集模板</title>
    <url>/Template010/</url>
    <content><![CDATA[<h1 id="Template010"><a href="#Template010" class="headerlink" title="Template010"></a>Template010</h1><a id="more"></a>
<h1 id="例题：LuoguP3367"><a href="#例题：LuoguP3367" class="headerlink" title="例题：LuoguP3367"></a><a href="https://www.luogu.org/problem/P3367" target="_blank" rel="noopener">例题：LuoguP3367</a></h1><h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inti</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i]=i;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="寻找父亲"><a href="#寻找父亲" class="headerlink" title="寻找父亲"></a>寻找父亲</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==f[x]) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> f[x]=find(f[x]);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fx=find(x),fy=find(y);</span><br><span class="line">    f[fy]=fx;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="判断父亲是否相同"><a href="#判断父亲是否相同" class="headerlink" title="判断父亲是否相同"></a>判断父亲是否相同</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fx=find(x),fy=find(y);</span><br><span class="line">    <span class="keyword">return</span> fx==fy;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="例题代码"><a href="#例题代码" class="headerlink" title="例题代码"></a>例题代码</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,T,oper,a,b,f[<span class="number">10005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inti</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inti</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i]=i;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==f[x]) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> f[x]=find(f[x]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fx=find(x),fy=find(y);</span><br><span class="line">    f[fy]=fx;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fx=find(x),fy=find(y);</span><br><span class="line">    <span class="keyword">return</span> fx==fy;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;T);</span><br><span class="line">    inti(n);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;oper,&amp;a,&amp;b);</span><br><span class="line">        <span class="keyword">if</span> (oper==<span class="number">1</span>) merge(a,b);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">if</span> (check(a,b)) <span class="built_in">printf</span>(<span class="string">"Y\n"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"N\n"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Template</category>
      </categories>
  </entry>
  <entry>
    <title>Template006. 最近公共祖先（LCA）模板</title>
    <url>/Template006/</url>
    <content><![CDATA[<h1 id="Template006"><a href="#Template006" class="headerlink" title="Template006"></a>Template006</h1><a id="more"></a>
<h1 id="例题：LuoguP3379"><a href="#例题：LuoguP3379" class="headerlink" title="例题：LuoguP3379"></a><a href="https://www.luogu.org/problem/P3379" target="_blank" rel="noopener">例题：LuoguP3379</a></h1><h1 id="倍增"><a href="#倍增" class="headerlink" title="倍增"></a>倍增</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">	<span class="keyword">int</span> t,next;</span><br><span class="line">  &#125;Edge[<span class="number">2</span>*<span class="number">500001</span>];</span><br><span class="line"><span class="keyword">int</span> depth[<span class="number">500001</span>],f[<span class="number">500001</span>][<span class="number">22</span>],log1[<span class="number">500001</span>],head[<span class="number">500001</span>];</span><br><span class="line"><span class="keyword">int</span> tot,n,m,s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	Edge[++tot].t=y;</span><br><span class="line">	Edge[tot].next=head[x];</span><br><span class="line">	head[x]=tot;</span><br><span class="line">	Edge[++tot].t=x;</span><br><span class="line">	Edge[tot].next=head[y];</span><br><span class="line">	head[y]=tot;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	depth[now]=depth[last]+<span class="number">1</span>;</span><br><span class="line">  	f[now][<span class="number">0</span>]=last;</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;i)&lt;=depth[now];i++) f[now][i]=f[f[now][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=head[now]; i; i=Edge[i].next) <span class="keyword">if</span> (Edge[i].t!=last) dfs(Edge[i].t,now);</span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">if</span> (depth[x]&lt;depth[y]) swap(x,y);</span><br><span class="line">  	<span class="keyword">while</span> (depth[x]&gt;depth[y]) x=f[x][log1[depth[x]-depth[y]]<span class="number">-1</span>];</span><br><span class="line">  	<span class="keyword">if</span> (x==y) <span class="keyword">return</span> x;</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">int</span> i=log1[depth[x]]<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) <span class="keyword">if</span> (f[x][i]!=f[y][i]) x=f[x][i], y=f[y][i];</span><br><span class="line">	<span class="keyword">return</span> f[x][<span class="number">0</span>];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">int</span> x,y;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;s);</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">  	  	addedge(x,y);</span><br><span class="line">	  &#125;</span><br><span class="line">	dfs(s,<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) log1[i]=log1[i<span class="number">-1</span>]+(<span class="number">1</span>&lt;&lt;log1[i<span class="number">-1</span>]==i);</span><br><span class="line">  	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">  	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,LCA(x,y));</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Template</category>
      </categories>
  </entry>
  <entry>
    <title>Template009. 树状数组模板</title>
    <url>/Template009/</url>
    <content><![CDATA[<h1 id="Template009"><a href="#Template009" class="headerlink" title="Template009"></a>Template009</h1><a id="more"></a>
<h1 id="一维树状数组"><a href="#一维树状数组" class="headerlink" title="一维树状数组"></a>一维树状数组</h1><h2 id="单点修改，区间查询"><a href="#单点修改，区间查询" class="headerlink" title="单点修改，区间查询"></a>单点修改，区间查询</h2><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><h4 id="例题1：LuoguP3374"><a href="#例题1：LuoguP3374" class="headerlink" title="例题1：LuoguP3374"></a><a href="https://www.luogu.org/problem/P3374" target="_blank" rel="noopener">例题1：LuoguP3374</a></h4><h4 id="例题2：LOJ-130"><a href="#例题2：LOJ-130" class="headerlink" title="例题2：LOJ#130"></a><a href="https://loj.ac/problem/130" target="_blank" rel="noopener">例题2：LOJ#130</a></h4><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> oper,a,b,k,n,m,tree[<span class="number">2000005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">return</span> num&amp;-num;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">while</span> (num&lt;=n)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	tree[num]+=x;</span><br><span class="line">  	  	num+=lowbit(num);</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">  	<span class="keyword">while</span> (num!=<span class="number">0</span>)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	ans+=tree[num];</span><br><span class="line">  	  	num-=lowbit(num);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">  	  	add(i,k);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">while</span> (m--)</span><br><span class="line">	  &#123;</span><br><span class="line">	  	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;oper,&amp;a,&amp;b);</span><br><span class="line">	  	<span class="keyword">if</span> (oper==<span class="number">1</span>) add(a,b);</span><br><span class="line">	  	<span class="keyword">else</span> <span class="keyword">if</span> (oper==<span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum(b)-sum(a<span class="number">-1</span>));</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="区间修改，单点查询"><a href="#区间修改，单点查询" class="headerlink" title="区间修改，单点查询"></a>区间修改，单点查询</h2><h3 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h3><h4 id="例题1：LuoguP3368"><a href="#例题1：LuoguP3368" class="headerlink" title="例题1：LuoguP3368"></a><a href="https://www.luogu.org/problem/P3368" target="_blank" rel="noopener">例题1：LuoguP3368</a></h4><h4 id="例题2：LOJ-131"><a href="#例题2：LOJ-131" class="headerlink" title="例题2：LOJ#131"></a><a href="https://loj.ac/problem/131" target="_blank" rel="noopener">例题2：LOJ#131</a></h4><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> oper,a,b,k,last,n,m,tree[<span class="number">1000005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> num)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">return</span> num&amp;-num;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> num,<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">while</span> (num&lt;=n)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	tree[num]+=x;</span><br><span class="line">  	  	num+=lowbit(num);</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">sum</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> num)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">  	<span class="keyword">while</span> (num!=<span class="number">0</span>)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	ans+=tree[num];</span><br><span class="line">  	  	num-=lowbit(num);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">  	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">  	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	<span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">  	  	add(i,a-last);</span><br><span class="line">  	  	last=a;</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">while</span> (m--)</span><br><span class="line">	  &#123;</span><br><span class="line">	  	<span class="built_in">cin</span>&gt;&gt;oper;</span><br><span class="line">	  	<span class="keyword">if</span> (oper==<span class="number">1</span>)</span><br><span class="line">	  	  &#123;</span><br><span class="line">	  	  	<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;k;</span><br><span class="line">	  	  	add(a,k);</span><br><span class="line">	  	  	add(b+<span class="number">1</span>,-k);</span><br><span class="line">		  &#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		  &#123;</span><br><span class="line">		  	<span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">		  	<span class="built_in">cout</span>&lt;&lt;sum(a)&lt;&lt;<span class="string">"\n"</span>;</span><br><span class="line">		  &#125;</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="离散化"><a href="#离散化" class="headerlink" title="离散化"></a>离散化</h2><h3 id="例题：LuoguP1908"><a href="#例题：LuoguP1908" class="headerlink" title="例题：LuoguP1908"></a><a href="https://www.luogu.org/problem/P1908" target="_blank" rel="noopener">例题：LuoguP1908</a></h3><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Data</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">  	<span class="keyword">int</span> c,id;</span><br><span class="line">  &#125;a[<span class="number">500005</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans;</span><br><span class="line"><span class="keyword">int</span> n,tree[<span class="number">500005</span>],rank[<span class="number">500005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Data x,Data y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">if</span> (x.c!=y.c) <span class="keyword">return</span> x.c&lt;y.c;</span><br><span class="line">  	<span class="keyword">return</span> x.id&lt;y.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> num&amp;-num;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(num&gt;<span class="number">0</span>)</span><br><span class="line">	  &#123;</span><br><span class="line">		s+=tree[num];</span><br><span class="line">		num-=lowbit(num);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">return</span> s;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(num&lt;=n)</span><br><span class="line">	  &#123;</span><br><span class="line">		tree[num]+=x;</span><br><span class="line">		num+=lowbit(num);</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i].c),a[i].id=i;</span><br><span class="line">	sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmp);</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) rank[a[i].id]=i;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	  &#123;</span><br><span class="line">		add(rank[i],<span class="number">1</span>);</span><br><span class="line">		ans+=i-sum(rank[i]);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="二维树状数组"><a href="#二维树状数组" class="headerlink" title="二维树状数组"></a>二维树状数组</h1><h2 id="单点修改，区间查询-1"><a href="#单点修改，区间查询-1" class="headerlink" title="单点修改，区间查询"></a>单点修改，区间查询</h2><h3 id="例题：LOJ-133"><a href="#例题：LOJ-133" class="headerlink" title="例题：LOJ#133"></a><a href="https://loj.ac/problem/133" target="_blank" rel="noopener">例题：LOJ#133</a></h3><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> oper,x,y,k,xa,xb,ya,yb,n,m,tree[<span class="number">5005</span>][<span class="number">5005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">return</span> p&amp;-p;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> num1,<span class="keyword">long</span> <span class="keyword">long</span> num2,<span class="keyword">long</span> <span class="keyword">long</span> k)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">long</span> i=num1;i&lt;=n;i+=lowbit(i))</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">long</span> j=num2;j&lt;=m;j+=lowbit(j))</span><br><span class="line">                 tree[i][j]+=k;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">sum</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> num1,<span class="keyword">long</span> <span class="keyword">long</span> num2)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">long</span> i=num1;i&gt;<span class="number">0</span>;i-=lowbit(i))</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">long</span> j=num2;j&gt;<span class="number">0</span>;j-=lowbit(j))</span><br><span class="line">                 ans+=tree[i][j];</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">  	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">  	<span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">  	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt;oper)</span><br><span class="line">	  &#123;</span><br><span class="line">	  	<span class="keyword">if</span> (oper==<span class="number">1</span>)</span><br><span class="line">	  	  &#123;</span><br><span class="line">	  	  	<span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;k;</span><br><span class="line">	  	  	add(x,y,k);</span><br><span class="line">		  &#125;</span><br><span class="line">	  	<span class="keyword">else</span> <span class="keyword">if</span> (oper==<span class="number">2</span>)</span><br><span class="line">	  	  &#123;</span><br><span class="line">	  	  	<span class="built_in">cin</span>&gt;&gt;xa&gt;&gt;ya&gt;&gt;xb&gt;&gt;yb;</span><br><span class="line">                        <span class="keyword">int</span> ans=sum(xb,yb)+sum(xa<span class="number">-1</span>,ya<span class="number">-1</span>)-sum(xa<span class="number">-1</span>,yb)-sum(xb,ya<span class="number">-1</span>);</span><br><span class="line">	  	  	<span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="string">"\n"</span>;</span><br><span class="line">		  &#125;</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Template</category>
      </categories>
  </entry>
  <entry>
    <title>Template003. 快读模板</title>
    <url>/Template003/</url>
    <content><![CDATA[<h1 id="Template003"><a href="#Template003" class="headerlink" title="Template003"></a>Template003</h1><a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> nm=<span class="number">0</span>,fh=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> cw=getchar();</span><br><span class="line">	<span class="keyword">for</span>(; !<span class="built_in">isdigit</span>(cw); cw=getchar()) <span class="keyword">if</span>(cw==<span class="string">'-'</span>) fh=-fh;</span><br><span class="line">	<span class="keyword">for</span>(; <span class="built_in">isdigit</span>(cw); cw=getchar()) nm=nm*<span class="number">10</span>+(cw-<span class="string">'0'</span>);</span><br><span class="line">	<span class="keyword">return</span> nm*fh;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Template</category>
      </categories>
  </entry>
  <entry>
    <title>Template005. 最小生成树模板</title>
    <url>/Template005/</url>
    <content><![CDATA[<h1 id="Template005"><a href="#Template005" class="headerlink" title="Template005"></a>Template005</h1><a id="more"></a>
<h1 id="例题：LuoguP3366"><a href="#例题：LuoguP3366" class="headerlink" title="例题：LuoguP3366"></a><a href="https://www.luogu.org/problem/P3366" target="_blank" rel="noopener">例题：LuoguP3366</a></h1><h1 id="Kruskal"><a href="#Kruskal" class="headerlink" title="Kruskal"></a>Kruskal</h1><h2 id="数组版"><a href="#数组版" class="headerlink" title="数组版"></a>数组版</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">    <span class="keyword">int</span> start,to,cost;</span><br><span class="line">  &#125;edge[<span class="number">200005</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">5005</span>],n,m,ans,fx,fy,cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Edge a,Edge b)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.cost&lt;b.cost;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==f[x]) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> f[x]=find(f[x]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Kruskal</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	sort(edge+<span class="number">1</span>,edge+<span class="number">1</span>+m,cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        fx=find(edge[i].start), fy=find(edge[i].to);</span><br><span class="line">        <span class="keyword">if</span> (fx==fy) <span class="keyword">continue</span>;</span><br><span class="line">        ans+=edge[i].cost;</span><br><span class="line">        f[fy]=fx;</span><br><span class="line">        <span class="keyword">if</span> (++cnt==n<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i]=i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;edge[i].start,&amp;edge[i].to,&amp;edge[i].cost);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,Kruskal());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="优先队列版"><a href="#优先队列版" class="headerlink" title="优先队列版"></a>优先队列版</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">    <span class="keyword">int</span> start,to,cost;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Edge &amp;a) <span class="keyword">const</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">return</span> a.cost&lt;cost;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">5005</span>],n,m,start,to,cost,fx,fy,fz;</span><br><span class="line">priority_queue &lt;Edge&gt; Q;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==f[x]) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> f[x]=find(f[x]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Kruskal</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">int</span> cnt=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (!Q.empty())</span><br><span class="line">      &#123;</span><br><span class="line">        fx=find(Q.top().start), fy=find(Q.top().to);</span><br><span class="line">        fz=Q.top().cost;</span><br><span class="line">        Q.pop();</span><br><span class="line">        <span class="keyword">if</span> (fx==fy) <span class="keyword">continue</span>;</span><br><span class="line">        ans+=fz;</span><br><span class="line">        f[fy]=fx;</span><br><span class="line">        <span class="keyword">if</span> (++cnt==n<span class="number">-1</span>) <span class="keyword">return</span> ans;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i]=i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;start,&amp;to,&amp;cost);</span><br><span class="line">        Q.push((Edge)&#123;start,to,cost&#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,Kruskal());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="Prim"><a href="#Prim" class="headerlink" title="Prim"></a>Prim</h1><h2 id="邻接矩阵版（咕咕ing）"><a href="#邻接矩阵版（咕咕ing）" class="headerlink" title="邻接矩阵版（咕咕ing）"></a>邻接矩阵版（咕咕ing）</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">int</span> n,ans,minn[<span class="number">105</span>],a[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Prim</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) <span class="keyword">if</span>(!vis[j]&amp;&amp;minn[j]&lt;minn[k]) k=j;</span><br><span class="line">        vis[k]=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) <span class="keyword">if</span>(!vis[j]&amp;&amp;a[k][j]&lt;minn[j]) minn[j]=a[k][j];</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ans+=minn[i];</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(minn,<span class="number">0x7f</span>,<span class="keyword">sizeof</span>(minn));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,Prim());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Template</category>
      </categories>
  </entry>
  <entry>
    <title>Template007. 二叉树遍历模板</title>
    <url>/Template007/</url>
    <content><![CDATA[<h1 id="Template007"><a href="#Template007" class="headerlink" title="Template007"></a>Template007</h1><a id="more"></a>
<h1 id="给出前序遍历与中序遍历，求出后序遍历"><a href="#给出前序遍历与中序遍历，求出后序遍历" class="headerlink" title="给出前序遍历与中序遍历，求出后序遍历"></a>给出前序遍历与中序遍历，求出后序遍历</h1><h2 id="例题：LuoguP1827"><a href="#例题：LuoguP1827" class="headerlink" title="例题：LuoguP1827"></a><a href="https://www.luogu.org/problem/P1827" target="_blank" rel="noopener">例题：LuoguP1827</a></h2><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Map</span><span class="params">(<span class="keyword">char</span> s1[],<span class="keyword">char</span> s2[],<span class="keyword">char</span> s[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (n&lt;=<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">	<span class="keyword">int</span> k=<span class="built_in">strchr</span>(s2,s1[<span class="number">0</span>])-s2;</span><br><span class="line">	Map(s1+<span class="number">1</span>,s2,s,k);</span><br><span class="line">	Map(s1+k+<span class="number">1</span>,s2+k+<span class="number">1</span>,s+k,n-k<span class="number">-1</span>);</span><br><span class="line">	s[n<span class="number">-1</span>]=s1[<span class="number">0</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">char</span> s[<span class="number">30</span>],s1[<span class="number">30</span>],s2[<span class="number">30</span>];</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s1,s2);</span><br><span class="line">	<span class="keyword">int</span> len=<span class="built_in">strlen</span>(s1);</span><br><span class="line">	Map(s1,s2,s,len);</span><br><span class="line">	s[len]=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">puts</span>(s);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="给出中序遍历与后序遍历，求出前序遍历"><a href="#给出中序遍历与后序遍历，求出前序遍历" class="headerlink" title="给出中序遍历与后序遍历，求出前序遍历"></a>给出中序遍历与后序遍历，求出前序遍历</h1><h2 id="例题：LuoguP1030"><a href="#例题：LuoguP1030" class="headerlink" title="例题：LuoguP1030"></a><a href="https://www.luogu.org/problem/P1030" target="_blank" rel="noopener">例题：LuoguP1030</a></h2><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> a,b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="built_in">string</span> k1,<span class="built_in">string</span> k2)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (k1.size()&gt;<span class="number">0</span>)</span><br><span class="line">	  &#123;</span><br><span class="line">		<span class="built_in">cout</span>&lt;&lt;k2[k2.size()<span class="number">-1</span>];</span><br><span class="line">		<span class="keyword">int</span> k=k1.find(k2[k2.size()<span class="number">-1</span>]);</span><br><span class="line">		build(k1.substr(<span class="number">0</span>,k),k2.substr(<span class="number">0</span>,k));</span><br><span class="line">		build(k1.substr(k+<span class="number">1</span>),k2.substr(k,k1.size()-k<span class="number">-1</span>));</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">string</span> a,b;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">	build(a,b);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Template</category>
      </categories>
  </entry>
  <entry>
    <title>Template008. 单源最短路径模板</title>
    <url>/Template008/</url>
    <content><![CDATA[<h1 id="Template008"><a href="#Template008" class="headerlink" title="Template008"></a>Template008</h1><a id="more"></a>
<h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><h2 id="例题1：LuoguP3371"><a href="#例题1：LuoguP3371" class="headerlink" title="例题1：LuoguP3371"></a><a href="https://www.luogu.org/problem/P3371" target="_blank" rel="noopener">例题1：LuoguP3371</a></h2><h2 id="例题2：LuoguP4779"><a href="#例题2：LuoguP4779" class="headerlink" title="例题2：LuoguP4779"></a><a href="https://www.luogu.org/problem/P4779" target="_blank" rel="noopener">例题2：LuoguP4779</a></h2><h1 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a>Dijkstra</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">  	<span class="keyword">int</span> y,z;</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">  	<span class="keyword">int</span> now,dis;</span><br><span class="line">  	<span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Node &amp;a) <span class="keyword">const</span></span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	<span class="keyword">return</span> a.dis&lt;dis;</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">100005</span>];</span><br><span class="line"><span class="built_in">vector</span> &lt;Edge&gt; V[<span class="number">100005</span>];</span><br><span class="line">priority_queue &lt;Node&gt; Q;</span><br><span class="line"><span class="keyword">int</span> a,b,n,m,x,y,z,d[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[i]=<span class="number">99999999</span>;</span><br><span class="line">	d[start]=<span class="number">0</span>;</span><br><span class="line">	Q.push((Node)&#123;start,<span class="number">0</span>&#125;);</span><br><span class="line">	<span class="keyword">while</span> (!Q.empty())</span><br><span class="line">	  &#123;</span><br><span class="line">	  	<span class="keyword">int</span> now=Q.top().now;</span><br><span class="line">	  	Q.pop();</span><br><span class="line">	  	<span class="keyword">if</span> (vis[now]) <span class="keyword">continue</span>;</span><br><span class="line">	  	vis[now]=<span class="literal">true</span>;</span><br><span class="line">	  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;V[now].size();i++)</span><br><span class="line">	  	  &#123;</span><br><span class="line">	  	  	<span class="keyword">int</span> next=V[now][i].y;</span><br><span class="line">	  	  	<span class="keyword">int</span> nfar=V[now][i].z;</span><br><span class="line">	  	  	<span class="keyword">if</span> (d[next]&gt;d[now]+nfar) </span><br><span class="line">                          d[next]=d[now]+nfar,Q.push((Node)&#123;next,d[next]&#125;);</span><br><span class="line">		  &#125;</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;m,&amp;x,&amp;y);</span><br><span class="line">  	<span class="keyword">while</span> (m--)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;z);</span><br><span class="line">  	  	V[a].push_back((Edge)&#123;b,z&#125;);</span><br><span class="line">  	  	V[b].push_back((Edge)&#123;a,z&#125;);</span><br><span class="line">	  &#125;</span><br><span class="line">	Dijkstra(x);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d"</span>,d[y]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="SPFA"><a href="#SPFA" class="headerlink" title="SPFA"></a>SPFA</h1><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">  	<span class="keyword">int</span> y,z;</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="built_in">queue</span> &lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">100005</span>];</span><br><span class="line"><span class="built_in">vector</span> &lt;Edge&gt; V[<span class="number">500005</span>];</span><br><span class="line"><span class="keyword">int</span> n,m,x,y,a,b,z,d[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[i]=<span class="number">99999999</span>;</span><br><span class="line">  	Q.push(start);</span><br><span class="line">  	d[start]=<span class="number">0</span>;</span><br><span class="line">  	vis[start]=<span class="literal">true</span>;</span><br><span class="line">  	<span class="keyword">while</span> (!Q.empty())</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	<span class="keyword">int</span> now=Q.front();</span><br><span class="line">  	  	Q.pop();</span><br><span class="line">  	  	vis[now]=<span class="literal">false</span>;</span><br><span class="line">  	  	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;V[now].size();i++)</span><br><span class="line">  	  	  &#123;</span><br><span class="line">  	  	  	<span class="keyword">int</span> next=V[now][i].y;</span><br><span class="line">  	  	  	<span class="keyword">int</span> nfar=V[now][i].z;</span><br><span class="line">  	  	  	<span class="keyword">if</span> (d[next]&gt;d[now]+nfar)</span><br><span class="line">  	  	  	  &#123;</span><br><span class="line">  	  	  	  	d[next]=d[now]+nfar;</span><br><span class="line">  	  	  	  	<span class="keyword">if</span> (!vis[next]) vis[next]=<span class="literal">true</span>,Q.push(next);</span><br><span class="line">			  &#125;</span><br><span class="line">		  &#125;</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;m,&amp;x,&amp;y);</span><br><span class="line">  	<span class="keyword">while</span> (m--)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;z);</span><br><span class="line">  	  	V[a].push_back((Edge)&#123;b,z&#125;);</span><br><span class="line">	  &#125;</span><br><span class="line">	SPFA(x);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d"</span>,d[y]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Template</category>
      </categories>
  </entry>
  <entry>
    <title>Template001. 高精度模板</title>
    <url>/Template001/</url>
    <content><![CDATA[<h1 id="Template001"><a href="#Template001" class="headerlink" title="Template001"></a>Template001</h1><a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (str1.length()&gt;str2.length()) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (str1.length()&lt;str2.length())  <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> str1.compare(str2);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">add</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> ans;</span><br><span class="line">    <span class="keyword">int</span> cf=<span class="number">0</span>,temp;</span><br><span class="line">    <span class="keyword">int</span> len1=str1.length();</span><br><span class="line">    <span class="keyword">int</span> len2=str2.length();</span><br><span class="line">    <span class="keyword">if</span> (len1&lt;len2) <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len2-len1;i++) str1=<span class="string">"0"</span>+str1;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len1-len2;i++) str2=<span class="string">"0"</span>+str2;</span><br><span class="line">    len1=str1.length();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=len1<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">      &#123;</span><br><span class="line">        temp=str1[i]-<span class="string">'0'</span>+str2[i]-<span class="string">'0'</span>+cf;</span><br><span class="line">        cf=temp/<span class="number">10</span>;</span><br><span class="line">        temp%=<span class="number">10</span>;</span><br><span class="line">        ans=<span class="keyword">char</span>(temp+<span class="string">'0'</span>)+ans;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">if</span> (cf!=<span class="number">0</span>) ans=<span class="keyword">char</span>(cf+<span class="string">'0'</span>)+ans;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">sub</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> ans;</span><br><span class="line">    <span class="keyword">int</span> tmp=str1.length()-str2.length(),cf=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=str2.length()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span>(str1[tmp+i]&lt;str2[i]+cf)</span><br><span class="line">          &#123;</span><br><span class="line">            ans=<span class="keyword">char</span>(str1[tmp+i]-str2[i]-cf+<span class="string">'0'</span>+<span class="number">10</span>)+ans;</span><br><span class="line">            cf=<span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            ans=<span class="keyword">char</span>(str1[tmp+i]-str2[i]-cf+<span class="string">'0'</span>)+ans;</span><br><span class="line">            cf=<span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=tmp<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span>(str1[i]-cf&gt;=<span class="string">'0'</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            ans=<span class="keyword">char</span>(str1[i]-cf)+ans;</span><br><span class="line">            cf=<span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            ans=<span class="keyword">char</span>(str1[i]-cf+<span class="number">10</span>)+ans;</span><br><span class="line">            cf=<span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ans.erase(<span class="number">0</span>,ans.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">mul</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> ans;</span><br><span class="line">    <span class="keyword">int</span> len1=str1.length();</span><br><span class="line">    <span class="keyword">int</span> len2=str2.length();</span><br><span class="line">    <span class="built_in">string</span> tempstr;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len2<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">      &#123;</span><br><span class="line">        tempstr=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> temp=str2[i]-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> cf=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (temp!=<span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=len2<span class="number">-1</span>-i;j++) tempstr+=<span class="string">"0"</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=len1<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">              &#123;</span><br><span class="line">                t=(temp*(str1[j]-<span class="string">'0'</span>)+cf)%<span class="number">10</span>;</span><br><span class="line">                cf=(temp*(str1[j]-<span class="string">'0'</span>)+cf)/<span class="number">10</span>;</span><br><span class="line">                tempstr=<span class="keyword">char</span>(t+<span class="string">'0'</span>)+tempstr;</span><br><span class="line">              &#125;</span><br><span class="line">            <span class="keyword">if</span> (cf!=<span class="number">0</span>) tempstr=<span class="keyword">char</span>(cf+<span class="string">'0'</span>)+tempstr;</span><br><span class="line">          &#125;</span><br><span class="line">        ans=add(ans,tempstr);</span><br><span class="line">      &#125;</span><br><span class="line">    ans.erase(<span class="number">0</span>,ans.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">div</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2,<span class="built_in">string</span> &amp;quotient,<span class="built_in">string</span> &amp;residue)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    quotient=residue=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">if</span> (str2==<span class="string">"0"</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        quotient=residue=<span class="string">"ERROR"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">if</span> (str1==<span class="string">"0"</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        quotient=residue=<span class="string">"0"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">int</span> res=compare(str1,str2);</span><br><span class="line">    <span class="keyword">if</span> (res&lt;<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        quotient=<span class="string">"0"</span>;</span><br><span class="line">        residue=str1;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (res==<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        quotient=<span class="string">"1"</span>;</span><br><span class="line">        residue=<span class="string">"0"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">int</span> len1=str1.length();</span><br><span class="line">        <span class="keyword">int</span> len2=str2.length();</span><br><span class="line">        <span class="built_in">string</span> tempstr;</span><br><span class="line">        tempstr.append(str1,<span class="number">0</span>,len2<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=len2<span class="number">-1</span>;i&lt;len1;i++)</span><br><span class="line">          &#123;</span><br><span class="line">            tempstr=tempstr+str1[i];</span><br><span class="line">            tempstr.erase(<span class="number">0</span>,tempstr.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">            <span class="keyword">if</span> (tempstr.empty()) tempstr=<span class="string">"0"</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">char</span> ch=<span class="string">'9'</span>;ch&gt;=<span class="string">'0'</span>;ch--)</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="built_in">string</span> str,tmp;</span><br><span class="line">                str=str+ch;</span><br><span class="line">                tmp=mul(str2,str);</span><br><span class="line">                <span class="keyword">if</span> (compare(tmp,tempstr)&lt;=<span class="number">0</span>)</span><br><span class="line">                  &#123;</span><br><span class="line">                    quotient=quotient+ch;</span><br><span class="line">                    tempstr=sub(tempstr,tmp);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        residue=tempstr;</span><br><span class="line">      &#125;</span><br><span class="line">    quotient.erase(<span class="number">0</span>,quotient.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">    <span class="keyword">if</span> (quotient.empty()) quotient=<span class="string">"0"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str1,str2,str3,str4;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;str1&gt;&gt;str2;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;add(str1,str2)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sub(str1,str2)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;mul(str1,str2)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    div(str1,str2,str3,str4);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;str3&lt;&lt;<span class="string">" "</span>&lt;&lt;str4;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Template</category>
      </categories>
  </entry>
  <entry>
    <title>Template002. 堆排序模板</title>
    <url>/Template002/</url>
    <content><![CDATA[<h1 id="Template002"><a href="#Template002" class="headerlink" title="Template002"></a>Template002</h1><a id="more"></a>
<h1 id="例题：LuoguP3378"><a href="#例题：LuoguP3378" class="headerlink" title="例题：LuoguP3378"></a><a href="https://www.luogu.org/problem/P3378" target="_blank" rel="noopener">例题：LuoguP3378</a></h1><h1 id="手打堆排序模板"><a href="#手打堆排序模板" class="headerlink" title="手打堆排序模板"></a>手打堆排序模板</h1><h2 id="从小到大（小根堆）"><a href="#从小到大（小根堆）" class="headerlink" title="从小到大（小根堆）"></a>从小到大（小根堆）</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,x,heap[<span class="number">10005</span>],size;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">while</span> (p&gt;<span class="number">1</span>)</span><br><span class="line">	  &#123;</span><br><span class="line">		<span class="keyword">if</span> (heap[p]&lt;heap[p/<span class="number">2</span>])</span><br><span class="line">		  &#123;</span><br><span class="line">			swap(heap[p],heap[p/<span class="number">2</span>]);</span><br><span class="line">			p/=<span class="number">2</span>;</span><br><span class="line">		  &#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	heap[++size]=val;</span><br><span class="line">	up(size);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> s=p*<span class="number">2</span>;</span><br><span class="line">	<span class="keyword">while</span> (s&lt;=size)</span><br><span class="line">	  &#123;</span><br><span class="line">		<span class="keyword">if</span> (s&lt;size&amp;&amp;heap[s+<span class="number">1</span>]&lt;heap[s]) s++;</span><br><span class="line">		<span class="keyword">if</span> (heap[s]&lt;heap[p])</span><br><span class="line">		  &#123;</span><br><span class="line">			swap(heap[s],heap[p]);</span><br><span class="line">			p=s;</span><br><span class="line">			s=p*<span class="number">2</span>;</span><br><span class="line">		  &#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extract</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	heap[<span class="number">1</span>]=heap[size--];</span><br><span class="line">	down(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gettop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> heap[<span class="number">1</span>];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	<span class="keyword">while</span> (n--)</span><br><span class="line">	  &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">		insert(x);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (size&gt;=<span class="number">1</span>)</span><br><span class="line"> 	  &#123;</span><br><span class="line">		<span class="keyword">int</span> top=gettop();</span><br><span class="line">		extract();</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d "</span>,top);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="从大到小（大根堆）"><a href="#从大到小（大根堆）" class="headerlink" title="从大到小（大根堆）"></a>从大到小（大根堆）</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,x,heap[<span class="number">10005</span>],size;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">while</span> (p&gt;<span class="number">1</span>)</span><br><span class="line">	  &#123;</span><br><span class="line">		<span class="keyword">if</span> (heap[p]&gt;heap[p/<span class="number">2</span>])</span><br><span class="line">		  &#123;</span><br><span class="line">			swap(heap[p],heap[p/<span class="number">2</span>]);</span><br><span class="line">			p/=<span class="number">2</span>;</span><br><span class="line">		  &#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	heap[++size]=val;</span><br><span class="line">	up(size);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> s=p*<span class="number">2</span>;</span><br><span class="line">	<span class="keyword">while</span> (s&lt;=size)</span><br><span class="line">	  &#123;</span><br><span class="line">		<span class="keyword">if</span> (s&lt;size&amp;&amp;heap[s+<span class="number">1</span>]&lt;heap[s]) s++;</span><br><span class="line">		<span class="keyword">if</span> (heap[s]&gt;heap[p])</span><br><span class="line">		  &#123;</span><br><span class="line">			swap(heap[s],heap[p]);</span><br><span class="line">			p=s;</span><br><span class="line">			s=p*<span class="number">2</span>;</span><br><span class="line">		  &#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extract</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	heap[<span class="number">1</span>]=heap[size--];</span><br><span class="line">	down(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gettop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> heap[<span class="number">1</span>];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	<span class="keyword">while</span> (n--)</span><br><span class="line">	  &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">		insert(x);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (size&gt;=<span class="number">1</span>)</span><br><span class="line"> 	  &#123;</span><br><span class="line">		<span class="keyword">int</span> top=gettop();</span><br><span class="line">		extract();</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d "</span>,top);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h1 id="STL堆排序模板"><a href="#STL堆排序模板" class="headerlink" title="STL堆排序模板"></a>STL堆排序模板</h1><h2 id="从小到大（小根堆）-1"><a href="#从小到大（小根堆）-1" class="headerlink" title="从小到大（小根堆）"></a>从小到大（小根堆）</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,x;</span><br><span class="line">priority_queue &lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt; &gt; Q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">  	<span class="keyword">while</span> (n--)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">  	  	Q.push(x);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">while</span> (!Q.empty())</span><br><span class="line">	  &#123;</span><br><span class="line">	  	<span class="built_in">printf</span>(<span class="string">"%d "</span>,Q.top());</span><br><span class="line">	  	Q.pop();</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="从大到小（大根堆）-1"><a href="#从大到小（大根堆）-1" class="headerlink" title="从大到小（大根堆）"></a>从大到小（大根堆）</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,x;</span><br><span class="line">priority_queue &lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="comment">// Or "priority_queue &lt;int,vector&lt;int&gt;,less&lt;int&gt; &gt; Q;"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">  	<span class="keyword">while</span> (n--)</span><br><span class="line">  	  &#123;</span><br><span class="line">  	  	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">  	  	Q.push(x);</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">while</span> (!Q.empty())</span><br><span class="line">	  &#123;</span><br><span class="line">	  	<span class="built_in">printf</span>(<span class="string">"%d "</span>,Q.top());</span><br><span class="line">	  	Q.pop();</span><br><span class="line">	  &#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Template</category>
      </categories>
  </entry>
</search>
