<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>666DHG的博客</title>
  
  <subtitle>20186gdoi13</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-07-19T06:17:39.398Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>杨钧</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>树</title>
    <link href="http://yoursite.com/Thematic004/"/>
    <id>http://yoursite.com/Thematic004/</id>
    <published>2021-07-18T12:53:41.749Z</published>
    <updated>2021-07-19T06:17:39.398Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><center> Thematic004 </center><a id="more"></a><h2 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h2><p><a href="https://www.luogu.org/problem/P3378" target="_blank" rel="noopener">例题：LuoguP3378</a></p><h3 id="手打堆排序模板"><a href="#手打堆排序模板" class="headerlink" title="手打堆排序模板"></a>手打堆排序模板</h3><h4 id="从小到大（小根堆）"><a href="#从小到大（小根堆）" class="headerlink" title="从小到大（小根堆）"></a>从小到大（小根堆）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,x,heap[<span class="number">10005</span>],size;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (p&gt;<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span> (heap[p]&lt;heap[p/<span class="number">2</span>])</span><br><span class="line">      &#123;</span><br><span class="line">      swap(heap[p],heap[p/<span class="number">2</span>]);</span><br><span class="line">      p/=<span class="number">2</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  heap[++size]=val;</span><br><span class="line">  up(size);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> s=p*<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">while</span> (s&lt;=size)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span> (s&lt;size&amp;&amp;heap[s+<span class="number">1</span>]&lt;heap[s]) s++;</span><br><span class="line">    <span class="keyword">if</span> (heap[s]&lt;heap[p])</span><br><span class="line">      &#123;</span><br><span class="line">      swap(heap[s],heap[p]);</span><br><span class="line">      p=s;</span><br><span class="line">      s=p*<span class="number">2</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extract</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  heap[<span class="number">1</span>]=heap[size--];</span><br><span class="line">  down(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gettop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> heap[<span class="number">1</span>];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">  <span class="keyword">while</span> (n--)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">    insert(x);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (size&gt;=<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">int</span> top=gettop();</span><br><span class="line">    extract();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>,top);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="从大到小（大根堆）"><a href="#从大到小（大根堆）" class="headerlink" title="从大到小（大根堆）"></a>从大到小（大根堆）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,x,heap[<span class="number">10005</span>],size;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (p&gt;<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span> (heap[p]&gt;heap[p/<span class="number">2</span>])</span><br><span class="line">      &#123;</span><br><span class="line">      swap(heap[p],heap[p/<span class="number">2</span>]);</span><br><span class="line">      p/=<span class="number">2</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  heap[++size]=val;</span><br><span class="line">  up(size);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">down</span><span class="params">(<span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> s=p*<span class="number">2</span>;</span><br><span class="line">  <span class="keyword">while</span> (s&lt;=size)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span> (s&lt;size&amp;&amp;heap[s+<span class="number">1</span>]&lt;heap[s]) s++;</span><br><span class="line">    <span class="keyword">if</span> (heap[s]&gt;heap[p])</span><br><span class="line">      &#123;</span><br><span class="line">      swap(heap[s],heap[p]);</span><br><span class="line">      p=s;</span><br><span class="line">      s=p*<span class="number">2</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extract</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  heap[<span class="number">1</span>]=heap[size--];</span><br><span class="line">  down(<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">gettop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> heap[<span class="number">1</span>];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">  <span class="keyword">while</span> (n--)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">    insert(x);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (size&gt;=<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">int</span> top=gettop();</span><br><span class="line">    extract();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>,top);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="STL堆排序模板"><a href="#STL堆排序模板" class="headerlink" title="STL堆排序模板"></a>STL堆排序模板</h3><h4 id="从小到大（小根堆）-1"><a href="#从小到大（小根堆）-1" class="headerlink" title="从小到大（小根堆）"></a>从小到大（小根堆）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,x;</span><br><span class="line">priority_queue &lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt; &gt; Q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">while</span> (n--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">        Q.push(x);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%d "</span>,Q.top());</span><br><span class="line">      Q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="从大到小（大根堆）-1"><a href="#从大到小（大根堆）-1" class="headerlink" title="从大到小（大根堆）"></a>从大到小（大根堆）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,x;</span><br><span class="line">priority_queue &lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="comment">// Or "priority_queue &lt;int,vector&lt;int&gt;,less&lt;int&gt; &gt; Q;"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">while</span> (n--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">        Q.push(x);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%d "</span>,Q.top());</span><br><span class="line">      Q.pop();</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h2 id="最小生成树"><a href="#最小生成树" class="headerlink" title="最小生成树"></a>最小生成树</h2><p><a href="https://www.luogu.org/problem/P3366" target="_blank" rel="noopener">例题：LuoguP3366</a></p><h3 id="Kruskal"><a href="#Kruskal" class="headerlink" title="Kruskal"></a>Kruskal</h3><h4 id="数组版"><a href="#数组版" class="headerlink" title="数组版"></a>数组版</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">    <span class="keyword">int</span> start,to,cost;</span><br><span class="line">  &#125;edge[<span class="number">200005</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">5005</span>],n,m,ans,fx,fy,cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Edge a,Edge b)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.cost&lt;b.cost;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==f[x]) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> f[x]=find(f[x]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Kruskal</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    sort(edge+<span class="number">1</span>,edge+<span class="number">1</span>+m,cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        fx=find(edge[i].start), fy=find(edge[i].to);</span><br><span class="line">        <span class="keyword">if</span> (fx==fy) <span class="keyword">continue</span>;</span><br><span class="line">        ans+=edge[i].cost;</span><br><span class="line">        f[fy]=fx;</span><br><span class="line">        <span class="keyword">if</span> (++cnt==n<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i]=i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;edge[i].start,&amp;edge[i].to,&amp;edge[i].cost);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,Kruskal());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="优先队列版"><a href="#优先队列版" class="headerlink" title="优先队列版"></a>优先队列版</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">    <span class="keyword">int</span> start,to,cost;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Edge &amp;a) <span class="keyword">const</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">return</span> a.cost&lt;cost;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">5005</span>],n,m,start,to,cost,fx,fy,fz;</span><br><span class="line">priority_queue &lt;Edge&gt; Q;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==f[x]) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> f[x]=find(f[x]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Kruskal</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">      &#123;</span><br><span class="line">        fx=find(Q.top().start), fy=find(Q.top().to);</span><br><span class="line">        fz=Q.top().cost;</span><br><span class="line">        Q.pop();</span><br><span class="line">        <span class="keyword">if</span> (fx==fy) <span class="keyword">continue</span>;</span><br><span class="line">        ans+=fz;</span><br><span class="line">        f[fy]=fx;</span><br><span class="line">        <span class="keyword">if</span> (++cnt==n<span class="number">-1</span>) <span class="keyword">return</span> ans;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i]=i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;start,&amp;to,&amp;cost);</span><br><span class="line">        Q.push((Edge)&#123;start,to,cost&#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,Kruskal());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="Prim"><a href="#Prim" class="headerlink" title="Prim"></a>Prim</h3><h4 id="邻接矩阵版（咕咕ing）"><a href="#邻接矩阵版（咕咕ing）" class="headerlink" title="邻接矩阵版（咕咕ing）"></a>邻接矩阵版（咕咕ing）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">105</span>];</span><br><span class="line"><span class="keyword">int</span> n,ans,minn[<span class="number">105</span>],a[<span class="number">105</span>][<span class="number">105</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Prim</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) <span class="keyword">if</span>(!vis[j]&amp;&amp;minn[j]&lt;minn[k]) k=j;</span><br><span class="line">        vis[k]=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) <span class="keyword">if</span>(!vis[j]&amp;&amp;a[k][j]&lt;minn[j]) minn[j]=a[k][j];</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ans+=minn[i];</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(minn,<span class="number">0x7f</span>,<span class="keyword">sizeof</span>(minn));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,Prim());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h2 id="最近公共祖先（LCA）"><a href="#最近公共祖先（LCA）" class="headerlink" title="最近公共祖先（LCA）"></a>最近公共祖先（LCA）</h2><p><a href="https://www.luogu.org/problem/P3379" target="_blank" rel="noopener">例题：LuoguP3379</a></p><h3 id="倍增"><a href="#倍增" class="headerlink" title="倍增"></a>倍增</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">  <span class="keyword">int</span> t,next;</span><br><span class="line">  &#125;Edge[<span class="number">2</span>*<span class="number">500001</span>];</span><br><span class="line"><span class="keyword">int</span> depth[<span class="number">500001</span>],f[<span class="number">500001</span>][<span class="number">22</span>],log1[<span class="number">500001</span>],head[<span class="number">500001</span>];</span><br><span class="line"><span class="keyword">int</span> tot,n,m,s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    Edge[++tot].t=y;</span><br><span class="line">  Edge[tot].next=head[x];</span><br><span class="line">  head[x]=tot;</span><br><span class="line">  Edge[++tot].t=x;</span><br><span class="line">  Edge[tot].next=head[y];</span><br><span class="line">  head[y]=tot;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    depth[now]=depth[last]+<span class="number">1</span>;</span><br><span class="line">    f[now][<span class="number">0</span>]=last;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;i)&lt;=depth[now];i++) f[now][i]=f[f[now][i<span class="number">-1</span>]][i<span class="number">-1</span>];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=head[now]; i; i=Edge[i].next) <span class="keyword">if</span> (Edge[i].t!=last) dfs(Edge[i].t,now);</span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">LCA</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (depth[x]&lt;depth[y]) swap(x,y);</span><br><span class="line">    <span class="keyword">while</span> (depth[x]&gt;depth[y]) x=f[x][log1[depth[x]-depth[y]]<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">if</span> (x==y) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=log1[depth[x]]<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) <span class="keyword">if</span> (f[x][i]!=f[y][i]) x=f[x][i], y=f[y][i];</span><br><span class="line">  <span class="keyword">return</span> f[x][<span class="number">0</span>];</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;s);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">        addedge(x,y);</span><br><span class="line">    &#125;</span><br><span class="line">  dfs(s,<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) log1[i]=log1[i<span class="number">-1</span>]+(<span class="number">1</span>&lt;&lt;log1[i<span class="number">-1</span>]==i);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,LCA(x,y));</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h2 id="二叉树遍历"><a href="#二叉树遍历" class="headerlink" title="二叉树遍历"></a>二叉树遍历</h2><h3 id="给出前序遍历与中序遍历，求出后序遍历"><a href="#给出前序遍历与中序遍历，求出后序遍历" class="headerlink" title="给出前序遍历与中序遍历，求出后序遍历"></a>给出前序遍历与中序遍历，求出后序遍历</h3><p><a href="https://www.luogu.org/problem/P1827" target="_blank" rel="noopener">例题：LuoguP1827</a></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Map</span><span class="params">(<span class="keyword">char</span> s1[],<span class="keyword">char</span> s2[],<span class="keyword">char</span> s[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (n&lt;=<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">int</span> k=<span class="built_in">strchr</span>(s2,s1[<span class="number">0</span>])-s2;</span><br><span class="line">  Map(s1+<span class="number">1</span>,s2,s,k);</span><br><span class="line">  Map(s1+k+<span class="number">1</span>,s2+k+<span class="number">1</span>,s+k,n-k<span class="number">-1</span>);</span><br><span class="line">  s[n<span class="number">-1</span>]=s1[<span class="number">0</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">char</span> s[<span class="number">30</span>],s1[<span class="number">30</span>],s2[<span class="number">30</span>];</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%s%s"</span>,s1,s2);</span><br><span class="line">  <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s1);</span><br><span class="line">  Map(s1,s2,s,len);</span><br><span class="line">  s[len]=<span class="number">0</span>;</span><br><span class="line">  <span class="built_in">puts</span>(s);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="给出中序遍历与后序遍历，求出前序遍历"><a href="#给出中序遍历与后序遍历，求出前序遍历" class="headerlink" title="给出中序遍历与后序遍历，求出前序遍历"></a>给出中序遍历与后序遍历，求出前序遍历</h3><p><a href="https://www.luogu.org/problem/P1030" target="_blank" rel="noopener">例题：LuoguP1030</a></p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> a,b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="built_in">string</span> k1,<span class="built_in">string</span> k2)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (k1.size()&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;k2[k2.size()<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">int</span> k=k1.find(k2[k2.size()<span class="number">-1</span>]);</span><br><span class="line">    build(k1.substr(<span class="number">0</span>,k),k2.substr(<span class="number">0</span>,k));</span><br><span class="line">    build(k1.substr(k+<span class="number">1</span>),k2.substr(k,k1.size()-k<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">  <span class="built_in">string</span> a,b;</span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">  build(a,b);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h2 id="树状数组"><a href="#树状数组" class="headerlink" title="树状数组"></a>树状数组</h2><h3 id="一维树状数组"><a href="#一维树状数组" class="headerlink" title="一维树状数组"></a>一维树状数组</h3><h4 id="单点修改，区间查询"><a href="#单点修改，区间查询" class="headerlink" title="单点修改，区间查询"></a>单点修改，区间查询</h4><p><a href="https://www.luogu.org/problem/P3374" target="_blank" rel="noopener">例题1：LuoguP3374</a></p><p><a href="https://loj.ac/problem/130" target="_blank" rel="noopener">例题2：LOJ#130</a></p><p>代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> oper,a,b,k,n,m,tree[<span class="number">2000005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num&amp;-num;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (num&lt;=n)</span><br><span class="line">      &#123;</span><br><span class="line">        tree[num]+=x;</span><br><span class="line">        num+=lowbit(num);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (num!=<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        ans+=tree[num];</span><br><span class="line">        num-=lowbit(num);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">        add(i,k);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;oper,&amp;a,&amp;b);</span><br><span class="line">      <span class="keyword">if</span> (oper==<span class="number">1</span>) add(a,b);</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (oper==<span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum(b)-sum(a<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="区间修改，单点查询"><a href="#区间修改，单点查询" class="headerlink" title="区间修改，单点查询"></a>区间修改，单点查询</h4><p><a href="https://www.luogu.org/problem/P3368" target="_blank" rel="noopener">例题1：LuoguP3368</a></p><p><a href="https://loj.ac/problem/131" target="_blank" rel="noopener">例题2：LOJ#131</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> oper,a,b,k,last,n,m,tree[<span class="number">1000005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> num)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num&amp;-num;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> num,<span class="keyword">long</span> <span class="keyword">long</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (num&lt;=n)</span><br><span class="line">      &#123;</span><br><span class="line">        tree[num]+=x;</span><br><span class="line">        num+=lowbit(num);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">sum</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> num)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (num!=<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        ans+=tree[num];</span><br><span class="line">        num-=lowbit(num);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">        add(i,a-last);</span><br><span class="line">        last=a;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">cin</span>&gt;&gt;oper;</span><br><span class="line">      <span class="keyword">if</span> (oper==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;k;</span><br><span class="line">          add(a,k);</span><br><span class="line">          add(b+<span class="number">1</span>,-k);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum(a)&lt;&lt;<span class="string">"\n"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="离散化"><a href="#离散化" class="headerlink" title="离散化"></a>离散化</h4><p><a href="https://www.luogu.org/problem/P1908" target="_blank" rel="noopener">例题：LuoguP1908</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Data</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">    <span class="keyword">int</span> c,id;</span><br><span class="line">  &#125;a[<span class="number">500005</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans;</span><br><span class="line"><span class="keyword">int</span> n,tree[<span class="number">500005</span>],rank[<span class="number">500005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Data x,Data y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.c!=y.c) <span class="keyword">return</span> x.c&lt;y.c;</span><br><span class="line">    <span class="keyword">return</span> x.id&lt;y.id;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> num&amp;-num;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span>(num&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    s+=tree[num];</span><br><span class="line">    num-=lowbit(num);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> s;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num,<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">while</span>(num&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">    tree[num]+=x;</span><br><span class="line">    num+=lowbit(num);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i].c),a[i].id=i;</span><br><span class="line">  sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmp);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) rank[a[i].id]=i;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    add(rank[i],<span class="number">1</span>);</span><br><span class="line">    ans+=i-sum(rank[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="二维树状数组"><a href="#二维树状数组" class="headerlink" title="二维树状数组"></a>二维树状数组</h3><h4 id="单点修改，区间查询-1"><a href="#单点修改，区间查询-1" class="headerlink" title="单点修改，区间查询"></a>单点修改，区间查询</h4><p><a href="https://loj.ac/problem/133" target="_blank" rel="noopener">例题：LOJ#133</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> oper,x,y,k,xa,xb,ya,yb,n,m,tree[<span class="number">5005</span>][<span class="number">5005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">lowbit</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> p&amp;-p;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> num1,<span class="keyword">long</span> <span class="keyword">long</span> num2,<span class="keyword">long</span> <span class="keyword">long</span> k)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">long</span> i=num1;i&lt;=n;i+=lowbit(i))</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">long</span> j=num2;j&lt;=m;j+=lowbit(j))</span><br><span class="line">                 tree[i][j]+=k;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">sum</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> num1,<span class="keyword">long</span> <span class="keyword">long</span> num2)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">long</span> i=num1;i&gt;<span class="number">0</span>;i-=lowbit(i))</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">long</span> j=num2;j&gt;<span class="number">0</span>;j-=lowbit(j))</span><br><span class="line">                 ans+=tree[i][j];</span><br><span class="line">  <span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt;oper)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (oper==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;k;</span><br><span class="line">          add(x,y,k);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (oper==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="built_in">cin</span>&gt;&gt;xa&gt;&gt;ya&gt;&gt;xb&gt;&gt;yb;</span><br><span class="line">                        <span class="keyword">int</span> ans=sum(xb,yb)+sum(xa<span class="number">-1</span>,ya<span class="number">-1</span>)-sum(xa<span class="number">-1</span>,yb)-sum(xb,ya<span class="number">-1</span>);</span><br><span class="line">          <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="string">"\n"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h2 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h2><p><a href="https://www.luogu.org/problem/P3367" target="_blank" rel="noopener">例题：LuoguP3367</a></p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inti</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i]=i;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="寻找父亲"><a href="#寻找父亲" class="headerlink" title="寻找父亲"></a>寻找父亲</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==f[x]) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> f[x]=find(f[x]);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fx=find(x),fy=find(y);</span><br><span class="line">    f[fy]=fx;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="判断父亲是否相同"><a href="#判断父亲是否相同" class="headerlink" title="判断父亲是否相同"></a>判断父亲是否相同</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fx=find(x),fy=find(y);</span><br><span class="line">    <span class="keyword">return</span> fx==fy;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="例题代码"><a href="#例题代码" class="headerlink" title="例题代码"></a>例题代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,T,oper,a,b,f[<span class="number">10005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inti</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inti</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) f[i]=i;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x==f[x]) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> f[x]=find(f[x]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fx=find(x),fy=find(y);</span><br><span class="line">    f[fy]=fx;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fx=find(x),fy=find(y);</span><br><span class="line">    <span class="keyword">return</span> fx==fy;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;T);</span><br><span class="line">    inti(n);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;oper,&amp;a,&amp;b);</span><br><span class="line">        <span class="keyword">if</span> (oper==<span class="number">1</span>) merge(a,b);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">if</span> (check(a,b)) <span class="built_in">printf</span>(<span class="string">"Y\n"</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"N\n"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;center&gt; Thematic004 &lt;/center&gt;
    
    </summary>
    
    
      <category term="Thematic" scheme="http://yoursite.com/categories/Thematic/"/>
    
    
  </entry>
  
  <entry>
    <title>图论</title>
    <link href="http://yoursite.com/Thematic003/"/>
    <id>http://yoursite.com/Thematic003/</id>
    <published>2021-07-18T12:51:36.439Z</published>
    <updated>2021-07-19T06:17:35.521Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><center> Thematic003 </center><a id="more"></a><h2 id="单源最短路径"><a href="#单源最短路径" class="headerlink" title="单源最短路径"></a>单源最短路径</h2><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p><a href="https://www.luogu.org/problem/P3371" target="_blank" rel="noopener">例题1：LuoguP3371</a></p><p><a href="https://www.luogu.org/problem/P4779" target="_blank" rel="noopener">例题2：LuoguP4779</a></p><h3 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a>Dijkstra</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">  <span class="keyword">int</span> y,z;</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">  <span class="keyword">int</span> now,dis;</span><br><span class="line">  <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Node &amp;a) <span class="keyword">const</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">return</span> a.dis&lt;dis;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">100005</span>];</span><br><span class="line"><span class="built_in">vector</span> &lt;Edge&gt; V[<span class="number">100005</span>];</span><br><span class="line">priority_queue &lt;Node&gt; Q;</span><br><span class="line"><span class="keyword">int</span> a,b,n,m,x,y,z,d[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dijkstra</span><span class="params">(<span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[i]=<span class="number">99999999</span>;</span><br><span class="line">d[start]=<span class="number">0</span>;</span><br><span class="line">Q.push((Node)&#123;start,<span class="number">0</span>&#125;);</span><br><span class="line"><span class="keyword">while</span> (!Q.empty())</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">int</span> now=Q.top().now;</span><br><span class="line">  Q.pop();</span><br><span class="line">  <span class="keyword">if</span> (vis[now]) <span class="keyword">continue</span>;</span><br><span class="line">  vis[now]=<span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;V[now].size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">int</span> next=V[now][i].y;</span><br><span class="line">    <span class="keyword">int</span> nfar=V[now][i].z;</span><br><span class="line">    <span class="keyword">if</span> (d[next]&gt;d[now]+nfar) </span><br><span class="line">                          d[next]=d[now]+nfar,Q.push((Node)&#123;next,d[next]&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;m,&amp;x,&amp;y);</span><br><span class="line">  <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;z);</span><br><span class="line">    V[a].push_back((Edge)&#123;b,z&#125;);</span><br><span class="line">    V[b].push_back((Edge)&#123;a,z&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">Dijkstra(x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,d[y]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="SPFA"><a href="#SPFA" class="headerlink" title="SPFA"></a>SPFA</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">  <span class="keyword">int</span> y,z;</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="built_in">queue</span> &lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">100005</span>];</span><br><span class="line"><span class="built_in">vector</span> &lt;Edge&gt; V[<span class="number">500005</span>];</span><br><span class="line"><span class="keyword">int</span> n,m,x,y,a,b,z,d[<span class="number">100005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SPFA</span><span class="params">(<span class="keyword">int</span> start)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) d[i]=<span class="number">99999999</span>;</span><br><span class="line">  Q.push(start);</span><br><span class="line">  d[start]=<span class="number">0</span>;</span><br><span class="line">  vis[start]=<span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">while</span> (!Q.empty())</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">int</span> now=Q.front();</span><br><span class="line">    Q.pop();</span><br><span class="line">    vis[now]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;V[now].size();i++)</span><br><span class="line">      &#123;</span><br><span class="line">      <span class="keyword">int</span> next=V[now][i].y;</span><br><span class="line">      <span class="keyword">int</span> nfar=V[now][i].z;</span><br><span class="line">      <span class="keyword">if</span> (d[next]&gt;d[now]+nfar)</span><br><span class="line">        &#123;</span><br><span class="line">        d[next]=d[now]+nfar;</span><br><span class="line">        <span class="keyword">if</span> (!vis[next]) vis[next]=<span class="literal">true</span>,Q.push(next);</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;m,&amp;x,&amp;y);</span><br><span class="line">  <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;z);</span><br><span class="line">    V[a].push_back((Edge)&#123;b,z&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">SPFA(x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,d[y]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="强连通分量-amp-缩点"><a href="#强连通分量-amp-缩点" class="headerlink" title="强连通分量 &amp; 缩点"></a>强连通分量 &amp; 缩点</h2><p><a href="https://www.luogu.com.cn/problem/P2341" target="_blank" rel="noopener">例题：LuoguP2341</a></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Tarjan</span></span><br><span class="line"><span class="built_in">stack</span> &lt;<span class="keyword">int</span>&gt; S;</span><br><span class="line"><span class="keyword">bool</span> inst[MAXN];</span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; V[MAXN];</span><br><span class="line"><span class="keyword">int</span> n,m,col,cnt,dfn[MAXN],low[MAXN],color[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="comment">//Extra</span></span><br><span class="line"><span class="keyword">int</span> colt[MAXN];</span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; V2[MAXN];</span><br></pre></td></tr></table></figure><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inti</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    cnt=col=<span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(dfn,<span class="number">0</span>,<span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    <span class="built_in">memset</span>(low,<span class="number">0</span>,<span class="keyword">sizeof</span>(low));</span><br><span class="line">    <span class="built_in">memset</span>(colt,<span class="number">0</span>,<span class="keyword">sizeof</span>(colt));</span><br><span class="line">  <span class="built_in">memset</span>(color,<span class="number">0</span>,<span class="keyword">sizeof</span>(color));</span><br><span class="line">    <span class="built_in">memset</span>(inst,<span class="literal">false</span>,<span class="keyword">sizeof</span>(inst));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++) V[i].clear();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++) V2[i].clear();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="Tarjan"><a href="#Tarjan" class="headerlink" title="Tarjan"></a>Tarjan</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> now)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    dfn[now]=low[now]=++cnt;</span><br><span class="line">    inst[now]=<span class="literal">true</span>;</span><br><span class="line">    S.push(now);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;V[now].size();i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">int</span> next=V[now][i];</span><br><span class="line">        <span class="keyword">if</span> (!dfn[next])</span><br><span class="line">          &#123;</span><br><span class="line">            Tarjan(next);</span><br><span class="line">            low[now]=min(low[now],low[next]);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (inst[next]) low[now]=min(low[now],dfn[next]);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">if</span> (dfn[now]==low[now])</span><br><span class="line">    &#123;</span><br><span class="line">      col++;</span><br><span class="line">      <span class="keyword">int</span> s;</span><br><span class="line">      <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">          s=S.top();</span><br><span class="line">          S.pop();</span><br><span class="line">          inst[s]=<span class="literal">false</span>;</span><br><span class="line">          color[s]=col;</span><br><span class="line">            </span><br><span class="line">          <span class="comment">// Extra：记录每个强连通分量内的节点数 </span></span><br><span class="line">          <span class="comment">// colt[col]++;</span></span><br><span class="line">            </span><br><span class="line">      &#125; <span class="keyword">while</span> (s!=now);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="Extra：重新建图"><a href="#Extra：重新建图" class="headerlink" title="Extra：重新建图"></a>Extra：重新建图</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReGraph</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> acolor;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        acolor=color[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;V[now].size();j++) </span><br><span class="line">          &#123;</span><br><span class="line">            bcolor=color[V[i][j]];</span><br><span class="line">            <span class="keyword">if</span> (acolor!=bcolor) V2[acolor].push_back(bcolor);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    inti();</span><br><span class="line">  <span class="comment">/* Input */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span> (!dfn[i]) Tarjan(i); <span class="comment">//Tarjan图不一定联通 </span></span><br><span class="line">    <span class="comment">// ReGraph();</span></span><br><span class="line">    <span class="comment">/* Output */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="例题代码"><a href="#例题代码" class="headerlink" title="例题代码"></a>例题代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">10005</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">stack</span> &lt;<span class="keyword">int</span>&gt; S;</span><br><span class="line"><span class="keyword">bool</span> inst[MAXN];</span><br><span class="line"><span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; V[MAXN];</span><br><span class="line"><span class="keyword">int</span> n,m,col,cnt,dfn[MAXN],low[MAXN],color[MAXN],colt[MAXN],du[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inti</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    cnt=col=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(du,<span class="number">0</span>,<span class="keyword">sizeof</span>(du));</span><br><span class="line">    <span class="built_in">memset</span>(dfn,<span class="number">0</span>,<span class="keyword">sizeof</span>(dfn));</span><br><span class="line">    <span class="built_in">memset</span>(low,<span class="number">0</span>,<span class="keyword">sizeof</span>(low));</span><br><span class="line">    <span class="built_in">memset</span>(colt,<span class="number">0</span>,<span class="keyword">sizeof</span>(colt));</span><br><span class="line">    <span class="built_in">memset</span>(color,<span class="number">0</span>,<span class="keyword">sizeof</span>(color));</span><br><span class="line">    <span class="built_in">memset</span>(inst,<span class="literal">false</span>,<span class="keyword">sizeof</span>(inst));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;MAXN;i++) V[i].clear();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> now)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    dfn[now]=low[now]=++cnt;</span><br><span class="line">    inst[now]=<span class="literal">true</span>;</span><br><span class="line">    S.push(now);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;V[now].size();i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">int</span> next=V[now][i];</span><br><span class="line">        <span class="keyword">if</span> (!dfn[next])</span><br><span class="line">          &#123;</span><br><span class="line">            Tarjan(next);</span><br><span class="line">            low[now]=min(low[now],low[next]);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (inst[next]) low[now]=min(low[now],dfn[next]);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">if</span> (dfn[now]==low[now])</span><br><span class="line">    &#123;</span><br><span class="line">      col++;</span><br><span class="line">      <span class="keyword">int</span> s;</span><br><span class="line">      <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">          s=S.top();</span><br><span class="line">          S.pop();</span><br><span class="line">          inst[s]=<span class="literal">false</span>;</span><br><span class="line">          color[s]=col;</span><br><span class="line">          colt[col]++;</span><br><span class="line">      &#125; <span class="keyword">while</span> (s!=now);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ReGraph</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;V[i].size();j++)</span><br><span class="line">      <span class="keyword">if</span> (color[i]!=color[V[i][j]])</span><br><span class="line">      du[color[i]]++;</span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y,ans=<span class="number">0</span>;</span><br><span class="line">  inti();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">while</span> (m--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">        V[x].push_back(y);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span> (!dfn[i]) Tarjan(i);</span><br><span class="line">  ReGraph();</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=col;i++) <span class="keyword">if</span> (du[i]==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ans) <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"0"</span>)&amp;<span class="number">0</span>;</span><br><span class="line">      ans=colt[i];</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans)&amp;<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="割点"><a href="#割点" class="headerlink" title="割点"></a>割点</h2><p><a href="https://www.luogu.com.cn/problem/P3388" target="_blank" rel="noopener">例题：LuoguP3388</a></p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><h4 id="Tarjan-1"><a href="#Tarjan-1" class="headerlink" title="Tarjan"></a>Tarjan</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="割边"><a href="#割边" class="headerlink" title="割边"></a>割边</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    dfn[now]=low[now]=++cnt;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;V[now].size();i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">int</span> next=V[now][i];</span><br><span class="line">        <span class="keyword">if</span> (!dfn[next])</span><br><span class="line">          &#123;</span><br><span class="line">            work(next,now);</span><br><span class="line">            low[now]=min(low[now],low[next]);</span><br><span class="line">            <span class="keyword">if</span> (low[next]&gt;dfn[now]) <span class="comment">/*SaveRoad*/</span></span><br><span class="line">          &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (next!=last&amp;&amp;dfn[next]&lt;dfn[now])</span><br><span class="line">          low[now]=min(low[now],dfn[next]);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;center&gt; Thematic003 &lt;/center&gt;
    
    </summary>
    
    
      <category term="Thematic" scheme="http://yoursite.com/categories/Thematic/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo NexT 插件 - APlayer</title>
    <link href="http://yoursite.com/Toolbox002/"/>
    <id>http://yoursite.com/Toolbox002/</id>
    <published>2021-07-18T06:46:52.490Z</published>
    <updated>2021-07-18T08:35:27.326Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>Such a beautiful HTML5 music player.</p></blockquote><a id="more"></a><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2>        <div id="aplayer-RNZEfkyB" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;"></div>  <script>  var options = {"narrow":false,"autoplay":false,"showlrc":0,"mini":false,"theme":"#8b4513","mutex":true,"music":[{"title":"Dream goes on","author":"Tiny Minim","url":"https://666dhg.github.io/data/Playlist/DGO.mp3","pic":"https://666dhg.github.io/data/Playlist/DGO.jpg"},{"title":"Frey's Philosophy","author":"Powerless","url":"https://666dhg.github.io/data/Playlist/FP.mp3","pic":"https://666dhg.github.io/data/Playlist/FP.jpg"},{"title":"Cyanine","author":"jioyi","url":"https://666dhg.github.io/data/Playlist/Cyanine.mp3","pic":"https://666dhg.github.io/data/Playlist/Cyanine.jpg"}]};  options.element = document.getElementById("aplayer-RNZEfkyB");  var ap = new APlayer(options);    window.aplayers || (window.aplayers = []);  window.aplayers.push(ap);  </script><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="准备音乐、曲绘直链"><a href="#准备音乐、曲绘直链" class="headerlink" title="准备音乐、曲绘直链"></a>准备音乐、曲绘直链</h3><p>一个能生成主流音乐平台直链的<a href="https://music.xf1433.com/" target="_blank" rel="noopener">网站</a></p><h3 id="安装APlayer"><a href="#安装APlayer" class="headerlink" title="安装APlayer"></a>安装APlayer</h3><p>在站点根目录下打开 Git 命令行 <code>npm install hexo-tag-aplayer --save</code></p><h3 id="插入代码"><a href="#插入代码" class="headerlink" title="插入代码"></a>插入代码</h3><blockquote><p>下面是<a href="/Toolbox002/#预览">预览</a>的代码，参数请参考 <a href="https://aplayer.js.org/#/zh-Hans/" target="_blank" rel="noopener"><strong>官方文档</strong></a></p></blockquote><div class="note warning">            <h5 id="请注意-json-语法"><a href="#请注意-json-语法" class="headerlink" title="请注意 json 语法"></a>请注意 <code>json</code> 语法</h5>          </div><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"mini"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"theme"</span>: <span class="string">"#8b4513"</span>,</span><br><span class="line">    <span class="attr">"autoplay"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"mutex"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"music"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"title"</span>: <span class="string">"Dream goes on"</span>,</span><br><span class="line">            <span class="attr">"author"</span>: <span class="string">"Tiny Minim"</span>,</span><br><span class="line">            <span class="attr">"url"</span>: <span class="string">"https://666dhg.github.io/data/Playlist/DGO.mp3"</span>,</span><br><span class="line">            <span class="attr">"pic"</span>: <span class="string">"https://666dhg.github.io/data/Playlist/DGO.jpg"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"title"</span>: <span class="string">"Frey's Philosophy"</span>,</span><br><span class="line">            <span class="attr">"author"</span>: <span class="string">"Powerless"</span>,</span><br><span class="line">            <span class="attr">"url"</span>: <span class="string">"https://666dhg.github.io/data/Playlist/FP.mp3"</span>,</span><br><span class="line">            <span class="attr">"pic"</span>: <span class="string">"https://666dhg.github.io/data/Playlist/FP.jpg"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"title"</span>: <span class="string">"Cyanine"</span>,</span><br><span class="line">            <span class="attr">"author"</span>: <span class="string">"jioyi"</span>,</span><br><span class="line">            <span class="attr">"url"</span>: <span class="string">"https://666dhg.github.io/data/Playlist/Cyanine.mp3"</span>,</span><br><span class="line">            <span class="attr">"pic"</span>: <span class="string">"https://666dhg.github.io/data/Playlist/Cyanine.jpg"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Such a beautiful HTML5 music player.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="ToolBox" scheme="http://yoursite.com/categories/ToolBox/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo NexT 插件 - 心知天气</title>
    <link href="http://yoursite.com/Toolbox001/"/>
    <id>http://yoursite.com/Toolbox001/</id>
    <published>2020-02-23T08:16:30.871Z</published>
    <updated>2021-07-18T08:36:19.802Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>记得带伞</p></blockquote><a id="more"></a><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h3><p>到<a href="https://www.seniverse.com/" target="_blank" rel="noopener">官网</a>注册账号</p><p>接着在<a href="https://www.seniverse.com/products?iid=new" target="_blank" rel="noopener">这里</a>申请<strong>免费版产品</strong></p><h3 id="自定义浮窗样式"><a href="#自定义浮窗样式" class="headerlink" title="自定义浮窗样式"></a>自定义浮窗样式</h3><p>在<a href="https://www.seniverse.com/widgetv3" target="_blank" rel="noopener">这里</a>自定义浮窗样式</p><p><img src="/data/Toolbox002/2.png" alt=""></p><p>完成后点击 <strong>“生成代码”</strong></p><h3 id="配置到-Hexo-中"><a href="#配置到-Hexo-中" class="headerlink" title="配置到 Hexo 中"></a>配置到 Hexo 中</h3><p>复制 <strong>JS代码</strong></p><p><img src="/data/Toolbox002/3.png" alt=""></p><p>打开 <code>\themes\next\layout\_layout.swig</code></p><p>在此处插入刚刚复制的代码</p><p><img src="/data/Toolbox002/4.png" alt=""></p><p>这样就好啦</p><h2 id="高级设置"><a href="#高级设置" class="headerlink" title="高级设置"></a>高级设置</h2><h3 id="修改浮窗位置"><a href="#修改浮窗位置" class="headerlink" title="修改浮窗位置"></a>修改浮窗位置</h3><p>插入对应代码到文件 <code>\themes\next\source\css\main.styl</code> 最后</p><p><strong>左上角（默认）</strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#tp-weather-widget</span> <span class="selector-class">.sw-container</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">right</span>: unset;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: unset;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>左下角</strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#tp-weather-widget</span> <span class="selector-class">.sw-container</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">right</span>: unset;</span><br><span class="line">  <span class="attribute">top</span>: unset;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>右上角</strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#tp-weather-widget</span> <span class="selector-class">.sw-container</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: unset;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: unset;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>右下角</strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#tp-weather-widget</span> <span class="selector-class">.sw-container</span> &#123;</span><br><span class="line">  <span class="attribute">left</span>: unset;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">top</span>: unset;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;记得带伞&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="ToolBox" scheme="http://yoursite.com/categories/ToolBox/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串</title>
    <link href="http://yoursite.com/Thematic002/"/>
    <id>http://yoursite.com/Thematic002/</id>
    <published>2020-01-28T10:03:25.433Z</published>
    <updated>2021-07-18T12:48:09.907Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><center> Thematic002 </center><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="/Thematic002/#Trie字典树">Trie字典树</a></li><li><a href="/Thematic002/#KMP">KMP</a></li><li><a href="/Thematic002/#AC自动机">AC自动机</a></li><li><a href="/Thematic002/#Manacher">Manacher</a></li><li><a href="/Thematic002/#回文自动机">回文自动机</a></li><li><a href="/Thematic002/#后缀数组">后缀数组</a></li><li><a href="/Thematic002/#后缀自动机">后缀自动机</a></li></ul><hr><h2 id="Trie字典树"><a href="#Trie字典树" class="headerlink" title="Trie字典树"></a>Trie字典树</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>我们先来看看什么是Trie字典树</p><p><img src="/data/Thematic002/1.png" alt=""></p><p>可以发现，这棵树的每一条边都有一个字符</p><p>有一些点是黄色的，表示它们被标记了</p><p>那么，哪些字符串在这棵树中出现过呢？</p><p>从树的根节点到每一个被标记的点的路径上的字符串就是对应黄色点所表示的字符串</p><p>举个例子，$5$ 是一个被标记的点</p><p>说明这一条从根节点到 $5$ 的路径 （ $1\rightarrow2\rightarrow5$ ）上的字符串，也就是 <code>ad</code> ，就在这棵树内</p><h3 id="插入字符串（构建Trie字典树）"><a href="#插入字符串（构建Trie字典树）" class="headerlink" title="插入字符串（构建Trie字典树）"></a>插入字符串（构建Trie字典树）</h3><ul><li><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4></li></ul><h5 id="1-初始化"><a href="#1-初始化" class="headerlink" title="1. 初始化"></a>1. 初始化</h5><p>新建一个根节点 $1$</p><p><img src="/data/Thematic002/2.png" alt=""></p><h5 id="2-插入字符串"><a href="#2-插入字符串" class="headerlink" title="2. 插入字符串"></a>2. 插入字符串</h5><p>我们从根节点开始，即 <code>now=1</code></p><p>接着看与 <code>now</code> 点相连的边中有没有字符为 <code>s</code> 的</p><ul><li><p>如果有，跟着这条边走，即 <code>now=s的点编号</code></p></li><li><p>如果没有，新建一个点，即 <code>now=++cnt (cnt为点的数量)</code></p></li></ul><p>最后，标记终点，即 <code>over[now]=true</code></p><ul><li><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3></li></ul><p>我们现在要往一个空的Trie字典树里插入 <code>beep</code></p><p><img src="/data/Thematic002/2.png" alt=""></p><p>1.<code>now=1</code> ，向下查找，发现没有 <code>b</code> ，插入 <code>b</code> ，<code>now=++cnt=2</code></p><p><img src="/data/Thematic002/2.1.png" alt=""></p><p>2.<code>now=2</code> ，向下查找，发现没有 <code>e</code> ，插入 <code>e</code> ，<code>now=++cnt=3</code></p><p><img src="/data/Thematic002/2.2.png" alt=""></p><p>3.<code>now=3</code> ，向下查找，发现没有 <code>e</code> ，插入 <code>e</code> ，<code>now=++cnt=4</code></p><p><img src="/data/Thematic002/2.3.png" alt=""></p><p>4.<code>now=4</code> ，向下查找，发现没有 <code>p</code> ，插入 <code>p</code> ，<code>now=++cnt=5</code></p><p><img src="/data/Thematic002/2.4.png" alt=""></p><p>5.<code>now=5</code> ，结束，标记 $5$</p><p><img src="/data/Thematic002/2.5.png" alt=""></p><p>现在，往里面继续插入 <code>bed</code></p><p>6.<code>now=1</code> ，向下查找 ，发现有 <code>b</code> ，跟着走 ，<code>now=2</code></p><p><img src="/data/Thematic002/2.6.png" alt=""></p><p>7.<code>now=2</code> ，向下查找 ，发现有 <code>e</code> ，跟着走 ，<code>now=3</code></p><p><img src="/data/Thematic002/2.7.png" alt=""></p><p>8.<code>now=3</code> ，向下查找 ，发现没有 <code>d</code> ，插入 <code>d</code> ，<code>now=++cnt=6</code></p><p><img src="/data/Thematic002/2.8.png" alt=""></p><p>9.<code>now=6</code> ，结束 ，标记 $6$</p><p><img src="/data/Thematic002/2.9.png" alt=""></p><ul><li><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> over[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>,trie[maxn][maxm];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> now=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;str.size();i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> next=str[i]-<span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span>(!trie[now][next])</span><br><span class="line">            trie[now][next]=++cnt;</span><br><span class="line">        now=trie[now][next];</span><br><span class="line">    &#125;</span><br><span class="line">    over[now]=<span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h2 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h2><hr><h2 id="AC自动机"><a href="#AC自动机" class="headerlink" title="AC自动机"></a>AC自动机</h2><hr><h2 id="Manacher"><a href="#Manacher" class="headerlink" title="Manacher"></a>Manacher</h2><hr><h2 id="回文自动机"><a href="#回文自动机" class="headerlink" title="回文自动机"></a>回文自动机</h2><hr><h2 id="后缀数组"><a href="#后缀数组" class="headerlink" title="后缀数组"></a>后缀数组</h2><hr><h2 id="后缀自动机"><a href="#后缀自动机" class="headerlink" title="后缀自动机"></a>后缀自动机</h2>]]></content>
    
    <summary type="html">
    
      &lt;center&gt; Thematic002 &lt;/center&gt;
    
    </summary>
    
    
      <category term="Thematic" scheme="http://yoursite.com/categories/Thematic/"/>
    
    
  </entry>
  
  <entry>
    <title>Prove001</title>
    <link href="http://yoursite.com/Prove001/"/>
    <id>http://yoursite.com/Prove001/</id>
    <published>2020-01-21T03:41:38.317Z</published>
    <updated>2021-07-18T12:08:06.873Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>详细代码请到 「<a href="\Thematic001">Thematic001. 数论专题</a>」 中查看</p></blockquote><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="/Prove001/#分解质因数">分解质因数</a></li><li><a href="/Prove001/#欧拉函数">欧拉函数</a></li><li><a href="/Prove001/#约数">约数</a></li><li><a href="/Prove001/#最大公约数 &amp; 最小公倍数">最大公约数 &amp; 最小公倍数</a></li><li><a href="/Prove001/#乘法逆元">乘法逆元</a></li><li><a href="/Prove001/#欧几里得（拓展）">欧几里得（拓展）</a></li><li><a href="/Prove001/#中国剩余定理">中国剩余定理</a></li><li><a href="/Prove001/#中国剩余定理（拓展）">中国剩余定理（拓展）</a></li></ul><hr><h2 id="分解质因数"><a href="#分解质因数" class="headerlink" title="分解质因数"></a>分解质因数</h2><script type="math/tex; mode=display">\large n=p_{1}^{c_{1}}p_{2}^{c_{2}}\cdots p_{m}^{c_{m}}</script><hr><h2 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>$\varphi$($x$) 表示求在 $1$ 到 $x$ 的整数中有多少个数与 $x$ 互质</p><h3 id="求-varphi-n"><a href="#求-varphi-n" class="headerlink" title="求 $\varphi(n)$"></a>求 $\varphi(n)$</h3><script type="math/tex; mode=display">\large \varphi(n)=n\times(1-\frac{1}{p_{1}})\times(1-\frac{1}{p_{2}})\times\cdots\times(1-\frac{1}{p_{m}})</script><h3 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h3><ul><li>$\varphi(1)=\varphi(2)=1$，其余的欧拉函数均为偶数</li><li>当 $n$ 为素数时，$\varphi(n)=n-1$</li><li>欧拉函数是积性函数，但不是完全积性。<blockquote><p>即当 $\gcd(n,m)=1$ 时，$\varphi(nm)=\varphi(n)\varphi(m)$</p></blockquote></li><li>当 $n$ 为奇数时，$\varphi(2n)=\varphi(n)$</li><li>当 $n$ 为素数时，$\varphi(n^{k})=(n-1)\times n^{k-1}$</li><li>当 $n \geq 1$ 时，$1$ 到 $n$ 中所有与 $n$ 互质的数的和为 $\frac{\varphi(n)}{2}\times n$<blockquote><p>证明：<br>若 $\gcd(n,i)=1$，那么 $\gcd(n,n-i)=1$<br>即 与 $n$ 互质的数是<strong>成对出现</strong>的，而且每一对的和<strong>都为 $n$</strong>。</p></blockquote></li><li>如果 $k \bmod p = 0$ 且 $p$ 为素数，那么 $\varphi(kp)=\varphi(k)\times p$</li><li>如果 $k \bmod p \neq 0$ 且 $p$ 为素数，那么 $\varphi(kp)=\varphi(k)\times (p-1)$</li><li>如果 $\gcd(a,p)=1$ ，那么 $a^{\varphi(p)}\equiv 1 \pmod p$</li></ul><hr><h2 id="约数"><a href="#约数" class="headerlink" title="约数"></a>约数</h2><h3 id="求-n-的正约数个数"><a href="#求-n-的正约数个数" class="headerlink" title="求 $n$ 的正约数个数"></a>求 $n$ 的正约数个数</h3><script type="math/tex; mode=display">\large (c_{1}+1)(c_{2}+2)\cdots(c_{m}+m)</script><h3 id="求-n-所有正约数的和"><a href="#求-n-所有正约数的和" class="headerlink" title="求 $n$ 所有正约数的和"></a>求 $n$ 所有正约数的和</h3><script type="math/tex; mode=display">\large (1+p_{1}+p_{1}^{2}+\cdots+p_{1}^{c_{1}})\cdots(1+p_{m}+p_{m}^{2}+\cdots+p_{m}^{c_{m}})</script><hr><h2 id="最大公约数-amp-最小公倍数"><a href="#最大公约数-amp-最小公倍数" class="headerlink" title="最大公约数 &amp; 最小公倍数"></a>最大公约数 &amp; 最小公倍数</h2><h3 id="定理"><a href="#定理" class="headerlink" title="定理"></a>定理</h3><script type="math/tex; mode=display">\large \gcd(a,b)\times \operatorname{lcm}(a,b)=a\times b</script><script type="math/tex; mode=display">\large \gcd(ka,kb)=k\times \gcd(a,b)</script><script type="math/tex; mode=display">\large \operatorname{lcm}(ka,kb)=k\times \operatorname{lcm}(a,b)</script><script type="math/tex; mode=display">\large \operatorname{lcm}(\frac{S}{a},\frac{S}{b})=\frac{S}{\gcd(a,b)}</script><h3 id="求最大公倍数"><a href="#求最大公倍数" class="headerlink" title="求最大公倍数"></a>求最大公倍数</h3><ul><li>更相减损术</li><li>欧几里得（$\text{ }$辗转相除法$\text{ }$）</li><li>二进制算法</li></ul><hr><h2 id="乘法逆元"><a href="#乘法逆元" class="headerlink" title="乘法逆元"></a>乘法逆元</h2><h3 id="解决的问题"><a href="#解决的问题" class="headerlink" title="解决的问题"></a>解决的问题</h3><p>求下面关于 $x$ 的同余方程的整数解</p><script type="math/tex; mode=display">\large ax \equiv 1\pmod b</script><h3 id="定理-1"><a href="#定理-1" class="headerlink" title="定理"></a>定理</h3><script type="math/tex; mode=display">\large (\frac{a}{b}) \bmod p</script><script type="math/tex; mode=display">\large =(a\times a\text{的逆元}) \bmod p</script><h3 id="求乘法逆元"><a href="#求乘法逆元" class="headerlink" title="求乘法逆元"></a>求乘法逆元</h3><h4 id="欧几里得（拓展）"><a href="#欧几里得（拓展）" class="headerlink" title="欧几里得（拓展）"></a>欧几里得（拓展）</h4><p>可以将上面的同余方程化为</p><script type="math/tex; mode=display">\large ax=1-by</script><script type="math/tex; mode=display">\large ax+by=1</script><h4 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h4><p>这里需要用到<strong>费马小定理</strong></p><blockquote><p>若 $a$ 为正整数，$b$ 为素数，$a,b$ 互质，则有</p><script type="math/tex; mode=display">\large a^{b-1} \equiv 1 \pmod b</script></blockquote><p>把这个式子代入 $ax \equiv 1 \pmod b$ 中，得</p><script type="math/tex; mode=display">\large ax \equiv a^{b-1} \pmod b</script><script type="math/tex; mode=display">\large x \equiv a^{b-2} \pmod b</script><p>所以这时候方程的解就是 $a^{b-2} \bmod b$</p><hr><h2 id="欧几里得（拓展）-1"><a href="#欧几里得（拓展）-1" class="headerlink" title="欧几里得（拓展）"></a>欧几里得（拓展）</h2><h3 id="解决的问题-1"><a href="#解决的问题-1" class="headerlink" title="解决的问题"></a>解决的问题</h3><p>求下面关于 $x,y$ 的不定方程的整数解</p><script type="math/tex; mode=display">\large{ax+by=c}</script><h3 id="定理-2"><a href="#定理-2" class="headerlink" title="定理"></a>定理</h3><p>若不定方程有整数解，则</p><script type="math/tex; mode=display">\large{\gcd(a,b)|c}</script><p>若关于这个不定方程的一组解为 $x_{0},y_{0}$， 则这个不定方程的特殊解为</p><script type="math/tex; mode=display">\large{x_{special}=\frac{x_{0}\times c}{\gcd(a,b)}}</script><p>最小解为</p><script type="math/tex; mode=display">\large{\text{令 } t=\frac{b}{\gcd(a,b)}}</script><script type="math/tex; mode=display">\large{\text{则 }x_{min}=(x_{special} \bmod t+t) \bmod t}</script><hr><h2 id="中国剩余定理"><a href="#中国剩余定理" class="headerlink" title="中国剩余定理"></a>中国剩余定理</h2><h3 id="解决的问题-2"><a href="#解决的问题-2" class="headerlink" title="解决的问题"></a>解决的问题</h3><p>已知关于 $x$ 的同余方程组</p><script type="math/tex; mode=display">\large\begin{cases}x \equiv b_{1} \pmod{m_{1}}\\x \equiv b_{2} \pmod{m_{2}}\\\cdots\\x \equiv b_{n} \pmod{m_{n}}\\\end{cases}</script><p>并且</p><script type="math/tex; mode=display">\large \gcd(m_{1},m_{}2,\cdots,m_{n})=1</script><p>求整数解 $x$ </p><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><hr><h2 id="中国剩余定理（拓展）"><a href="#中国剩余定理（拓展）" class="headerlink" title="中国剩余定理（拓展）"></a>中国剩余定理（拓展）</h2><h3 id="解决的问题-3"><a href="#解决的问题-3" class="headerlink" title="解决的问题"></a>解决的问题</h3><p>已知关于 $x$ 的同余方程组</p><script type="math/tex; mode=display">\large\begin{cases}x \equiv b_{1} \pmod{m_{1}}\\x \equiv b_{2} \pmod{m_{2}}\\\cdots\\x \equiv b_{n} \pmod{m_{n}}\\\end{cases}</script><p>并且</p><script type="math/tex; mode=display">\large \gcd(m_{1},m_{}2,\cdots,m_{n})>1</script><p>求整数解 $x$ </p><h3 id="过程-1"><a href="#过程-1" class="headerlink" title="过程"></a>过程</h3><p>先看两个方程</p><script type="math/tex; mode=display">\large\begin{cases}x \equiv b_{1} \pmod{m_{1}}\\x \equiv b_{2} \pmod{m_{2}}\\\end{cases}</script><p>尝试合并两个式子</p><p>转换成</p><script type="math/tex; mode=display">\large\begin{cases}x=m_{1}\times x_{1}+b_{1}\\x=m_{2}\times x_{2}+b_{2}\\\end{cases}</script><p>则有</p><script type="math/tex; mode=display">\large m_{1}\times x_{1}+b_{1}=m_{2}\times x_{2}+b_{2}</script><p>由于 $x_{1},x_{2}$ 与符号无关，变形得到</p><script type="math/tex; mode=display">\large m_{1}\times x_{1}+m_{2}\times x_{2}=b_{2}-b_{1} (1)</script><p>此处放上欧几里得（拓展）的式子</p><script type="math/tex; mode=display">\large ax+by=c</script><p>由裴蜀定理得</p><script type="math/tex; mode=display">\large\begin{cases}\text{此式有整数解，}\gcd(a,b)\mid c\\\text{此式无整数解，}\gcd(a,b)\nmid c\\\end{cases}</script><p>带入此式，得</p><script type="math/tex; mode=display">\large\begin{cases}\text{此式有整数解，}\gcd(x_{1},x_{2})\mid (b_{2}-b_{1})\\\text{此式无整数解，}\gcd(x_{1},x_{2})\nmid (b_{2}-b_{1})\\\end{cases}</script><p>令</p><script type="math/tex; mode=display">\large g=\gcd(x_{1},x_{2})</script><script type="math/tex; mode=display">\large c=b_{2}-b_{1}</script><p>则有</p><script type="math/tex; mode=display">\large m_{1}\times x_{1}+m_{2}\times x_{2}=g (2)</script><p>用欧几里得（拓展）解 $(2)$ 得 </p><script type="math/tex; mode=display">\large x_{1}=k_{1}'</script><script type="math/tex; mode=display">\large x_{2}=k_{2}'</script><p>设 $(1)$ 的解为</p><script type="math/tex; mode=display">\large x_{1}=k_{1}</script><script type="math/tex; mode=display">\large x_{2}=k_{2}</script><p>则有</p><script type="math/tex; mode=display">\large k_{1}=\frac{k_{1}'\times c}{g}</script><script type="math/tex; mode=display">\large k_{2}=\frac{k_{2}'\times c}{g}</script><script type="math/tex; mode=display">\large x_{1}=k_{1}+ \frac{m_{2}}{g}\times l(3) \text{ }\text{ }\text{ }(\text{ }l\text{为参数 })</script><script type="math/tex; mode=display">\large x_{2}=k_{2}- \frac{m_{1}}{g}\times l</script><blockquote><p>由前面的「<a href="/Prove001/#欧几里得（拓展）">欧几里得（拓展）</a>」的最小值公式得</p><script type="math/tex; mode=display">\large{\text{令 } t=\frac{m_{2}}{\gcd(m_{1},m_{2})}}</script><script type="math/tex; mode=display">\large k_{1_{min}}=(k_{1}\bmod t+t)\bmod t</script></blockquote><p>将 $(3)$ 代入前面的 $x=m_{1}\times x_{1}+b_{1}$ 得</p><script type="math/tex; mode=display">\large x=m_{1}\times(k_{1}+ \frac{m_{2}}{g}\times l)+b_{1}</script><script type="math/tex; mode=display">\large x=m_{1}\times k_{1}+ m_{1}\times \frac{m_{2}}{g}\times l+b_{1}</script><script type="math/tex; mode=display">\large\text{令 } B=m_{1}\times k_{1}+b_{1}</script><script type="math/tex; mode=display">\large x=B+m_{1}\times \frac{m_{2}}{g}\times l</script><script type="math/tex; mode=display">\large\text{即 } B=x=B+\operatorname{lcm}(m_{1},m_{2})\times l</script><script type="math/tex; mode=display">\large\text{等价于 }x\equiv B \pmod {\operatorname{lcm}(m_{1},m_{2})}</script><p>合并完成！</p><p>继续合并……</p><p>合并到最后，方程组就变成了</p><script type="math/tex; mode=display">\large x\equiv x_{0} \pmod {\operatorname{lcm}(m_{1},m_{2},\cdots,m_{n})}</script><p>$x_{0}$ 即为方程组的一个整数解</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;详细代码请到 「&lt;a href=&quot;\Thematic001&quot;&gt;Thematic001. 数论专题&lt;/a&gt;」 中查看&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Prove" scheme="http://yoursite.com/categories/Prove/"/>
    
    
  </entry>
  
  <entry>
    <title>数论</title>
    <link href="http://yoursite.com/Thematic001/"/>
    <id>http://yoursite.com/Thematic001/</id>
    <published>2020-01-17T12:05:20.659Z</published>
    <updated>2021-07-18T12:53:01.476Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><center> Thematic001 </center><a id="more"></a><blockquote><p>更多细节请到 「<a href="\Prove001">Prove001</a>」 中查看</p></blockquote><hr><h1 id="素数"><a href="#素数" class="headerlink" title="素数"></a>素数</h1><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><ul><li><h3 id="LuoguP3383"><a href="#LuoguP3383" class="headerlink" title="LuoguP3383"></a><a href="https://www.luogu.com.cn/problem/P3383" target="_blank" rel="noopener">LuoguP3383</a></h3></li></ul><h2 id="暴力-（-O-n-sqrt-n-）"><a href="#暴力-（-O-n-sqrt-n-）" class="headerlink" title="暴力 （$O(n\sqrt{n})$）"></a>暴力 （$O(n\sqrt{n})$）</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> Prime[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Check</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (i&lt;<span class="number">2</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">2</span>||i==<span class="number">3</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            Prime[i]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=<span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(i));j++) <span class="keyword">if</span> (i%j==<span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            Prime[i]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        Prime[i]=!Prime[i];</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="埃式筛法-（-O-n-log-n-）"><a href="#埃式筛法-（-O-n-log-n-）" class="headerlink" title="埃式筛法 （$O(n\log n)$）"></a>埃式筛法 （$O(n\log n)$）</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAXN];</span><br><span class="line"><span class="keyword">int</span> size,prime[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FindPrime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    vis[<span class="number">0</span>]=vis[<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++) <span class="keyword">if</span> (!vis[i])</span><br><span class="line">      &#123;</span><br><span class="line">        prime[++size]=i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">2</span>;i*j&lt;=n;j++) vis[i*j]=<span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="欧拉筛法-（-O-n-）"><a href="#欧拉筛法-（-O-n-）" class="headerlink" title="欧拉筛法 （$O(n)$）"></a>欧拉筛法 （$O(n)$）</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAXN];</span><br><span class="line"><span class="keyword">int</span> size,prime[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FindPrime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    vis[<span class="number">0</span>]=vis[<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i]) prime[++size]=i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=size&amp;&amp;i*prime[j]&lt;=n;j++)</span><br><span class="line">          &#123;</span><br><span class="line">            vis[i*prime[j]]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>$\varphi$($x$) 表示求在 $1 $ 到 $ x$ 的整数中有多少个数与 $x$ 互质</p><h2 id="直接求-varphi-n-（-O-sqrt-n-）"><a href="#直接求-varphi-n-（-O-sqrt-n-）" class="headerlink" title="直接求 $\varphi$ ($n$) （$O(\sqrt{n})$）"></a>直接求 $\varphi$ ($n$) （$O(\sqrt{n})$）</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">FindPhi</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (n%i==<span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            ans-=ans/i;</span><br><span class="line">            <span class="keyword">while</span> (n%i==<span class="number">0</span>) n/=i;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">if</span> (n&gt;<span class="number">1</span>) ans-=ans/n;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="同时求-varphi-1-到-varphi-n-时与-1-到-n-的素数-（-O-n-）"><a href="#同时求-varphi-1-到-varphi-n-时与-1-到-n-的素数-（-O-n-）" class="headerlink" title="同时求 $\varphi$ ($1$) 到  $\varphi$ ($n$)时与 $1$ 到 $n$ 的素数 （$O(n)$）"></a>同时求 $\varphi$ ($1$) 到  $\varphi$ ($n$)时与 $1$ 到 $n$ 的素数 （$O(n)$）</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAXN];</span><br><span class="line"><span class="keyword">int</span> size,Prime[MAXN],Phi[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_Phi_and_Prime</span><span class="params">(<span class="keyword">int</span> n)</span>  </span></span><br><span class="line"><span class="function">  </span>&#123;  </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;n;i++)  </span><br><span class="line">      &#123;  </span><br><span class="line">        <span class="keyword">if</span> (!vis[i])  </span><br><span class="line">          &#123;  </span><br><span class="line">            Prime[++size]=i;  </span><br><span class="line">            Phi[i]=i<span class="number">-1</span>;  </span><br><span class="line">          &#125;  </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=size&amp;&amp;i*Prime[j]&lt;n;j++)  </span><br><span class="line">          &#123;  </span><br><span class="line">            vis[i*Prime[j]]=<span class="literal">true</span>;  </span><br><span class="line">            <span class="keyword">if</span> (i%Prime[j]==<span class="number">0</span>)  </span><br><span class="line">              &#123;  </span><br><span class="line">                Phi[i*Prime[j]]=Phi[i]*Prime[j];  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">              &#125;  </span><br><span class="line">            <span class="keyword">else</span> Phi[i*Prime[j]]=Phi[i]*(Prime[j]<span class="number">-1</span>);</span><br><span class="line">          &#125;  </span><br><span class="line">      &#125;  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="约数"><a href="#约数" class="headerlink" title="约数"></a>约数</h1><h2 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h2><ul><li><h3 id="Loj10205（大数据）"><a href="#Loj10205（大数据）" class="headerlink" title="Loj10205（大数据）"></a><a href="https://loj.ac/problem/10205" target="_blank" rel="noopener">Loj10205（大数据）</a></h3></li><li><h3 id="LuoguP2152（超大数据）"><a href="#LuoguP2152（超大数据）" class="headerlink" title="LuoguP2152（超大数据）"></a><a href="https://www.luogu.com.cn/problem/P2152" target="_blank" rel="noopener">LuoguP2152（超大数据）</a></h3></li></ul><h2 id="辗转相除法"><a href="#辗转相除法" class="headerlink" title="辗转相除法"></a>辗转相除法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GCD</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> GCD(b,a%b);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="二进制算法"><a href="#二进制算法" class="headerlink" title="二进制算法"></a>二进制算法</h2><ul><li><h3 id="低精"><a href="#低精" class="headerlink" title="低精"></a>低精</h3></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GCD</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">if</span> (x==<span class="number">0</span>) <span class="keyword">return</span> y;</span><br><span class="line">    <span class="keyword">if</span> (y==<span class="number">0</span>) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;(x&amp;<span class="number">1</span>)==<span class="number">0</span>;i++) x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (j=<span class="number">0</span>;(y&amp;<span class="number">1</span>)==<span class="number">0</span>;j++) y&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (j&lt;i) i=j;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (x&lt;y) x^=y,y^=x,x^=y;</span><br><span class="line">        <span class="keyword">if</span> ((x-=y)==<span class="number">0</span>) <span class="keyword">return</span> y&lt;&lt;i;</span><br><span class="line">        <span class="keyword">while</span> ((x&amp;<span class="number">1</span>)==<span class="number">0</span>) x&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li><h3 id="高精"><a href="#高精" class="headerlink" title="高精"></a>高精</h3></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Data</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">2005</span>];</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="keyword">char</span> c[<span class="number">10005</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">div2</span><span class="params">(Data &amp;x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.a[x.num]==<span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        x.a[x.num<span class="number">-1</span>]+=<span class="number">10000000</span>;</span><br><span class="line">        x.num--;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=x.num;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.a[i]&amp;<span class="number">1</span>) x.a[i<span class="number">-1</span>]+=<span class="number">10000000</span>;</span><br><span class="line">        x.a[i]&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">plus2</span><span class="params">(Data &amp;x)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x.num;i++) x.a[i]&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;x.num;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.a[i]&gt;=<span class="number">10000000</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            x.a[i]-=<span class="number">10000000</span>;</span><br><span class="line">            x.a[i+<span class="number">1</span>]++;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">if</span> (x.a[x.num]&gt;=<span class="number">10000000</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        x.a[x.num]-=<span class="number">10000000</span>;</span><br><span class="line">        x.a[x.num+<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">        x.num++;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sub</span><span class="params">(Data &amp;x,Data y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=y.num;i++) x.a[i]-=y.a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;x.num;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.a[i]&lt;<span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            x.a[i+<span class="number">1</span>]--;</span><br><span class="line">            x.a[i]+=<span class="number">10000000</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">if</span> (x.a[x.num]==<span class="number">0</span>) x.num--;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">comp</span><span class="params">(Data &amp;x,Data &amp;y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.num&gt;y.num) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (x.num&lt;y.num)</span><br><span class="line">      &#123;</span><br><span class="line">        swap(x.num,y.num);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=max(x.num,y.num);i++) swap(x.a[i],y.a[i]);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=x.num;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.a[i]&gt;y.a[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (x.a[i]&lt;y.a[i])</span><br><span class="line">          &#123;</span><br><span class="line">            swap(x.num,y.num);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=max(x.num,y.num);i++) swap(x.a[i],y.a[i]);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    Data n,m;</span><br><span class="line">    <span class="keyword">int</span> stop,x,y,t,cnt;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,c);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="built_in">strlen</span>(c)<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i-=<span class="number">7</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        n.num++;</span><br><span class="line">        n.a[n.num]=<span class="number">0</span>;</span><br><span class="line">        stop=max(i<span class="number">-6</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=i;j&gt;=stop;j--) n.a[n.num]+=(c[j]-<span class="string">'0'</span>)*<span class="built_in">pow</span>(<span class="number">10</span>,i-j);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,c);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="built_in">strlen</span>(c)<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i-=<span class="number">7</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        m.num++;</span><br><span class="line">        m.a[m.num]=<span class="number">0</span>;</span><br><span class="line">        stop=max(i<span class="number">-6</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=i;j&gt;=stop;j--) m.a[m.num]+=(c[j]-<span class="string">'0'</span>)*<span class="built_in">pow</span>(<span class="number">10</span>,i-j);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">for</span> (x=<span class="number">0</span>;!(n.a[<span class="number">1</span>]&amp;<span class="number">1</span>);x++) div2(n);</span><br><span class="line">    <span class="keyword">for</span> (y=<span class="number">0</span>;!(m.a[<span class="number">1</span>]&amp;<span class="number">1</span>);y++) div2(m);</span><br><span class="line">    <span class="keyword">if</span> (y&lt;x) x=y;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (comp(n,m)) </span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">while</span>(x--) plus2(n);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,n.a[n.num]);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=n.num<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">              &#123;</span><br><span class="line">                t=n.a[i];</span><br><span class="line">                cnt=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (t/<span class="number">10</span>) t/=<span class="number">10</span>,cnt++;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">7</span>-cnt;i++) <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>,n.a[i]);</span><br><span class="line">              &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        sub(n,m);</span><br><span class="line">        <span class="keyword">while</span> (!(n.a[<span class="number">1</span>]&amp;<span class="number">1</span>)) div2(n);</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="乘法逆元"><a href="#乘法逆元" class="headerlink" title="乘法逆元"></a>乘法逆元</h1><h2 id="解决的问题"><a href="#解决的问题" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>求下面关于 $x$ 的同余方程的整数解</p><script type="math/tex; mode=display">\large ax\equiv 1 \pmod b</script><h2 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a>例题</h2><ul><li><h3 id="LuoguP3383-1"><a href="#LuoguP3383-1" class="headerlink" title="LuoguP3383"></a><a href="https://www.luogu.com.cn/problem/P3383" target="_blank" rel="noopener">LuoguP3383</a></h3></li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul><li><h3 id="欧几里得（拓展）"><a href="#欧几里得（拓展）" class="headerlink" title="欧几里得（拓展）"></a>欧几里得（拓展）</h3></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">exgcd</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> &amp;x,<span class="keyword">long</span> <span class="keyword">long</span> &amp;y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        x=<span class="number">1</span>,y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> r=exgcd(b,a%b,x,y);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> t=x;</span><br><span class="line">    x=y;</span><br><span class="line">    y=t-(a/b)*y;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li><h3 id="快速幂"><a href="#快速幂" class="headerlink" title="快速幂"></a>快速幂</h3></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">fastpow</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> p)</span> <span class="comment">//a^b%p</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">1</span>) <span class="keyword">return</span> a%p;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> half=fastpow(a,b/<span class="number">2</span>,p);</span><br><span class="line">    <span class="keyword">if</span> (b&amp;<span class="number">1</span>) <span class="keyword">return</span> ((half%p*half%p)%p*a)%p;</span><br><span class="line">    <span class="keyword">return</span> (half%p*half%p)%p;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x=fastpow(a,b<span class="number">-2</span>,b);</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li><h3 id="线性算法求-1-到-n-模-b-的逆元-（-O-n-）"><a href="#线性算法求-1-到-n-模-b-的逆元-（-O-n-）" class="headerlink" title="线性算法求 $1$ 到 $n$ 模 $b$ 的逆元 （$O(n)$）"></a>线性算法求 $1$ 到 $n$ 模 $b$ 的逆元 （$O(n)$）</h3></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    inv[i]=(p-p/i)*inv[p%i]%p;</span><br></pre></td></tr></table></figure><hr><h1 id="欧几里得（拓展）-1"><a href="#欧几里得（拓展）-1" class="headerlink" title="欧几里得（拓展）"></a>欧几里得（拓展）</h1><h2 id="解决的问题-1"><a href="#解决的问题-1" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>求下面关于 $x,y$ 的不定方程的整数解</p><script type="math/tex; mode=display">\large{ax+by=c}</script><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">exGCD</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> &amp;x,<span class="keyword">long</span> <span class="keyword">long</span> &amp;y)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        x=<span class="number">1</span>,y=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> r=exGCD(b,a%b,x,y);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> t=x;</span><br><span class="line">    x=y;</span><br><span class="line">    y=t-(a/b)*y;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="中国剩余定理"><a href="#中国剩余定理" class="headerlink" title="中国剩余定理"></a>中国剩余定理</h1><h2 id="解决的问题-2"><a href="#解决的问题-2" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>已知关于 $x$ 的同余方程组</p><script type="math/tex; mode=display">\large\begin{cases}x\equiv b_{1} \pmod m_{1}\\x\equiv b_{2} \pmod m_{2}\\\cdots\\x\equiv b_{k} \pmod m_{k}\\\end{cases}</script><p>并且</p><script type="math/tex; mode=display">\large \gcd(m_{1},m_{}2,\cdots,m_{k})=1</script><p>求整数解 $x$ </p><h2 id="例题-3"><a href="#例题-3" class="headerlink" title="例题"></a>例题</h2><ul><li><h3 id="LuoguP1495"><a href="#LuoguP1495" class="headerlink" title="LuoguP1495"></a><a href="https://www.luogu.com.cn/problem/P1495" target="_blank" rel="noopener">LuoguP1495</a></h3></li></ul><h2 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">CRT</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> M=<span class="number">1</span>,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) M*=m[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> tM=M/m[i];</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> x,y;</span><br><span class="line">        exgcd(tM,m[i],x,y);</span><br><span class="line">        ans=(ans+tM*x*a[i])%M;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> (ans+M)%M;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="中国剩余定理（拓展）"><a href="#中国剩余定理（拓展）" class="headerlink" title="中国剩余定理（拓展）"></a>中国剩余定理（拓展）</h1><h2 id="解决的问题-3"><a href="#解决的问题-3" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>已知关于 $x$ 的同余方程组</p><script type="math/tex; mode=display">\large\begin{cases}x\equiv b_{1} \pmod m_{1}\\x\equiv b_{2} \pmod m_{2}\\\cdots\\x\equiv b_{k} \pmod m_{k}\\\end{cases}</script><p>并且</p><script type="math/tex; mode=display">\large \gcd(m_{1},m_{}2,\cdots,m_{n})>1</script><p>求整数解 $x$ </p><h2 id="例题-4"><a href="#例题-4" class="headerlink" title="例题"></a>例题</h2><ul><li><h3 id="LuoguP4777"><a href="#LuoguP4777" class="headerlink" title="LuoguP4777"></a><a href="https://www.luogu.com.cn/problem/P4777" target="_blank" rel="noopener">LuoguP4777</a></h3></li></ul><h2 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">exCRT</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> M=m[<span class="number">1</span>],ans=b[<span class="number">1</span>],x,y,g,t,k1;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">      &#123;</span><br><span class="line">        g=exgcd(M,m[i],x,y);</span><br><span class="line">        <span class="keyword">if</span> ((b[i]-ans)%g) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        k1=x*(b[i]-ans)/g;</span><br><span class="line">        t=m[i]/g;</span><br><span class="line">        x=(k1%t+t)%t;</span><br><span class="line">        ans=M*x+ans;</span><br><span class="line">        M=M/g*m[i];</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> (ans%M+M)%M;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="BSGS"><a href="#BSGS" class="headerlink" title="BSGS"></a>BSGS</h1><h2 id="解决的问题-4"><a href="#解决的问题-4" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>已知关于 $x$ 的方程</p><script type="math/tex; mode=display">\large a^{x}\equiv b\text{ }(\text{ }mod\text{ }p\text{ })</script><p>并且</p><script type="math/tex; mode=display">\large gcd(a,p)=1</script><p>已知 $a,b,p$，求整数 $x$</p><h2 id="例题-5"><a href="#例题-5" class="headerlink" title="例题"></a>例题</h2><ul><li><h3 id="LuoguP3846"><a href="#LuoguP3846" class="headerlink" title="LuoguP3846"></a><a href="https://www.luogu.com.cn/problem/P3846" target="_blank" rel="noopener">LuoguP3846</a></h3></li><li><h3 id="LuoguP2485"><a href="#LuoguP2485" class="headerlink" title="LuoguP2485"></a><a href="https://www.luogu.com.cn/problem/P2485" target="_blank" rel="noopener">LuoguP2485</a></h3></li></ul><h2 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">BSGS</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    a%=p,b%=p;</span><br><span class="line">    <span class="keyword">if</span> (a==<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (b==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="built_in">map</span> &lt;<span class="keyword">long</span> <span class="keyword">long</span>,<span class="keyword">long</span> <span class="keyword">long</span>&gt; M;</span><br><span class="line">    M.clear();</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> temp=b,m=<span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(p));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++,temp=temp*a%p) M[temp]=i;</span><br><span class="line">    temp=a=fastpow(a,m,p);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++,temp=temp*a%p) <span class="keyword">if</span> (M.count(temp)) <span class="keyword">return</span> i*m-M[temp];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="BSGS（拓展）"><a href="#BSGS（拓展）" class="headerlink" title="BSGS（拓展）"></a>BSGS（拓展）</h1><h2 id="解决的问题-5"><a href="#解决的问题-5" class="headerlink" title="解决的问题"></a>解决的问题</h2><p>已知关于 $x$ 的方程</p><script type="math/tex; mode=display">\large a^{x}\equiv b\text{ }(\text{ }mod\text{ }p\text{ })</script><p>并且</p><script type="math/tex; mode=display">\large gcd(a,p)>1</script><p>已知 $a,b,p$，求整数 $x$</p><h2 id="例题-6"><a href="#例题-6" class="headerlink" title="例题"></a>例题</h2><ul><li><h3 id="LuoguP4195"><a href="#LuoguP4195" class="headerlink" title="LuoguP4195"></a><a href="https://www.luogu.com.cn/problem/P4195" target="_blank" rel="noopener">LuoguP4195</a></h3></li></ul><h2 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">inv</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x,y,ans;</span><br><span class="line">    exgcd(a,p,x,y);</span><br><span class="line">    <span class="keyword">return</span> (x%p+p)%p;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">exBSGS</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a,<span class="keyword">long</span> <span class="keyword">long</span> b,<span class="keyword">long</span> <span class="keyword">long</span> p)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="number">1</span>||p==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> x,y,g,k=<span class="number">0</span>,na=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (g=exgcd(a,p,x,y))</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (g==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (b%g) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        k++;</span><br><span class="line">        b/=g;</span><br><span class="line">        p/=g;</span><br><span class="line">        na=na*(a/g)%p;</span><br><span class="line">        <span class="keyword">if</span> (na==b) <span class="keyword">return</span> k;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> ans=BSGS(a,b*inv(na,p)%p,p);</span><br><span class="line">    <span class="keyword">if</span> (ans==<span class="number">-1</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> ans+k;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;center&gt; Thematic001 &lt;/center&gt;
    
    </summary>
    
    
      <category term="Thematic" scheme="http://yoursite.com/categories/Thematic/"/>
    
    
  </entry>
  
  <entry>
    <title>快速幂</title>
    <link href="http://yoursite.com/Template002/"/>
    <id>http://yoursite.com/Template002/</id>
    <published>2019-11-09T13:01:47.295Z</published>
    <updated>2021-07-19T06:10:35.111Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><center> Template002 </center><a id="more"></a><p><a href="https://www.luogu.org/problem/P1226" target="_blank" rel="noopener">例题：LuoguP1226</a></p><h2 id="递归版"><a href="#递归版" class="headerlink" title="递归版"></a>递归版</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">pow</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> base,<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> power)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (power==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>%k;</span><br><span class="line">    <span class="keyword">if</span> (power==<span class="number">1</span>) <span class="keyword">return</span> base%k;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> l=<span class="built_in">pow</span>(base,power/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (power%<span class="number">2</span>==<span class="number">0</span>) <span class="keyword">return</span> (l*l)%k;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> (((l*l)%k)*base)%k;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="循环版"><a href="#循环版" class="headerlink" title="循环版"></a>循环版</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="title">power</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> base,<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> power)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (power&gt;<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (power&amp;<span class="number">1</span>) res=(res*base)%k;</span><br><span class="line">        base=(base*base)%k;</span><br><span class="line">        power&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;center&gt; Template002 &lt;/center&gt;
    
    </summary>
    
    
      <category term="Template" scheme="http://yoursite.com/categories/Template/"/>
    
    
  </entry>
  
  <entry>
    <title>快读</title>
    <link href="http://yoursite.com/Template003/"/>
    <id>http://yoursite.com/Template003/</id>
    <published>2019-11-09T13:00:11.991Z</published>
    <updated>2021-07-19T06:09:20.862Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><center> Template003 </center><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> nm=<span class="number">0</span>,fh=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> cw=getchar();</span><br><span class="line"><span class="keyword">for</span>(; !<span class="built_in">isdigit</span>(cw); cw=getchar()) <span class="keyword">if</span>(cw==<span class="string">'-'</span>) fh=-fh;</span><br><span class="line"><span class="keyword">for</span>(; <span class="built_in">isdigit</span>(cw); cw=getchar()) nm=nm*<span class="number">10</span>+(cw-<span class="string">'0'</span>);</span><br><span class="line"><span class="keyword">return</span> nm*fh;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;center&gt; Template003 &lt;/center&gt;
    
    </summary>
    
    
      <category term="Template" scheme="http://yoursite.com/categories/Template/"/>
    
    
  </entry>
  
  <entry>
    <title>高精度</title>
    <link href="http://yoursite.com/Template001/"/>
    <id>http://yoursite.com/Template001/</id>
    <published>2019-11-02T11:47:01.921Z</published>
    <updated>2021-07-19T06:09:15.843Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><center> Template001 </center><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (str1.length()&gt;str2.length()) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (str1.length()&lt;str2.length())  <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> str1.compare(str2);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">add</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> ans;</span><br><span class="line">    <span class="keyword">int</span> cf=<span class="number">0</span>,temp;</span><br><span class="line">    <span class="keyword">int</span> len1=str1.length();</span><br><span class="line">    <span class="keyword">int</span> len2=str2.length();</span><br><span class="line">    <span class="keyword">if</span> (len1&lt;len2) <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len2-len1;i++) str1=<span class="string">"0"</span>+str1;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len1-len2;i++) str2=<span class="string">"0"</span>+str2;</span><br><span class="line">    len1=str1.length();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=len1<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">      &#123;</span><br><span class="line">        temp=str1[i]-<span class="string">'0'</span>+str2[i]-<span class="string">'0'</span>+cf;</span><br><span class="line">        cf=temp/<span class="number">10</span>;</span><br><span class="line">        temp%=<span class="number">10</span>;</span><br><span class="line">        ans=<span class="keyword">char</span>(temp+<span class="string">'0'</span>)+ans;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">if</span> (cf!=<span class="number">0</span>) ans=<span class="keyword">char</span>(cf+<span class="string">'0'</span>)+ans;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">sub</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> ans;</span><br><span class="line">    <span class="keyword">int</span> tmp=str1.length()-str2.length(),cf=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=str2.length()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span>(str1[tmp+i]&lt;str2[i]+cf)</span><br><span class="line">          &#123;</span><br><span class="line">            ans=<span class="keyword">char</span>(str1[tmp+i]-str2[i]-cf+<span class="string">'0'</span>+<span class="number">10</span>)+ans;</span><br><span class="line">            cf=<span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            ans=<span class="keyword">char</span>(str1[tmp+i]-str2[i]-cf+<span class="string">'0'</span>)+ans;</span><br><span class="line">            cf=<span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=tmp<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span>(str1[i]-cf&gt;=<span class="string">'0'</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            ans=<span class="keyword">char</span>(str1[i]-cf)+ans;</span><br><span class="line">            cf=<span class="number">0</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">            ans=<span class="keyword">char</span>(str1[i]-cf+<span class="number">10</span>)+ans;</span><br><span class="line">            cf=<span class="number">1</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ans.erase(<span class="number">0</span>,ans.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">mul</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> ans;</span><br><span class="line">    <span class="keyword">int</span> len1=str1.length();</span><br><span class="line">    <span class="keyword">int</span> len2=str2.length();</span><br><span class="line">    <span class="built_in">string</span> tempstr;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len2<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">      &#123;</span><br><span class="line">        tempstr=<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> temp=str2[i]-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> cf=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (temp!=<span class="number">0</span>)</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=len2<span class="number">-1</span>-i;j++) tempstr+=<span class="string">"0"</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=len1<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">              &#123;</span><br><span class="line">                t=(temp*(str1[j]-<span class="string">'0'</span>)+cf)%<span class="number">10</span>;</span><br><span class="line">                cf=(temp*(str1[j]-<span class="string">'0'</span>)+cf)/<span class="number">10</span>;</span><br><span class="line">                tempstr=<span class="keyword">char</span>(t+<span class="string">'0'</span>)+tempstr;</span><br><span class="line">              &#125;</span><br><span class="line">            <span class="keyword">if</span> (cf!=<span class="number">0</span>) tempstr=<span class="keyword">char</span>(cf+<span class="string">'0'</span>)+tempstr;</span><br><span class="line">          &#125;</span><br><span class="line">        ans=add(ans,tempstr);</span><br><span class="line">      &#125;</span><br><span class="line">    ans.erase(<span class="number">0</span>,ans.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">div</span><span class="params">(<span class="built_in">string</span> str1,<span class="built_in">string</span> str2,<span class="built_in">string</span> &amp;quotient,<span class="built_in">string</span> &amp;residue)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    quotient=residue=<span class="string">""</span>;</span><br><span class="line">    <span class="keyword">if</span> (str2==<span class="string">"0"</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        quotient=residue=<span class="string">"ERROR"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">if</span> (str1==<span class="string">"0"</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        quotient=residue=<span class="string">"0"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">int</span> res=compare(str1,str2);</span><br><span class="line">    <span class="keyword">if</span> (res&lt;<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        quotient=<span class="string">"0"</span>;</span><br><span class="line">        residue=str1;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (res==<span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        quotient=<span class="string">"1"</span>;</span><br><span class="line">        residue=<span class="string">"0"</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">int</span> len1=str1.length();</span><br><span class="line">        <span class="keyword">int</span> len2=str2.length();</span><br><span class="line">        <span class="built_in">string</span> tempstr;</span><br><span class="line">        tempstr.append(str1,<span class="number">0</span>,len2<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=len2<span class="number">-1</span>;i&lt;len1;i++)</span><br><span class="line">          &#123;</span><br><span class="line">            tempstr=tempstr+str1[i];</span><br><span class="line">            tempstr.erase(<span class="number">0</span>,tempstr.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">            <span class="keyword">if</span> (tempstr.empty()) tempstr=<span class="string">"0"</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">char</span> ch=<span class="string">'9'</span>;ch&gt;=<span class="string">'0'</span>;ch--)</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="built_in">string</span> str,tmp;</span><br><span class="line">                str=str+ch;</span><br><span class="line">                tmp=mul(str2,str);</span><br><span class="line">                <span class="keyword">if</span> (compare(tmp,tempstr)&lt;=<span class="number">0</span>)</span><br><span class="line">                  &#123;</span><br><span class="line">                    quotient=quotient+ch;</span><br><span class="line">                    tempstr=sub(tempstr,tmp);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        residue=tempstr;</span><br><span class="line">      &#125;</span><br><span class="line">    quotient.erase(<span class="number">0</span>,quotient.find_first_not_of(<span class="string">'0'</span>));</span><br><span class="line">    <span class="keyword">if</span> (quotient.empty()) quotient=<span class="string">"0"</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;center&gt; Template001 &lt;/center&gt;
    
    </summary>
    
    
      <category term="Template" scheme="http://yoursite.com/categories/Template/"/>
    
    
  </entry>
  
</feed>
